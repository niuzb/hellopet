/*
1. 包格式:
     total_len(u32) + header_len(u32) + msghead + msgbody
	|   整包长度   |  包头长度（包括本身） | 包头 | 包体 |

2. 使用规则：
    (1) 包头格式绝对不能改；
	(2) 字段只能加，不能减；
	(3) 增加的字段只能是optional类型，且必须给出default值，最好还有相关说明；
	(4) 不能改变原来字段的序号。

3. 命名规则：
	XXXX_in/_out：以大写DB开头，Online发来的请求以_in结尾，sw应答包以_out结尾，
					中间的XXXX代表对应的功能，比如reg_server_in/_out。
*/
enum SW_OPT_T {
	SW_PLAYER_LOGIN			= 1;
	SW_PLAYER_LOGOUT		= 2;
}

enum MAIL_STATUS_T {
    MAIL_STATUS_NEW                     = 0;    // 新增
    MAIL_STATUS_UNREAD                  = 1;    // 未阅
    MAIL_STATUS_READ                    = 2;    // 已阅
	MAIL_STATUS_GOT						= 3;	// 已领取
    MAIL_STATUS_DEL                     = 4;    // 已删除   
}

// 和SW通讯的头部
/* 包头 */
message sw_msgheader_t {
    required string msg_name		  	= 1;    // 协议名
    optional uint32 ret 				= 2;
	optional uint64 gateway_session     = 3;
}

message sw_errorcode_out {

}
/* 包体 (只有 _out/_in 的 才是用于通信的, 否则就是在 _in/_out 里被用到的结构体) */

// 玩家基本信息
message player_basic_info_t {
	required uint32 userid 			= 1;	// 米米号
	required uint32 reg_time 		= 2;	// 玩家注册时间
	required uint32 channel_id		= 3;	// 玩家渠道号
}
// 邮件基本信息
message mail_info_t {
    required uint64 mail_id             = 1;    // 邮件id
    required uint32 mail_status         = 2;    // 邮件状态(0:新增 1:未阅 2:已阅 3:已删除(删除状态是真的删除还是置标志位再讨论))
}

//------------------协议部分---------------------------//

// server(online) 启动上报 
message reg_server_in {
    required uint32 server_id 		= 1; 	/* 服务器编号 */
    required uint32 listen_port 	= 2;	/*服务器的监听端口 服务器的IP已经在fdsession中有了*/
}
message reg_server_out {

}

// 上报成功后,假如online此时已经有玩家连线(online断线后重连sw)需要同步玩家数据 不需要回包
message online_notify_sync_player_info_in {
    repeated player_basic_info_t player_list = 1; // 如果是重新连接到sw,则需上报已在online上的玩家信息
}

// 玩家登录/下线时上报 不需要回包
message online_notify_report_player_onoff_in {
    required player_basic_info_t basic 	= 1;
    required uint32 login_or_logout 	= 2;//1上线 2下线
}

// 踢人下线通知包(一个uid + channel_id 只能同时有一个reg_time在线)
message sw_notify_kick_player_off_out {
    required player_basic_info_t basic = 1;
}

// --------------------邮件协议-------------------//
message add_new_mail_in{
	required bytes title               = 1;    // 邮件名称
	required bytes from                = 2;    // 发件人
	required bytes content             = 3;    // 内容
	repeated sw_attach_item items      = 4;    // 附件
}

message add_new_mail_out{
	required int32 mail_id		   = 1;    //邮件编号
}

message userinfo{
	required uint32 userid          = 1;    // 米米号
	required uint32 reg_time        = 2;    // 玩家注册时间
	required uint32 channel_id      = 3;    // 玩家渠道号
	required uint32 zone_id			= 4;	// 服务器
	required uint32 mail_id			= 5;	// 邮件编号
	required uint32 hasattach		= 6;	// 是否有附件

}

message add_new_mail_rel_in{
	repeated userinfo info			= 1;	//邮件用户信息
}

message add_new_mail_rel_out{
}

message mail_rel_flush_in{			//邮件关系到数据库

}

message mail_rel_flush_out{			//邮件关系到数据库

}

message serial_online_rsp{
	required player_basic_info_t basic = 1;    //基础信息
	required uint32 zone_id			   = 2;	   //服务器号
	required bytes msg_name	   		   = 3;    //消息名
	required bytes msg_body        	   = 4;    //消息体
}


message sw_attach_item{
	required uint32 id					= 1;	//物品编号
	required uint32 num					= 2;	//物品数目
}

message sw_style{
	required uint32 red					= 1;	//颜色
	required uint32 green				= 2;	//绿色
	required uint32 blue				= 3;	//蓝色
	required bytes text					= 4;	//文本
	optional uint32 fontsize			= 5;    //字体大小
	optional bytes title				= 6;    //标题
}


message sw_announcement{
	repeated sw_style  context          = 1;	//内容
	optional uint32 from				= 2;	//起止时间
	optional uint32 to 				    = 3;	//截止时间
	optional uint32 count				= 4;	//次数
	required uint32 ann_id				= 5;	//id
}

message sw_login_announcement_in{
	required uint32 channelid			= 1;	//渠道号
	required sw_announcement note		= 2;	//公告
}

message sw_login_announcement_kefu_out{

}

message sw_announcement_in{
	required uint32 zone_id            	= 1;	//服务器
	repeated sw_announcement note		= 2;	//公告
}

message sw_announcement_out{
	repeated sw_announcement note		= 2;	//公告
}


message sw_announcement_kefu_out{

}

message sw_ma_advertising_in{
	required uint32 zone_id				= 1;	//服务器
	repeated sw_style content			= 2;    //内容
}

message sw_ma_advertising_kefu_out{

}

message sw_ma_advertising_out{
	repeated sw_style content			= 1;    //内容
}

// ------------------------- 充值 ---------------------------------------------//
message sw_add_diamond_in {
	required uint32 userid              = 1;
	required uint32 reg_tm              = 2;
	required uint32 channel_id          = 3;
	required uint32 add_diamond_num     = 4;    // 需要添加钻石的数量
	required uint64 order_index         = 5;    // 订单index
}
message sw_add_diamond_out {
	required uint64 order_index         = 1;    // 订单index
}

// ------------------------- 邮件 ---------------------------------------------//
//-------------------- mail svc 和online 通信部分 ----------------------------
// online 请求邮件列表
message sw_get_player_mail_list_in {
    required player_basic_info_t player     = 1;    // 玩家信息
}
message sw_get_player_mail_list_out {
    required player_basic_info_t player     = 1;    // 玩家信息
    repeated mail_info_t mails              = 2;    // 玩家邮件信息
}
// online 更新邮件列表 (不等mail svc回包)
message sw_update_player_mail_list_in {
    required player_basic_info_t player     = 1;    // 玩家信息
    repeated mail_info_t mails              = 2;    // 玩家邮件信息
}
// mail svc 通知online 有新邮件(不等online回包)
message sw_notify_player_new_mail_out {
    repeated player_basic_info_t players    = 1;    // 玩家信息(size = 0时通知全服玩家有新邮件)
    required mail_info_t new_mail           = 2;    // 玩家新邮件信息
}

//-------------------- mail svc 和login 通信部分 ----------------------------
// 玩家信息同步到leveldb(方便对全服的玩家发送邮件) login server 会调用
message sw_create_new_player_in {
	required uint32 server_id               = 1;    // 玩家服务器id
	required player_basic_info_t player     = 2;    // 玩家信息
}

//-------------------- gm 和switch 通信部分 ----------------------------
// 添加新邮件
message sw_add_new_mail_in {
	message item_attachment {
		required uint32 item_id				= 1;	// 物品id
		required uint32 item_num			= 2;	// 物品数量
//		required uint32 item_level			= 3;	// 物品等级 (默认都是1)
	}
	required uint32 server_id				= 1;	// 邮件所属服务器id
	required bytes title               		= 2;    // 邮件名称
	required bytes from                		= 3;    // 发件人
	required bytes content             		= 4;    // 内容
	repeated item_attachment items      	= 5;    // 附件
}
message sw_add_new_mail_out {
	required uint32 mail_id_high			= 1;	// 添加邮件的id 高32位
	required uint32 mail_id_low				= 2;	// 添加邮件的id 低32位
	required uint32 server_id				= 3;	// 邮件所属服务器id
}
// 给玩家添加新邮件(包长控制在60K以内, 每次大约最多给5000人添加新邮件)
message sw_add_new_mail_to_players_in {
	required uint32 mail_id_high			= 1;	// 添加邮件的id 高32位
	required uint32 mail_id_low				= 2;	// 添加邮件的id 低32位
    required uint32 server_id               = 3;    // 邮件所属服务器id
    repeated player_basic_info_t players    = 4;    // 需要添加邮件的玩家(如果size=0, 则给全服人添加新邮件)
	required uint32 page_num				= 5;	// 当前页数(swith 会原样返回给GM, GM接到回包后,继续添加page_num+1的用户信息)
}
message sw_add_new_mail_to_players_out {
	required uint32 mail_id_high			= 1;	// 添加邮件的id 高32位
	required uint32 mail_id_low				= 2;	// 添加邮件的id 低32位
	required uint32 server_id               = 3;    // 邮件所属服务器id
	required uint32 page_num                = 4;	// 当前页数
}

// ------------------------- 邮件 end ---------------------------------------------//
