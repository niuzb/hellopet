// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_core.proto

#ifndef PROTOBUF_cs_5fcore_2eproto__INCLUDED
#define PROTOBUF_cs_5fcore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cs_5fcore_2eproto();
void protobuf_AssignDesc_cs_5fcore_2eproto();
void protobuf_ShutdownFile_cs_5fcore_2eproto();

class BasicUserBattleInfo;
class UserSkillPart;
class UserSkillInfo;
class BasicUserInfo;
class CSEnterMapReq;
class CSEnterMapRsp;
class CSLeaveMapRsp;
class CSGetMapUsersReq;
class CSGetMapUsersRsp;
class CSGetUserSkillReq;
class CSGetUserSkillRsp;
class CSGetUserInfoReq;
class CSGetUserInfoRsp;
class CSAddUserSkillReq;
class CSAddUserSkillRsp;
class CSUserSkillDiffReq;
class CSUserSkillDiffRsp;
class CSSkillUpdateValidRsq;
class CSWalkReq;
class CSWalkRsp;
class CSItemAttr;
class CSEquipHole;
class EquipmentBase;
class EquipmentBase_Item_Attr;
class SpiritStoneBase;
class ManorBase;
class CSItemInfo;
class CSAllItemsReq;
class CSAllItemsRsp;
class CSItemAddRsp;
class CSItemRemoveReq;
class CSItemRemoveRsp;
class CSItemUseReq;
class CSItemUseRsp;
class CSItemMoveReq;
class CSItemMoveRsp;
class CSItemUpdateRsp;
class CSItemOrderReq;
class CSItemMoveToRecycleBinReq;
class CSItemMoveToRecycleBinRsp;
class CSRepoRecycleBinItemReq;
class CSRepoRecycleBinItemRsp;
class CSInstanceInfo;
class CSInstanceReq;
class CSInstanceRsp;
class CSGetUGCityBoxRewardReq;
class CSGetUGCityBoxRewardRsp;
class CSReward;
class CSReward_RewardInfo;
class CSLevelUpRsp;
class CSBasicUserBattleInfoRsp;
class CSSearchSpiritStoneReq;
class CSSearchSpiritStoneRsp;
class CSSpiritStoneMoveBagReq;
class CSSpiritStoneMoveBagRsp;
class CSSpiritStoneLevelUpReq;
class CSSpiritStoneLevelUpRsp;
class CSSpiritStoneToSPReq;
class CSSpiritStoneToSPRsp;
class CSGetExchangeSSInfoReq;
class ExchangeSSInfo;
class CSGetExchangeSSInfoRsp;
class CSAddManorReq;
class CSAddManorRsp;
class CSWarmSportLvUpReq;
class CSWarmSportLvUpRsp;
class CSManorOptReq;
class CSManorOptRsp;
class CSMonListReq;
class MonInfo;
class CSMonListRsp;
class CSSetMonStatusReq;
class CSSetMonStatusRsp;
class CSPVPQueryRoomReq;
class PVPRoomBase;
class CSPVPQueryRoomRsp;
class CSPVPBaseInfoRsp;
class CSPVPCreateRoomReq;
class CSPVPJoinRoomReq;
class PVPSeatBase;
class CSPVPJoinRoomRsp;
class CSPVPExitRoomReq;
class CSPVPExitRoomRsp;
class CSPVPCloseRoomRsp;
class CSPVPChangeSeatReq;
class CSPVPReadyReq;
class CSPVPCancelReadyReq;
class CSPVPKickoffReq;
class CSPVPKickoffRsp;
class CSPVPStartReq;
class CSPVPStartRsp;
class CSPPVEBattleReq;
class CSPPVEBattleRsp;
class CSPVEQueryRoomReq;
class PVERoomBase;
class CSPVEQueryRoomRsp;
class CSPVEBaseInfoRsp;
class CSPVECreateRoomReq;
class CSPVEJoinRoomReq;
class CSPVEJoinRoomFailureRsp;
class PVESeatBase;
class CSPVEJoinRoomRsp;
class CSPVEExitRoomReq;
class CSPVEExitRoomRsp;
class CSPVECloseRoomRsp;
class CSPVEReadyReq;
class CSPVECancelReadyReq;
class CSPVEKickoffReq;
class CSPVEKickoffRsp;
class CSPVEStartReq;
class CSPVEStartRsp;
class CSPVAIReq;
class CSPVAIInfoReq;
class CSPVAIInfoRsq;
class CSPVAIInfoRsq_CSPVAIInfo;
class CSPVAIInfoRsq_CSPVAILog;
class CSPVP2Req;
class CSPVP2CancelReq;
class CSPVXRewardRsp;
class CSEquipInlayGemReq;
class CSEquipInlayGemRsp;
class CSResetGemAttrReq;
class CSResetGemAttrRsp;
class CSEquipmentStrengthReq;
class CSEquipmentStrengthRsp;
class CSEquipmentComposeReq;
class CSEquipmentComposeRsp;
class CSTaskInfoReq;
class TaskInfo;
class CSTaskInfoRsp;
class CSTaskDoStepReq;
class CSTaskDoStepRsp;
class CSTaskLogReq;
class CSTaskLogRsp;
class CSTaskStatusReq;
class CSTaskStatusRsp;
class DailyTaskInfo;
class CSDailyTaskInfoReq;
class CSDailyTaskInfoRsp;
class CSAcceptDailyTaskReq;
class CSAcceptDailyTaskRsp;
class CSGiveUpDailyTaskReq;
class CSGiveUpDailyTaskRsp;
class CSGetDailyTaskRewardReq;
class CSGetDailyTaskRewardRsp;
class CSNotifyUpdateDailyTaskInfoRsp;
class CSGetDailyGoalRewardReq;
class CSGetDailyGoalRewardRsp;
class CSGetDailyRewardReq;
class CSGetDailyRewardRsp;
class CSSelectPVAIACCURewardReq;
class CSSelectPVAIACCURewardRsp;
class CSAttributesSetReq;
class CSAttributesReq;
class CSAttributesRsp;
class CSAttributesRsp_KeyValue;
class CSOnceSetReq;
class CSOnceReq;
class CSOnceRsp;
class CSOnceRsp_Once;
class CSTrainInfoReq;
class CSTrainInfoRsp;
class CSTrainReq;
class CSTrainRsp;
class CSTrainDetermineReq;
class CSTrainDetermineRsp;
class CSExploreReq;
class CSExploreRsp;
class CSExploreDetermineReq;
class CSExploreDetermineRsp;
class CSQueryDowerReq;
class CSQueryDowerRsp;
class CSQueryDowerRsp_Dower;
class CSDowerInfoReq;
class CSDowerInfoRsp;
class CSDowerReq;
class CSDowerRsp;
class CSABMonsterReq;
class CSABMonsterRsp;
class CSABMonsterRsp_MonInfo;
class CSAutoBattleReq;
class CSAutoBattleRsp;
class CSABRewardRsp;
class CSCancelAutoBattleReq;
class CSCancelAutoBattleRsp;
class CSExchangeParameterReq;
class CSExchangeParameterRsp;
class ShopItemInfo;
class ShopItemInfo_Item;
class CSGetShopItemsReq;
class CSGetShopItemsRsp;
class CSBuyShopItemReq;
class CSBuyShopItemRsp;
class CSGetUserItemReq;
class CSGetUserItemRsp;
class CSGetUserAttributesReq;
class CSGetUserAttributesRsp;
class CSNotifyMoneyConfInfoRsp;
class CSNotifyLevelConfInfoRsp;
class CSNotifyVipConfInfoRsp;
class CSNotifyCliSysFlagRsp;
class CSNotifyCliSysFlagRsp_SysFlag;
class PartnerInfo;
class CSNearByReq;
class CSNearByRsp;
class CSPartnerInfoReq;
class CSAddPartnerReq;
class CSDelPartnerReq;
class CSPartnerInfoRsp;
class CSAddPartnerRsp;
class CSDelPartnerRsp;
class DndInfo;
class CSAddDndReq;
class CSDndInfoReq;
class CSDelDndReq;
class CSDndInfoRsp;
class CSAddDndRsp;
class CSDelDndRsp;
class CSNoteReq;
class CSNoteRsp;
class CSNoteShow;
class CSMailReq;
class AttachItem;
class CSMailRsp;
class MailList;
class CSMailListReq;
class CSMailListRsp;
class CSDelMailReq;
class CSDelMailRsp;
class CSGetAttachReq;
class CSGetAttachRsp;
class CSNewMailRsp;
class CSActivityListReq;
class Activity_Step;
class Activity_Info;
class CSActivityListRsp;
class CSGetActivityRewardReq;
class CSGetActivityRewardRsp;
class CSUpdateActivityInfoRsp;
class CSDelActivityInfoRsp;
class CSCDEFQueryRoomReq;
class CDEFRoomBase;
class CSCDEFQueryRoomRsp;
class CSCDEFBaseInfoRsp;
class CSCDEFCreateRoomReq;
class CSCDEFJoinRoomReq;
class CSCDEFJoinRoomFailureRsp;
class CDEFSeatBase;
class CSCDEFJoinRoomRsp;
class CSCDEFExitRoomReq;
class CSCDEFCloseRoomRsp;
class CSCDEFReadyReq;
class CSCDEFCancelReadyReq;
class CSCDEFKickoffReq;
class CSCDEFKickoffRsp;
class CSCDEFStartReq;
class CSGetSpecActivityTimeReq;
class CSGetSpecActivityTimeRsp;
class CSGetSpecActivityTimeRsp_Inter;
class CSCDEFStartRsp;
class Announcement;
class CSLoginAnnouncementPreRsp;
class CSLoginAnnouncementRsp;
class CSAnnouncementPreRsp;
class CSAnnouncementReq;
class CSAnnouncementRsp;
class CSMaAdvertisingRsp;
class CSStyle;
class CSMaStyle;
class CSNotifyRewardToOtherRsp;
class CSMailInfo;
class CSMailInfo_Item_AM_t;
class CSGetMailListReq;
class CSGetMailListRsp;
class CSSetMailStatusReq;
class CSSetMailStatusRsp;
class CSNotifyHasNewMailRsp;

enum CSNotifyCliSysFlagRsp_SysIndex {
  CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM = 2
};
bool CSNotifyCliSysFlagRsp_SysIndex_IsValid(int value);
const CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MIN = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
const CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
const int CSNotifyCliSysFlagRsp_SysIndex_SysIndex_ARRAYSIZE = CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSNotifyCliSysFlagRsp_SysIndex_descriptor();
inline const ::std::string& CSNotifyCliSysFlagRsp_SysIndex_Name(CSNotifyCliSysFlagRsp_SysIndex value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSNotifyCliSysFlagRsp_SysIndex_descriptor(), value);
}
inline bool CSNotifyCliSysFlagRsp_SysIndex_Parse(
    const ::std::string& name, CSNotifyCliSysFlagRsp_SysIndex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSNotifyCliSysFlagRsp_SysIndex>(
    CSNotifyCliSysFlagRsp_SysIndex_descriptor(), name, value);
}
enum CSAddPartnerRsp_AddPartnerType {
  CSAddPartnerRsp_AddPartnerType_succ = 1,
  CSAddPartnerRsp_AddPartnerType_existed = 2,
  CSAddPartnerRsp_AddPartnerType_nofound = 3,
  CSAddPartnerRsp_AddPartnerType_overflow = 4,
  CSAddPartnerRsp_AddPartnerType_self = 5
};
bool CSAddPartnerRsp_AddPartnerType_IsValid(int value);
const CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp_AddPartnerType_AddPartnerType_MIN = CSAddPartnerRsp_AddPartnerType_succ;
const CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX = CSAddPartnerRsp_AddPartnerType_self;
const int CSAddPartnerRsp_AddPartnerType_AddPartnerType_ARRAYSIZE = CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CSAddPartnerRsp_AddPartnerType_descriptor();
inline const ::std::string& CSAddPartnerRsp_AddPartnerType_Name(CSAddPartnerRsp_AddPartnerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CSAddPartnerRsp_AddPartnerType_descriptor(), value);
}
inline bool CSAddPartnerRsp_AddPartnerType_Parse(
    const ::std::string& name, CSAddPartnerRsp_AddPartnerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CSAddPartnerRsp_AddPartnerType>(
    CSAddPartnerRsp_AddPartnerType_descriptor(), name, value);
}
enum PB_PLAYET_ATTR_T {
  PB_ATTR_PLAYER_SS_MOD_ID = 2,
  PB_ATTR_PLAYER_GEM_BACKPACK_CAPACITY = 6,
  PB_ATTR_PLAYER_RESET_GEM_TIMES = 11,
  PB_ATTR_EQUIP_LVUP_FLAG = 12,
  PB_ATTR_EFFECTIVENESS = 13,
  PB_ATTR_PLAYER_ENTER_MANOR_TIMES = 16,
  PB_ATTR_PLAYER_EXPLORE_TIMES = 21,
  PB_ATTR_RECYCLE_BIN_START_POS = 26,
  PB_ATTR_HOLD_ON_LINE_ACCU_TIME = 30,
  PB_ATTR_GET_DAILY_GOALS_REWARD_TIMES = 36,
  PB_ATTR_UGCITY_BOXES_STATUS = 40,
  PB_ATTR_UGCITY_BOXES_RESET_TIMES = 41,
  PB_ATTR_UGCITY_BOXES_OPEN_NUM = 42,
  PB_ATTR_PLAYER_PVAI_TIMES = 50,
  PB_ATTR_PLAYER_PVP_TIMES = 51,
  PB_ATTR_PLAYER_CDEF_TIMES = 52,
  PB_ATTR_PLAYER_VIP_LV = 60,
  PB_ATTR_BUY_DIAMOND_ACCU = 61,
  PB_ATTR_CONTINUE_LOGIN_TIMES = 65,
  PB_ATTR_DIAMOND_EX_POWER_TIMES = 70,
  PB_ATTR_CONSTEL_MIN_DEF = 100,
  PB_ATTR_CONSTEL_1_CAPACIT = 101,
  PB_ATTR_CONSTEL_2_CAPACIT = 102,
  PB_ATTR_CONSTEL_3_CAPACIT = 103,
  PB_ATTR_CONSTEL_4_CAPACIT = 104,
  PB_ATTR_CONSTEL_5_CAPACIT = 105,
  PB_ATTR_CONSTEL_6_CAPACIT = 106,
  PB_ATTR_CONSTEL_7_CAPACIT = 107,
  PB_ATTR_CONSTEL_8_CAPACIT = 108,
  PB_ATTR_CONSTEL_9_CAPACIT = 109,
  PB_ATTR_CONSTEL_10_CAPACIT = 110,
  PB_ATTR_CONSTEL_11_CAPACIT = 111,
  PB_ATTR_CONSTEL_12_CAPACIT = 112,
  PB_ATTR_DAILY_TIMES_BEGIN = 5000,
  PB_ATTR_DAILY_TIMES_LGION = 5010,
  PB_ATTR_DAILY_TIMES_PAY = 5020,
  PB_ATTR_DAILY_TIMES_HERO_TREASURE = 5030,
  PB_ATTR_DAILY_TIMES_EXPLORE = 5040,
  PB_ATTR_DAILY_TIMES_EQUIP_LVUP = 5050,
  PB_ATTR_DAILY_TIMES_PVE_WIN = 5060,
  PB_ATTR_DAILY_TIMES_PVAI_BTL = 5070,
  PB_ATTR_DAILY_TIMES_CARD_COMPOSE = 5080,
  PB_ATTR_DAILY_TIMES_PVE2_WIN = 5090,
  PB_ATTR_DAILY_TIMES_PPVE_WIN = 5100,
  PB_ATTR_DAILY_TIMES_TRAINING = 5110,
  PB_ATTR_DAILY_TIMES_DAILY_TASK = 5120,
  PB_ATTR_DAILY_TIMES_SEARCH_SS = 5130,
  PB_ATTR_DAILY_TIMES_ENTER_MANOR = 5140,
  PB_ATTR_DAILY_TIMES_GEM_RESET = 5150,
  PB_ATTR_DAILY_TIMES_PVE3 = 5160,
  PB_ATTR_DAILY_TIMES_CONSUME_DIAMOND = 5200,
  PB_ATTR_DAILY_TIMES_SKILL_LVUP = 5201,
  PB_ATTR_DAILY_TIMES_DOWER_LVUP = 5202,
  PB_ATTR_DAILY_TIMES_END = 5500,
  PB_ATTR_GET_DAILY_REWARD_BEGIN = 6000,
  PB_ATTR_GET_DAILY_PAY_REWARD_TIME = 6000,
  PB_ATTR_GET_DAILY_LOGIN_UI_FLAG = 6001,
  PB_ATTR_GET_PVAI_REWARD_TIME = 6002,
  PB_ATTR_GET_HOLD_EXP_TIME = 6003,
  PB_ATTR_GET_REWARD_BY_VIP_LV = 6004,
  PB_ATTR_GET_FIRST_BUY_DIAMOND_REWARD_TIME = 6005,
  PB_ATTR_GET_DAILY_LOGIN_REWARD_TIME = 6099,
  PB_ATTR_GET_DAILY_VIP_REWARD_TIME = 6100,
  PB_ATTR_GET_DAILY_REWARD_END = 6100,
  PB_ATTR_DEF_MIN_CD = 300000,
  PB_ATTR_EQUIP_LVUP_CD = 300100,
  PB_ATTR_DOWER_LVUP_CD = 300200,
  PB_ATTR_SKILL_LVUP_CD = 300300,
  PB_ATTR_PVAI_CD = 300400,
  PB_ATTR_AB_NORMAL_MAP_CD = 300500,
  PB_ATTR_AB_SPECIAL_MAP_CD = 300501,
  PB_ATTR_AB_UGCITY_MAP_CD = 300502,
  PB_ATTR_WOELD_BOSS_CD = 300600,
  PB_ATTR_MANOR_CD = 300700,
  PB_ATTR_SHOP_CD = 300800,
  PB_ATTR_DEF_MAX_CD = 309999,
  PB_ATTR_DEF_MIN_OTHER = 310000,
  PB_ATTR_DEF_MAX_OTHER = 314999,
  PB_ATTR_RESET_GEM_BUY_TIMES = 315000,
  PB_ATTR_MANOR_BUY_TIMES = 315100,
  PB_ATTR_DEF_MAX_BUY_TIMES = 319999,
  PB_ATTR_DEF_MIN_CAPACITY = 320000,
  PB_ATTR_BUY_MANOR_CAPACITY = 320000,
  PB_ATTR_BUY_SKILL_CAPACITY = 320100,
  PB_ATTR_BUY_CONSTEL_CAPACITY = 320150,
  PB_ATTR_BUY_EQUIP_HOLE_CAPACITY = 320170,
  PB_ATTR_BUY_SS_BAG_CAPACITY = 320200,
  PB_ATTR_BUY_BAG_CAPACITY = 320300,
  PB_ATTR_BUY_STORE_CAPACITY = 320400,
  PB_ATTR_DEF_MAX_CAPACITY = 329999,
  PB_ATTR_PLAYER_STAMINA = 416000,
  PB_ATTR_PLAYER_COIN = 416001,
  PB_ATTR_PLAYER_DIAMOND = 416002,
  PB_ATTR_EXP = 416003,
  PB_ATTR_PLAYER_PRESTIGE = 416004,
  PB_ATTR_PLAYER_GEM_ANIMA = 416005,
  PB_ATTR_PLAYER_SS_CHIP = 416006,
  PB_ATTR_PLAYER_EXPLOIT = 416007,
  PB_ATTR_PLAYER_EXPLORE_EXP = 416008,
  PB_ATTR_PLAYER_HERALDRY = 416009,
  PB_ATTR_PLAYER_SP = 416010,
  PB_ATTR_PLAYER_HOLD_EXP = 416100,
  PB_ATTR_PLAYER_STORE_EXP = 416101,
  PB_ATTR_DAILY_GOALS_ACTIVITY = 475001,
  PB_ATTR_SEGMENT_DEF = 999999,
  PB_ATTR_PLAYER_LAST_LOGIN_MAP = 1000001,
  PB_ATTR_LAST_EXPLORE_ID = 1000002,
  PB_ATTR_SET_ONCE_BEGIN = 1100000,
  PB_ATTR_SET_ONCE_END = 1200000,
  PB_ATTR_SET_BEGIN = 1200001,
  PB_ATTR_SET_END = 1200100,
  PB_ATTR_DOWER_START = 1210000,
  PB_ATTR_DOWER_END = 1220000,
  PB_ATTR_SHOP_ITEM_START = 1230000,
  PB_ATTR_SHOP_ITEM_END = 1230100,
  PB_ATTR_SHOP_ITEM_BUY_START = 1230200,
  PB_ATTR_SHOP_ITEM_BUY_END = 1230300,
  PB_ATTR_SPIRIT_SYS_NOT_FIRST_USED = 1240000,
  PB_ATTR_SPOP_SYS_NOT_FIRST_USED = 1240001,
  PB_ATTR_PLAYER_LAST_LOGIN_OUT_TIME = 1250000,
  PB_ATTR_SET_ONCE_DAILY_BEGIN = 1300000,
  PB_ATTR_SET_ONCE_DAILY_END = 1400000,
  PB_ATTR_PPVE_TIMES_DAILY_BEGIN = 1500000,
  PB_ATTR_PPVE_TIMES_DAILY_END = 1600000,
  PB_ATTR_PHYSICAL_ATTACK_ADD = 2010000,
  PB_ATTR_MAGIC_ATTACK_ADD = 2020000,
  PB_ATTR_SKILL_ATTACK_ADD = 2030000,
  PB_ATTR_PHYSICAL_DEFENCE_ADD = 2040000,
  PB_ATTR_MAGIC_DEFENCE_ADD = 2050000,
  PB_ATTR_SKILL_DEFENCE_ADD = 2060000,
  PB_ATTR_HP_ADD = 2070000,
  PB_ATTR_COURAGE_ADD = 2080000,
  PB_ATTR_CHARM_ADD = 2090000,
  PB_ATTR_TRICK_ADD = 2100000,
  PB_ATTR_AUTO_BTL_INSTANCE_ID = 3000001,
  PB_ATTR_AUTO_BTL_REMAIN_TURN = 3000002
};
bool PB_PLAYET_ATTR_T_IsValid(int value);
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MIN = PB_ATTR_PLAYER_SS_MOD_ID;
const PB_PLAYET_ATTR_T PB_PLAYET_ATTR_T_MAX = PB_ATTR_AUTO_BTL_REMAIN_TURN;
const int PB_PLAYET_ATTR_T_ARRAYSIZE = PB_PLAYET_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_PLAYET_ATTR_T_descriptor();
inline const ::std::string& PB_PLAYET_ATTR_T_Name(PB_PLAYET_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_PLAYET_ATTR_T_descriptor(), value);
}
inline bool PB_PLAYET_ATTR_T_Parse(
    const ::std::string& name, PB_PLAYET_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_PLAYET_ATTR_T>(
    PB_PLAYET_ATTR_T_descriptor(), name, value);
}
enum PB_ITEM_ATTR_T {
  PB_ITEM_ATTR_PHYATK = 1,
  PB_ITEM_ATTR_MAGATK = 2,
  PB_ITEM_ATTR_SKIATK = 3,
  PB_ITEM_ATTR_PHYDEF = 4,
  PB_ITEM_ATTR_MAGDEF = 5,
  PB_ITEM_ATTR_SKIDEF = 6,
  PB_ITEM_ATTR_HP = 7,
  PB_ITEM_ATTR_ACCU = 8,
  PB_ITEM_ATTR_DODG = 9,
  PB_ITEM_ATTR_WRK = 10,
  PB_ITEM_ATTR_PARRY = 11,
  PB_ITEM_ATTR_CRIT = 12,
  PB_ITEM_ATTR_TENA = 13,
  PB_ITEM_ATTR_SLY = 14,
  PB_ITEM_ATTR_SPEED = 15
};
bool PB_ITEM_ATTR_T_IsValid(int value);
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MIN = PB_ITEM_ATTR_PHYATK;
const PB_ITEM_ATTR_T PB_ITEM_ATTR_T_MAX = PB_ITEM_ATTR_SPEED;
const int PB_ITEM_ATTR_T_ARRAYSIZE = PB_ITEM_ATTR_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ITEM_ATTR_T_descriptor();
inline const ::std::string& PB_ITEM_ATTR_T_Name(PB_ITEM_ATTR_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ITEM_ATTR_T_descriptor(), value);
}
inline bool PB_ITEM_ATTR_T_Parse(
    const ::std::string& name, PB_ITEM_ATTR_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ITEM_ATTR_T>(
    PB_ITEM_ATTR_T_descriptor(), name, value);
}
enum PB_TASK_STATUS_T {
  PB_TASK_CANT_TOUCH = 0,
  PB_TASK_TOUCH = 1,
  PB_TASK_FINISH = 2
};
bool PB_TASK_STATUS_T_IsValid(int value);
const PB_TASK_STATUS_T PB_TASK_STATUS_T_MIN = PB_TASK_CANT_TOUCH;
const PB_TASK_STATUS_T PB_TASK_STATUS_T_MAX = PB_TASK_FINISH;
const int PB_TASK_STATUS_T_ARRAYSIZE = PB_TASK_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_TASK_STATUS_T_descriptor();
inline const ::std::string& PB_TASK_STATUS_T_Name(PB_TASK_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_TASK_STATUS_T_descriptor(), value);
}
inline bool PB_TASK_STATUS_T_Parse(
    const ::std::string& name, PB_TASK_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_TASK_STATUS_T>(
    PB_TASK_STATUS_T_descriptor(), name, value);
}
enum PB_INSTANCE_TYPE_T {
  PB_INSTANCE_TYPE_PVE = 1,
  PB_INSTANCE_TYPE_PPVE = 2,
  PB_INSTANCE_TYPE_PVP = 3,
  PB_INSTANCE_TYPE_PVAI = 4,
  PB_INSTANCE_TYPE_PVE2 = 5,
  PB_INSTANCE_TYPE_PVE3 = 6,
  PB_INSTANCE_TYPE_PVAI2 = 8,
  PB_INSTANCE_TYPE_PVP2 = 9
};
bool PB_INSTANCE_TYPE_T_IsValid(int value);
const PB_INSTANCE_TYPE_T PB_INSTANCE_TYPE_T_MIN = PB_INSTANCE_TYPE_PVE;
const PB_INSTANCE_TYPE_T PB_INSTANCE_TYPE_T_MAX = PB_INSTANCE_TYPE_PVP2;
const int PB_INSTANCE_TYPE_T_ARRAYSIZE = PB_INSTANCE_TYPE_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_INSTANCE_TYPE_T_descriptor();
inline const ::std::string& PB_INSTANCE_TYPE_T_Name(PB_INSTANCE_TYPE_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_INSTANCE_TYPE_T_descriptor(), value);
}
inline bool PB_INSTANCE_TYPE_T_Parse(
    const ::std::string& name, PB_INSTANCE_TYPE_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_INSTANCE_TYPE_T>(
    PB_INSTANCE_TYPE_T_descriptor(), name, value);
}
enum NoteType {
  WORLD = 1,
  PARTY = 2,
  PM = 3
};
bool NoteType_IsValid(int value);
const NoteType NoteType_MIN = WORLD;
const NoteType NoteType_MAX = PM;
const int NoteType_ARRAYSIZE = NoteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NoteType_descriptor();
inline const ::std::string& NoteType_Name(NoteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NoteType_descriptor(), value);
}
inline bool NoteType_Parse(
    const ::std::string& name, NoteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NoteType>(
    NoteType_descriptor(), name, value);
}
enum PB_ACTIVITY_STATUS_T {
  PB_ACTIVITY_STATUS_UNKNOW = 0,
  PB_ACTIVITY_STATUS_NOT_START = 1,
  PB_ACTIVITY_STATUS_UNFINISH = 2,
  PB_ACTIVITY_STATUS_FINISH = 3,
  PB_ACTIVITY_STATUS_REWARD_REVC = 4,
  PB_ACTIVITY_STATUS_END = 5,
  PB_ACTIVITY_STATUS_INVALID = 6
};
bool PB_ACTIVITY_STATUS_T_IsValid(int value);
const PB_ACTIVITY_STATUS_T PB_ACTIVITY_STATUS_T_MIN = PB_ACTIVITY_STATUS_UNKNOW;
const PB_ACTIVITY_STATUS_T PB_ACTIVITY_STATUS_T_MAX = PB_ACTIVITY_STATUS_INVALID;
const int PB_ACTIVITY_STATUS_T_ARRAYSIZE = PB_ACTIVITY_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ACTIVITY_STATUS_T_descriptor();
inline const ::std::string& PB_ACTIVITY_STATUS_T_Name(PB_ACTIVITY_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ACTIVITY_STATUS_T_descriptor(), value);
}
inline bool PB_ACTIVITY_STATUS_T_Parse(
    const ::std::string& name, PB_ACTIVITY_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ACTIVITY_STATUS_T>(
    PB_ACTIVITY_STATUS_T_descriptor(), name, value);
}
enum PB_MAIL_STATUS_T {
  PB_MAIL_STATUS_NEW = 0,
  PB_MAIL_STATUS_UNREAD = 1,
  PB_MAIL_STATUS_READ = 2,
  PB_MAIL_STATUS_GOT = 3,
  PB_MAIL_STATUS_DEL = 4
};
bool PB_MAIL_STATUS_T_IsValid(int value);
const PB_MAIL_STATUS_T PB_MAIL_STATUS_T_MIN = PB_MAIL_STATUS_NEW;
const PB_MAIL_STATUS_T PB_MAIL_STATUS_T_MAX = PB_MAIL_STATUS_DEL;
const int PB_MAIL_STATUS_T_ARRAYSIZE = PB_MAIL_STATUS_T_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_MAIL_STATUS_T_descriptor();
inline const ::std::string& PB_MAIL_STATUS_T_Name(PB_MAIL_STATUS_T value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_MAIL_STATUS_T_descriptor(), value);
}
inline bool PB_MAIL_STATUS_T_Parse(
    const ::std::string& name, PB_MAIL_STATUS_T* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_MAIL_STATUS_T>(
    PB_MAIL_STATUS_T_descriptor(), name, value);
}
// ===================================================================

class BasicUserBattleInfo : public ::google::protobuf::Message {
 public:
  BasicUserBattleInfo();
  virtual ~BasicUserBattleInfo();
  
  BasicUserBattleInfo(const BasicUserBattleInfo& from);
  
  inline BasicUserBattleInfo& operator=(const BasicUserBattleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserBattleInfo& default_instance();
  
  void Swap(BasicUserBattleInfo* other);
  
  // implements Message ----------------------------------------------
  
  BasicUserBattleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserBattleInfo& from);
  void MergeFrom(const BasicUserBattleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 physical_attack = 1;
  inline bool has_physical_attack() const;
  inline void clear_physical_attack();
  static const int kPhysicalAttackFieldNumber = 1;
  inline ::google::protobuf::uint32 physical_attack() const;
  inline void set_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 magic_attack = 2;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 2;
  inline ::google::protobuf::uint32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 skill_attack = 3;
  inline bool has_skill_attack() const;
  inline void clear_skill_attack();
  static const int kSkillAttackFieldNumber = 3;
  inline ::google::protobuf::uint32 skill_attack() const;
  inline void set_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 physical_defence = 4;
  inline bool has_physical_defence() const;
  inline void clear_physical_defence();
  static const int kPhysicalDefenceFieldNumber = 4;
  inline ::google::protobuf::uint32 physical_defence() const;
  inline void set_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 magic_defence = 5;
  inline bool has_magic_defence() const;
  inline void clear_magic_defence();
  static const int kMagicDefenceFieldNumber = 5;
  inline ::google::protobuf::uint32 magic_defence() const;
  inline void set_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 skill_defence = 6;
  inline bool has_skill_defence() const;
  inline void clear_skill_defence();
  static const int kSkillDefenceFieldNumber = 6;
  inline ::google::protobuf::uint32 skill_defence() const;
  inline void set_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 health_point = 7;
  inline bool has_health_point() const;
  inline void clear_health_point();
  static const int kHealthPointFieldNumber = 7;
  inline ::google::protobuf::uint32 health_point() const;
  inline void set_health_point(::google::protobuf::uint32 value);
  
  // required uint32 accurate = 8;
  inline bool has_accurate() const;
  inline void clear_accurate();
  static const int kAccurateFieldNumber = 8;
  inline ::google::protobuf::uint32 accurate() const;
  inline void set_accurate(::google::protobuf::uint32 value);
  
  // required uint32 dodge = 9;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 9;
  inline ::google::protobuf::uint32 dodge() const;
  inline void set_dodge(::google::protobuf::uint32 value);
  
  // required uint32 wreck = 10;
  inline bool has_wreck() const;
  inline void clear_wreck();
  static const int kWreckFieldNumber = 10;
  inline ::google::protobuf::uint32 wreck() const;
  inline void set_wreck(::google::protobuf::uint32 value);
  
  // required uint32 parry = 11;
  inline bool has_parry() const;
  inline void clear_parry();
  static const int kParryFieldNumber = 11;
  inline ::google::protobuf::uint32 parry() const;
  inline void set_parry(::google::protobuf::uint32 value);
  
  // required uint32 critical_strike = 12;
  inline bool has_critical_strike() const;
  inline void clear_critical_strike();
  static const int kCriticalStrikeFieldNumber = 12;
  inline ::google::protobuf::uint32 critical_strike() const;
  inline void set_critical_strike(::google::protobuf::uint32 value);
  
  // required uint32 tenacity = 13;
  inline bool has_tenacity() const;
  inline void clear_tenacity();
  static const int kTenacityFieldNumber = 13;
  inline ::google::protobuf::uint32 tenacity() const;
  inline void set_tenacity(::google::protobuf::uint32 value);
  
  // required uint32 slay = 14;
  inline bool has_slay() const;
  inline void clear_slay();
  static const int kSlayFieldNumber = 14;
  inline ::google::protobuf::uint32 slay() const;
  inline void set_slay(::google::protobuf::uint32 value);
  
  // required uint32 courage = 15;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 15;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);
  
  // required uint32 charm = 16;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 16;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);
  
  // required uint32 trick = 17;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 17;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);
  
  // required uint32 speed = 18;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 18;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);
  
  // required uint32 proficiency = 19;
  inline bool has_proficiency() const;
  inline void clear_proficiency();
  static const int kProficiencyFieldNumber = 19;
  inline ::google::protobuf::uint32 proficiency() const;
  inline void set_proficiency(::google::protobuf::uint32 value);
  
  // optional uint32 current_hp = 20;
  inline bool has_current_hp() const;
  inline void clear_current_hp();
  static const int kCurrentHpFieldNumber = 20;
  inline ::google::protobuf::uint32 current_hp() const;
  inline void set_current_hp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BasicUserBattleInfo)
 private:
  inline void set_has_physical_attack();
  inline void clear_has_physical_attack();
  inline void set_has_magic_attack();
  inline void clear_has_magic_attack();
  inline void set_has_skill_attack();
  inline void clear_has_skill_attack();
  inline void set_has_physical_defence();
  inline void clear_has_physical_defence();
  inline void set_has_magic_defence();
  inline void clear_has_magic_defence();
  inline void set_has_skill_defence();
  inline void clear_has_skill_defence();
  inline void set_has_health_point();
  inline void clear_has_health_point();
  inline void set_has_accurate();
  inline void clear_has_accurate();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_wreck();
  inline void clear_has_wreck();
  inline void set_has_parry();
  inline void clear_has_parry();
  inline void set_has_critical_strike();
  inline void clear_has_critical_strike();
  inline void set_has_tenacity();
  inline void clear_has_tenacity();
  inline void set_has_slay();
  inline void clear_has_slay();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_proficiency();
  inline void clear_has_proficiency();
  inline void set_has_current_hp();
  inline void clear_has_current_hp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 physical_attack_;
  ::google::protobuf::uint32 magic_attack_;
  ::google::protobuf::uint32 skill_attack_;
  ::google::protobuf::uint32 physical_defence_;
  ::google::protobuf::uint32 magic_defence_;
  ::google::protobuf::uint32 skill_defence_;
  ::google::protobuf::uint32 health_point_;
  ::google::protobuf::uint32 accurate_;
  ::google::protobuf::uint32 dodge_;
  ::google::protobuf::uint32 wreck_;
  ::google::protobuf::uint32 parry_;
  ::google::protobuf::uint32 critical_strike_;
  ::google::protobuf::uint32 tenacity_;
  ::google::protobuf::uint32 slay_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 proficiency_;
  ::google::protobuf::uint32 current_hp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static BasicUserBattleInfo* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillPart : public ::google::protobuf::Message {
 public:
  UserSkillPart();
  virtual ~UserSkillPart();
  
  UserSkillPart(const UserSkillPart& from);
  
  inline UserSkillPart& operator=(const UserSkillPart& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillPart& default_instance();
  
  void Swap(UserSkillPart* other);
  
  // implements Message ----------------------------------------------
  
  UserSkillPart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillPart& from);
  void MergeFrom(const UserSkillPart& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);
  
  // required .BasicUserBattleInfo exp_battle_info = 2;
  inline bool has_exp_battle_info() const;
  inline void clear_exp_battle_info();
  static const int kExpBattleInfoFieldNumber = 2;
  inline const ::BasicUserBattleInfo& exp_battle_info() const;
  inline ::BasicUserBattleInfo* mutable_exp_battle_info();
  inline ::BasicUserBattleInfo* release_exp_battle_info();
  
  // required float continue_time = 5;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 5;
  inline float continue_time() const;
  inline void set_continue_time(float value);
  
  // required uint32 can_attack_number = 6;
  inline bool has_can_attack_number() const;
  inline void clear_can_attack_number();
  static const int kCanAttackNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 can_attack_number() const;
  inline void set_can_attack_number(::google::protobuf::uint32 value);
  
  // required uint32 hurt = 7;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 7;
  inline ::google::protobuf::uint32 hurt() const;
  inline void set_hurt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:UserSkillPart)
 private:
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_exp_battle_info();
  inline void clear_has_exp_battle_info();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();
  inline void set_has_can_attack_number();
  inline void clear_has_can_attack_number();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BasicUserBattleInfo* exp_battle_info_;
  ::google::protobuf::uint32 part_;
  float continue_time_;
  ::google::protobuf::uint32 can_attack_number_;
  ::google::protobuf::uint32 hurt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static UserSkillPart* default_instance_;
};
// -------------------------------------------------------------------

class UserSkillInfo : public ::google::protobuf::Message {
 public:
  UserSkillInfo();
  virtual ~UserSkillInfo();
  
  UserSkillInfo(const UserSkillInfo& from);
  
  inline UserSkillInfo& operator=(const UserSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSkillInfo& default_instance();
  
  void Swap(UserSkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  UserSkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSkillInfo& from);
  void MergeFrom(const UserSkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 part = 3;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 3;
  inline ::google::protobuf::uint32 part() const;
  inline void set_part(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 4;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // required uint32 money = 5;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 5;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // required uint32 exploit = 6;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 6;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);
  
  // required float own_cd = 7;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 7;
  inline float own_cd() const;
  inline void set_own_cd(float value);
  
  // required float share_cd = 8;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 8;
  inline float share_cd() const;
  inline void set_share_cd(float value);
  
  // repeated .UserSkillPart parts = 9;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 9;
  inline const ::UserSkillPart& parts(int index) const;
  inline ::UserSkillPart* mutable_parts(int index);
  inline ::UserSkillPart* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
      mutable_parts();
  
  // required uint32 max_level = 10;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 10;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:UserSkillInfo)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 part_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  float own_cd_;
  float share_cd_;
  ::google::protobuf::RepeatedPtrField< ::UserSkillPart > parts_;
  ::google::protobuf::uint32 max_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static UserSkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class BasicUserInfo : public ::google::protobuf::Message {
 public:
  BasicUserInfo();
  virtual ~BasicUserInfo();
  
  BasicUserInfo(const BasicUserInfo& from);
  
  inline BasicUserInfo& operator=(const BasicUserInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicUserInfo& default_instance();
  
  void Swap(BasicUserInfo* other);
  
  // implements Message ----------------------------------------------
  
  BasicUserInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicUserInfo& from);
  void MergeFrom(const BasicUserInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 gender = 6;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 6;
  inline ::google::protobuf::uint32 gender() const;
  inline void set_gender(::google::protobuf::uint32 value);
  
  // required uint32 lv = 7;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 8;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 8;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 9;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 9;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 orient = 10;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 10;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);
  
  // optional uint32 battle_side = 11;
  inline bool has_battle_side() const;
  inline void clear_battle_side();
  static const int kBattleSideFieldNumber = 11;
  inline ::google::protobuf::uint32 battle_side() const;
  inline void set_battle_side(::google::protobuf::uint32 value);
  
  // optional .BasicUserBattleInfo battle_info = 12;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 12;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // required uint32 next_lv = 13;
  inline bool has_next_lv() const;
  inline void clear_next_lv();
  static const int kNextLvFieldNumber = 13;
  inline ::google::protobuf::uint32 next_lv() const;
  inline void set_next_lv(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:BasicUserInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();
  inline void set_has_battle_side();
  inline void clear_has_battle_side();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_next_lv();
  inline void clear_has_next_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 gender_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;
  ::google::protobuf::uint32 battle_side_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 next_lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static BasicUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapReq : public ::google::protobuf::Message {
 public:
  CSEnterMapReq();
  virtual ~CSEnterMapReq();
  
  CSEnterMapReq(const CSEnterMapReq& from);
  
  inline CSEnterMapReq& operator=(const CSEnterMapReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapReq& default_instance();
  
  void Swap(CSEnterMapReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEnterMapReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapReq& from);
  void MergeFrom(const CSEnterMapReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 2;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 2;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 3;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 3;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 orient = 4;
  inline bool has_orient() const;
  inline void clear_orient();
  static const int kOrientFieldNumber = 4;
  inline ::google::protobuf::uint32 orient() const;
  inline void set_orient(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEnterMapReq)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_orient();
  inline void clear_has_orient();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 orient_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnterMapReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEnterMapRsp : public ::google::protobuf::Message {
 public:
  CSEnterMapRsp();
  virtual ~CSEnterMapRsp();
  
  CSEnterMapRsp(const CSEnterMapRsp& from);
  
  inline CSEnterMapRsp& operator=(const CSEnterMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEnterMapRsp& default_instance();
  
  void Swap(CSEnterMapRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEnterMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEnterMapRsp& from);
  void MergeFrom(const CSEnterMapRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // required .BasicUserInfo userinfo = 2;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 2;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSEnterMapRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEnterMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSLeaveMapRsp : public ::google::protobuf::Message {
 public:
  CSLeaveMapRsp();
  virtual ~CSLeaveMapRsp();
  
  CSLeaveMapRsp(const CSLeaveMapRsp& from);
  
  inline CSLeaveMapRsp& operator=(const CSLeaveMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLeaveMapRsp& default_instance();
  
  void Swap(CSLeaveMapRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLeaveMapRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLeaveMapRsp& from);
  void MergeFrom(const CSLeaveMapRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSLeaveMapRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLeaveMapRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersReq : public ::google::protobuf::Message {
 public:
  CSGetMapUsersReq();
  virtual ~CSGetMapUsersReq();
  
  CSGetMapUsersReq(const CSGetMapUsersReq& from);
  
  inline CSGetMapUsersReq& operator=(const CSGetMapUsersReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersReq& default_instance();
  
  void Swap(CSGetMapUsersReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMapUsersReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersReq& from);
  void MergeFrom(const CSGetMapUsersReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetMapUsersReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMapUsersReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMapUsersRsp : public ::google::protobuf::Message {
 public:
  CSGetMapUsersRsp();
  virtual ~CSGetMapUsersRsp();
  
  CSGetMapUsersRsp(const CSGetMapUsersRsp& from);
  
  inline CSGetMapUsersRsp& operator=(const CSGetMapUsersRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMapUsersRsp& default_instance();
  
  void Swap(CSGetMapUsersRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMapUsersRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMapUsersRsp& from);
  void MergeFrom(const CSGetMapUsersRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .BasicUserInfo userinfo = 1;
  inline int userinfo_size() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 1;
  inline const ::BasicUserInfo& userinfo(int index) const;
  inline ::BasicUserInfo* mutable_userinfo(int index);
  inline ::BasicUserInfo* add_userinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
      userinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
      mutable_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSGetMapUsersRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::BasicUserInfo > userinfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMapUsersRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillReq : public ::google::protobuf::Message {
 public:
  CSGetUserSkillReq();
  virtual ~CSGetUserSkillReq();
  
  CSGetUserSkillReq(const CSGetUserSkillReq& from);
  
  inline CSGetUserSkillReq& operator=(const CSGetUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillReq& default_instance();
  
  void Swap(CSGetUserSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillReq& from);
  void MergeFrom(const CSGetUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserSkillReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSGetUserSkillRsp();
  virtual ~CSGetUserSkillRsp();
  
  CSGetUserSkillRsp(const CSGetUserSkillRsp& from);
  
  inline CSGetUserSkillRsp& operator=(const CSGetUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserSkillRsp& default_instance();
  
  void Swap(CSGetUserSkillRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserSkillRsp& from);
  void MergeFrom(const CSGetUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .UserSkillInfo userskills = 4;
  inline int userskills_size() const;
  inline void clear_userskills();
  static const int kUserskillsFieldNumber = 4;
  inline const ::UserSkillInfo& userskills(int index) const;
  inline ::UserSkillInfo* mutable_userskills(int index);
  inline ::UserSkillInfo* add_userskills();
  inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
      userskills() const;
  inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
      mutable_userskills();
  
  // repeated uint32 ready = 5;
  inline int ready_size() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline ::google::protobuf::uint32 ready(int index) const;
  inline void set_ready(int index, ::google::protobuf::uint32 value);
  inline void add_ready(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ready() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ready();
  
  // @@protoc_insertion_point(class_scope:CSGetUserSkillRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::UserSkillInfo > userskills_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ready_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoReq : public ::google::protobuf::Message {
 public:
  CSGetUserInfoReq();
  virtual ~CSGetUserInfoReq();
  
  CSGetUserInfoReq(const CSGetUserInfoReq& from);
  
  inline CSGetUserInfoReq& operator=(const CSGetUserInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoReq& default_instance();
  
  void Swap(CSGetUserInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoReq& from);
  void MergeFrom(const CSGetUserInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserInfoReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetUserInfoRsp();
  virtual ~CSGetUserInfoRsp();
  
  CSGetUserInfoRsp(const CSGetUserInfoRsp& from);
  
  inline CSGetUserInfoRsp& operator=(const CSGetUserInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserInfoRsp& default_instance();
  
  void Swap(CSGetUserInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserInfoRsp& from);
  void MergeFrom(const CSGetUserInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .BasicUserInfo userinfo = 4;
  inline bool has_userinfo() const;
  inline void clear_userinfo();
  static const int kUserinfoFieldNumber = 4;
  inline const ::BasicUserInfo& userinfo() const;
  inline ::BasicUserInfo* mutable_userinfo();
  inline ::BasicUserInfo* release_userinfo();
  
  // @@protoc_insertion_point(class_scope:CSGetUserInfoRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_userinfo();
  inline void clear_has_userinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::BasicUserInfo* userinfo_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillReq : public ::google::protobuf::Message {
 public:
  CSAddUserSkillReq();
  virtual ~CSAddUserSkillReq();
  
  CSAddUserSkillReq(const CSAddUserSkillReq& from);
  
  inline CSAddUserSkillReq& operator=(const CSAddUserSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillReq& default_instance();
  
  void Swap(CSAddUserSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddUserSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillReq& from);
  void MergeFrom(const CSAddUserSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddUserSkillReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddUserSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddUserSkillRsp : public ::google::protobuf::Message {
 public:
  CSAddUserSkillRsp();
  virtual ~CSAddUserSkillRsp();
  
  CSAddUserSkillRsp(const CSAddUserSkillRsp& from);
  
  inline CSAddUserSkillRsp& operator=(const CSAddUserSkillRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddUserSkillRsp& default_instance();
  
  void Swap(CSAddUserSkillRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddUserSkillRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddUserSkillRsp& from);
  void MergeFrom(const CSAddUserSkillRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddUserSkillRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddUserSkillRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffReq : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffReq();
  virtual ~CSUserSkillDiffReq();
  
  CSUserSkillDiffReq(const CSUserSkillDiffReq& from);
  
  inline CSUserSkillDiffReq& operator=(const CSUserSkillDiffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffReq& default_instance();
  
  void Swap(CSUserSkillDiffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSUserSkillDiffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffReq& from);
  void MergeFrom(const CSUserSkillDiffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSUserSkillDiffReq)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUserSkillDiffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSUserSkillDiffRsp : public ::google::protobuf::Message {
 public:
  CSUserSkillDiffRsp();
  virtual ~CSUserSkillDiffRsp();
  
  CSUserSkillDiffRsp(const CSUserSkillDiffRsp& from);
  
  inline CSUserSkillDiffRsp& operator=(const CSUserSkillDiffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUserSkillDiffRsp& default_instance();
  
  void Swap(CSUserSkillDiffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUserSkillDiffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUserSkillDiffRsp& from);
  void MergeFrom(const CSUserSkillDiffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 skill_id = 1;
  inline bool has_skill_id() const;
  inline void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skill_id() const;
  inline void set_skill_id(::google::protobuf::uint32 value);
  
  // required uint32 skill_level = 2;
  inline bool has_skill_level() const;
  inline void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 skill_level() const;
  inline void set_skill_level(::google::protobuf::uint32 value);
  
  // optional uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 exploit = 4;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 exploit() const;
  inline void set_exploit(::google::protobuf::uint32 value);
  
  // optional uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // optional .BasicUserBattleInfo battle_info = 6;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 6;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // optional int32 own_cd = 7;
  inline bool has_own_cd() const;
  inline void clear_own_cd();
  static const int kOwnCdFieldNumber = 7;
  inline ::google::protobuf::int32 own_cd() const;
  inline void set_own_cd(::google::protobuf::int32 value);
  
  // optional int32 share_cd = 8;
  inline bool has_share_cd() const;
  inline void clear_share_cd();
  static const int kShareCdFieldNumber = 8;
  inline ::google::protobuf::int32 share_cd() const;
  inline void set_share_cd(::google::protobuf::int32 value);
  
  // optional int32 hurt = 9;
  inline bool has_hurt() const;
  inline void clear_hurt();
  static const int kHurtFieldNumber = 9;
  inline ::google::protobuf::int32 hurt() const;
  inline void set_hurt(::google::protobuf::int32 value);
  
  // optional uint32 continue_time = 10;
  inline bool has_continue_time() const;
  inline void clear_continue_time();
  static const int kContinueTimeFieldNumber = 10;
  inline ::google::protobuf::uint32 continue_time() const;
  inline void set_continue_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSUserSkillDiffRsp)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_skill_level();
  inline void clear_has_skill_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  inline void set_has_own_cd();
  inline void clear_has_own_cd();
  inline void set_has_share_cd();
  inline void clear_has_share_cd();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_continue_time();
  inline void clear_has_continue_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 exploit_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::int32 own_cd_;
  ::google::protobuf::int32 share_cd_;
  ::google::protobuf::int32 hurt_;
  ::google::protobuf::uint32 continue_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUserSkillDiffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSkillUpdateValidRsq : public ::google::protobuf::Message {
 public:
  CSSkillUpdateValidRsq();
  virtual ~CSSkillUpdateValidRsq();
  
  CSSkillUpdateValidRsq(const CSSkillUpdateValidRsq& from);
  
  inline CSSkillUpdateValidRsq& operator=(const CSSkillUpdateValidRsq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSkillUpdateValidRsq& default_instance();
  
  void Swap(CSSkillUpdateValidRsq* other);
  
  // implements Message ----------------------------------------------
  
  CSSkillUpdateValidRsq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSkillUpdateValidRsq& from);
  void MergeFrom(const CSSkillUpdateValidRsq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool valid = 1;
  inline bool has_valid() const;
  inline void clear_valid();
  static const int kValidFieldNumber = 1;
  inline bool valid() const;
  inline void set_valid(bool value);
  
  // @@protoc_insertion_point(class_scope:CSSkillUpdateValidRsq)
 private:
  inline void set_has_valid();
  inline void clear_has_valid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool valid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSkillUpdateValidRsq* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkReq : public ::google::protobuf::Message {
 public:
  CSWalkReq();
  virtual ~CSWalkReq();
  
  CSWalkReq(const CSWalkReq& from);
  
  inline CSWalkReq& operator=(const CSWalkReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkReq& default_instance();
  
  void Swap(CSWalkReq* other);
  
  // implements Message ----------------------------------------------
  
  CSWalkReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkReq& from);
  void MergeFrom(const CSWalkReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 xpos = 1;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 1;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 2;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 2;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 animid = 3;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 3;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);
  
  // required bool flip = 4;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 4;
  inline bool flip() const;
  inline void set_flip(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWalkReq)
 private:
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWalkReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWalkRsp : public ::google::protobuf::Message {
 public:
  CSWalkRsp();
  virtual ~CSWalkRsp();
  
  CSWalkRsp(const CSWalkRsp& from);
  
  inline CSWalkRsp& operator=(const CSWalkRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWalkRsp& default_instance();
  
  void Swap(CSWalkRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSWalkRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWalkRsp& from);
  void MergeFrom(const CSWalkRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 xpos = 4;
  inline bool has_xpos() const;
  inline void clear_xpos();
  static const int kXposFieldNumber = 4;
  inline ::google::protobuf::uint32 xpos() const;
  inline void set_xpos(::google::protobuf::uint32 value);
  
  // required uint32 ypos = 5;
  inline bool has_ypos() const;
  inline void clear_ypos();
  static const int kYposFieldNumber = 5;
  inline ::google::protobuf::uint32 ypos() const;
  inline void set_ypos(::google::protobuf::uint32 value);
  
  // required uint32 animid = 6;
  inline bool has_animid() const;
  inline void clear_animid();
  static const int kAnimidFieldNumber = 6;
  inline ::google::protobuf::uint32 animid() const;
  inline void set_animid(::google::protobuf::uint32 value);
  
  // required bool flip = 7;
  inline bool has_flip() const;
  inline void clear_flip();
  static const int kFlipFieldNumber = 7;
  inline bool flip() const;
  inline void set_flip(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWalkRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_xpos();
  inline void clear_has_xpos();
  inline void set_has_ypos();
  inline void clear_has_ypos();
  inline void set_has_animid();
  inline void clear_has_animid();
  inline void set_has_flip();
  inline void clear_has_flip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 xpos_;
  ::google::protobuf::uint32 ypos_;
  ::google::protobuf::uint32 animid_;
  bool flip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWalkRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAttr : public ::google::protobuf::Message {
 public:
  CSItemAttr();
  virtual ~CSItemAttr();
  
  CSItemAttr(const CSItemAttr& from);
  
  inline CSItemAttr& operator=(const CSItemAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAttr& default_instance();
  
  void Swap(CSItemAttr* other);
  
  // implements Message ----------------------------------------------
  
  CSItemAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAttr& from);
  void MergeFrom(const CSItemAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 attr_key = 1;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);
  
  // required uint32 attr_basic_value = 2;
  inline bool has_attr_basic_value() const;
  inline void clear_attr_basic_value();
  static const int kAttrBasicValueFieldNumber = 2;
  inline ::google::protobuf::uint32 attr_basic_value() const;
  inline void set_attr_basic_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_intensify_value = 3;
  inline bool has_attr_intensify_value() const;
  inline void clear_attr_intensify_value();
  static const int kAttrIntensifyValueFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_intensify_value() const;
  inline void set_attr_intensify_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_gem_value = 4;
  inline bool has_attr_gem_value() const;
  inline void clear_attr_gem_value();
  static const int kAttrGemValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_gem_value() const;
  inline void set_attr_gem_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemAttr)
 private:
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_basic_value();
  inline void clear_has_attr_basic_value();
  inline void set_has_attr_intensify_value();
  inline void clear_has_attr_intensify_value();
  inline void set_has_attr_gem_value();
  inline void clear_has_attr_gem_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_basic_value_;
  ::google::protobuf::uint32 attr_intensify_value_;
  ::google::protobuf::uint32 attr_gem_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemAttr* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipHole : public ::google::protobuf::Message {
 public:
  CSEquipHole();
  virtual ~CSEquipHole();
  
  CSEquipHole(const CSEquipHole& from);
  
  inline CSEquipHole& operator=(const CSEquipHole& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipHole& default_instance();
  
  void Swap(CSEquipHole* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipHole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipHole& from);
  void MergeFrom(const CSEquipHole& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hole_index = 1;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);
  
  // required uint32 item_gem_id = 2;
  inline bool has_item_gem_id() const;
  inline void clear_item_gem_id();
  static const int kItemGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_gem_id() const;
  inline void set_item_gem_id(::google::protobuf::uint32 value);
  
  // required uint32 attr_key = 3;
  inline bool has_attr_key() const;
  inline void clear_attr_key();
  static const int kAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 attr_key() const;
  inline void set_attr_key(::google::protobuf::uint32 value);
  
  // required uint32 attr_value = 4;
  inline bool has_attr_value() const;
  inline void clear_attr_value();
  static const int kAttrValueFieldNumber = 4;
  inline ::google::protobuf::uint32 attr_value() const;
  inline void set_attr_value(::google::protobuf::uint32 value);
  
  // optional uint32 attr_min_v = 5;
  inline bool has_attr_min_v() const;
  inline void clear_attr_min_v();
  static const int kAttrMinVFieldNumber = 5;
  inline ::google::protobuf::uint32 attr_min_v() const;
  inline void set_attr_min_v(::google::protobuf::uint32 value);
  
  // optional uint32 attr_max_v = 6;
  inline bool has_attr_max_v() const;
  inline void clear_attr_max_v();
  static const int kAttrMaxVFieldNumber = 6;
  inline ::google::protobuf::uint32 attr_max_v() const;
  inline void set_attr_max_v(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipHole)
 private:
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  inline void set_has_item_gem_id();
  inline void clear_has_item_gem_id();
  inline void set_has_attr_key();
  inline void clear_has_attr_key();
  inline void set_has_attr_value();
  inline void clear_has_attr_value();
  inline void set_has_attr_min_v();
  inline void clear_has_attr_min_v();
  inline void set_has_attr_max_v();
  inline void clear_has_attr_max_v();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hole_index_;
  ::google::protobuf::uint32 item_gem_id_;
  ::google::protobuf::uint32 attr_key_;
  ::google::protobuf::uint32 attr_value_;
  ::google::protobuf::uint32 attr_min_v_;
  ::google::protobuf::uint32 attr_max_v_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipHole* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase_Item_Attr : public ::google::protobuf::Message {
 public:
  EquipmentBase_Item_Attr();
  virtual ~EquipmentBase_Item_Attr();
  
  EquipmentBase_Item_Attr(const EquipmentBase_Item_Attr& from);
  
  inline EquipmentBase_Item_Attr& operator=(const EquipmentBase_Item_Attr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase_Item_Attr& default_instance();
  
  void Swap(EquipmentBase_Item_Attr* other);
  
  // implements Message ----------------------------------------------
  
  EquipmentBase_Item_Attr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase_Item_Attr& from);
  void MergeFrom(const EquipmentBase_Item_Attr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:EquipmentBase.Item_Attr)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static EquipmentBase_Item_Attr* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBase : public ::google::protobuf::Message {
 public:
  EquipmentBase();
  virtual ~EquipmentBase();
  
  EquipmentBase(const EquipmentBase& from);
  
  inline EquipmentBase& operator=(const EquipmentBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBase& default_instance();
  
  void Swap(EquipmentBase* other);
  
  // implements Message ----------------------------------------------
  
  EquipmentBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBase& from);
  void MergeFrom(const EquipmentBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef EquipmentBase_Item_Attr Item_Attr;
  
  // accessors -------------------------------------------------------
  
  // required uint32 cost_levelup = 1;
  inline bool has_cost_levelup() const;
  inline void clear_cost_levelup();
  static const int kCostLevelupFieldNumber = 1;
  inline ::google::protobuf::uint32 cost_levelup() const;
  inline void set_cost_levelup(::google::protobuf::uint32 value);
  
  // repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
  inline int incr_attr_next_lv_size() const;
  inline void clear_incr_attr_next_lv();
  static const int kIncrAttrNextLvFieldNumber = 2;
  inline const ::EquipmentBase_Item_Attr& incr_attr_next_lv(int index) const;
  inline ::EquipmentBase_Item_Attr* mutable_incr_attr_next_lv(int index);
  inline ::EquipmentBase_Item_Attr* add_incr_attr_next_lv();
  inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
      incr_attr_next_lv() const;
  inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
      mutable_incr_attr_next_lv();
  
  // repeated .CSEquipHole equip_holes = 3;
  inline int equip_holes_size() const;
  inline void clear_equip_holes();
  static const int kEquipHolesFieldNumber = 3;
  inline const ::CSEquipHole& equip_holes(int index) const;
  inline ::CSEquipHole* mutable_equip_holes(int index);
  inline ::CSEquipHole* add_equip_holes();
  inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
      equip_holes() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
      mutable_equip_holes();
  
  // @@protoc_insertion_point(class_scope:EquipmentBase)
 private:
  inline void set_has_cost_levelup();
  inline void clear_has_cost_levelup();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr > incr_attr_next_lv_;
  ::google::protobuf::RepeatedPtrField< ::CSEquipHole > equip_holes_;
  ::google::protobuf::uint32 cost_levelup_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static EquipmentBase* default_instance_;
};
// -------------------------------------------------------------------

class SpiritStoneBase : public ::google::protobuf::Message {
 public:
  SpiritStoneBase();
  virtual ~SpiritStoneBase();
  
  SpiritStoneBase(const SpiritStoneBase& from);
  
  inline SpiritStoneBase& operator=(const SpiritStoneBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SpiritStoneBase& default_instance();
  
  void Swap(SpiritStoneBase* other);
  
  // implements Message ----------------------------------------------
  
  SpiritStoneBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SpiritStoneBase& from);
  void MergeFrom(const SpiritStoneBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 consume = 1;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 1;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);
  
  // required uint32 convert = 2;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 2;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:SpiritStoneBase)
 private:
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static SpiritStoneBase* default_instance_;
};
// -------------------------------------------------------------------

class ManorBase : public ::google::protobuf::Message {
 public:
  ManorBase();
  virtual ~ManorBase();
  
  ManorBase(const ManorBase& from);
  
  inline ManorBase& operator=(const ManorBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorBase& default_instance();
  
  void Swap(ManorBase* other);
  
  // implements Message ----------------------------------------------
  
  ManorBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorBase& from);
  void MergeFrom(const ManorBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hunt_gain_coin = 1;
  inline bool has_hunt_gain_coin() const;
  inline void clear_hunt_gain_coin();
  static const int kHuntGainCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 hunt_gain_coin() const;
  inline void set_hunt_gain_coin(::google::protobuf::uint32 value);
  
  // required uint32 pick_gain_exp = 2;
  inline bool has_pick_gain_exp() const;
  inline void clear_pick_gain_exp();
  static const int kPickGainExpFieldNumber = 2;
  inline ::google::protobuf::uint32 pick_gain_exp() const;
  inline void set_pick_gain_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ManorBase)
 private:
  inline void set_has_hunt_gain_coin();
  inline void clear_has_hunt_gain_coin();
  inline void set_has_pick_gain_exp();
  inline void clear_has_pick_gain_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hunt_gain_coin_;
  ::google::protobuf::uint32 pick_gain_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ManorBase* default_instance_;
};
// -------------------------------------------------------------------

class CSItemInfo : public ::google::protobuf::Message {
 public:
  CSItemInfo();
  virtual ~CSItemInfo();
  
  CSItemInfo(const CSItemInfo& from);
  
  inline CSItemInfo& operator=(const CSItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemInfo& default_instance();
  
  void Swap(CSItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemInfo& from);
  void MergeFrom(const CSItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // optional uint32 item_level = 4;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // repeated .CSItemAttr item_attrs = 5;
  inline int item_attrs_size() const;
  inline void clear_item_attrs();
  static const int kItemAttrsFieldNumber = 5;
  inline const ::CSItemAttr& item_attrs(int index) const;
  inline ::CSItemAttr* mutable_item_attrs(int index);
  inline ::CSItemAttr* add_item_attrs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
      item_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
      mutable_item_attrs();
  
  // optional .EquipmentBase equip_info = 6;
  inline bool has_equip_info() const;
  inline void clear_equip_info();
  static const int kEquipInfoFieldNumber = 6;
  inline const ::EquipmentBase& equip_info() const;
  inline ::EquipmentBase* mutable_equip_info();
  inline ::EquipmentBase* release_equip_info();
  
  // optional .SpiritStoneBase ss_info = 7;
  inline bool has_ss_info() const;
  inline void clear_ss_info();
  static const int kSsInfoFieldNumber = 7;
  inline const ::SpiritStoneBase& ss_info() const;
  inline ::SpiritStoneBase* mutable_ss_info();
  inline ::SpiritStoneBase* release_ss_info();
  
  // optional .ManorBase manor_info = 8;
  inline bool has_manor_info() const;
  inline void clear_manor_info();
  static const int kManorInfoFieldNumber = 8;
  inline const ::ManorBase& manor_info() const;
  inline ::ManorBase* mutable_manor_info();
  inline ::ManorBase* release_manor_info();
  
  // @@protoc_insertion_point(class_scope:CSItemInfo)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_equip_info();
  inline void clear_has_equip_info();
  inline void set_has_ss_info();
  inline void clear_has_ss_info();
  inline void set_has_manor_info();
  inline void clear_has_manor_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::RepeatedPtrField< ::CSItemAttr > item_attrs_;
  ::EquipmentBase* equip_info_;
  ::SpiritStoneBase* ss_info_;
  ::ManorBase* manor_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsReq : public ::google::protobuf::Message {
 public:
  CSAllItemsReq();
  virtual ~CSAllItemsReq();
  
  CSAllItemsReq(const CSAllItemsReq& from);
  
  inline CSAllItemsReq& operator=(const CSAllItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsReq& default_instance();
  
  void Swap(CSAllItemsReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAllItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsReq& from);
  void MergeFrom(const CSAllItemsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAllItemsReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAllItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAllItemsRsp : public ::google::protobuf::Message {
 public:
  CSAllItemsRsp();
  virtual ~CSAllItemsRsp();
  
  CSAllItemsRsp(const CSAllItemsRsp& from);
  
  inline CSAllItemsRsp& operator=(const CSAllItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAllItemsRsp& default_instance();
  
  void Swap(CSAllItemsRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAllItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAllItemsRsp& from);
  void MergeFrom(const CSAllItemsRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 def_bag_size = 1;
  inline bool has_def_bag_size() const;
  inline void clear_def_bag_size();
  static const int kDefBagSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 def_bag_size() const;
  inline void set_def_bag_size(::google::protobuf::uint32 value);
  
  // required uint32 def_store_size = 2;
  inline bool has_def_store_size() const;
  inline void clear_def_store_size();
  static const int kDefStoreSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 def_store_size() const;
  inline void set_def_store_size(::google::protobuf::uint32 value);
  
  // required uint32 def_ss_bag_size = 3;
  inline bool has_def_ss_bag_size() const;
  inline void clear_def_ss_bag_size();
  static const int kDefSsBagSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 def_ss_bag_size() const;
  inline void set_def_ss_bag_size(::google::protobuf::uint32 value);
  
  // required uint32 def_ss_store_size = 4;
  inline bool has_def_ss_store_size() const;
  inline void clear_def_ss_store_size();
  static const int kDefSsStoreSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 def_ss_store_size() const;
  inline void set_def_ss_store_size(::google::protobuf::uint32 value);
  
  // required uint32 def_equip_lvup_max_cd_time = 5;
  inline bool has_def_equip_lvup_max_cd_time() const;
  inline void clear_def_equip_lvup_max_cd_time();
  static const int kDefEquipLvupMaxCdTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 def_equip_lvup_max_cd_time() const;
  inline void set_def_equip_lvup_max_cd_time(::google::protobuf::uint32 value);
  
  // repeated .CSItemInfo items = 15;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 15;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSAllItemsRsp)
 private:
  inline void set_has_def_bag_size();
  inline void clear_has_def_bag_size();
  inline void set_has_def_store_size();
  inline void clear_has_def_store_size();
  inline void set_has_def_ss_bag_size();
  inline void clear_has_def_ss_bag_size();
  inline void set_has_def_ss_store_size();
  inline void clear_has_def_ss_store_size();
  inline void set_has_def_equip_lvup_max_cd_time();
  inline void clear_has_def_equip_lvup_max_cd_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 def_bag_size_;
  ::google::protobuf::uint32 def_store_size_;
  ::google::protobuf::uint32 def_ss_bag_size_;
  ::google::protobuf::uint32 def_ss_store_size_;
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 def_equip_lvup_max_cd_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAllItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemAddRsp : public ::google::protobuf::Message {
 public:
  CSItemAddRsp();
  virtual ~CSItemAddRsp();
  
  CSItemAddRsp(const CSItemAddRsp& from);
  
  inline CSItemAddRsp& operator=(const CSItemAddRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemAddRsp& default_instance();
  
  void Swap(CSItemAddRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemAddRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemAddRsp& from);
  void MergeFrom(const CSItemAddRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSItemAddRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemAddRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveReq : public ::google::protobuf::Message {
 public:
  CSItemRemoveReq();
  virtual ~CSItemRemoveReq();
  
  CSItemRemoveReq(const CSItemRemoveReq& from);
  
  inline CSItemRemoveReq& operator=(const CSItemRemoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveReq& default_instance();
  
  void Swap(CSItemRemoveReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemRemoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveReq& from);
  void MergeFrom(const CSItemRemoveReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemRemoveReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemRemoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemRemoveRsp : public ::google::protobuf::Message {
 public:
  CSItemRemoveRsp();
  virtual ~CSItemRemoveRsp();
  
  CSItemRemoveRsp(const CSItemRemoveRsp& from);
  
  inline CSItemRemoveRsp& operator=(const CSItemRemoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemRemoveRsp& default_instance();
  
  void Swap(CSItemRemoveRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemRemoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemRemoveRsp& from);
  void MergeFrom(const CSItemRemoveRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemRemoveRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemRemoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseReq : public ::google::protobuf::Message {
 public:
  CSItemUseReq();
  virtual ~CSItemUseReq();
  
  CSItemUseReq(const CSItemUseReq& from);
  
  inline CSItemUseReq& operator=(const CSItemUseReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseReq& default_instance();
  
  void Swap(CSItemUseReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUseReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseReq& from);
  void MergeFrom(const CSItemUseReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 item_id = 2;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemUseReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUseReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUseRsp : public ::google::protobuf::Message {
 public:
  CSItemUseRsp();
  virtual ~CSItemUseRsp();
  
  CSItemUseRsp(const CSItemUseRsp& from);
  
  inline CSItemUseRsp& operator=(const CSItemUseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUseRsp& default_instance();
  
  void Swap(CSItemUseRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUseRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUseRsp& from);
  void MergeFrom(const CSItemUseRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemUseRsp)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUseRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveReq : public ::google::protobuf::Message {
 public:
  CSItemMoveReq();
  virtual ~CSItemMoveReq();
  
  CSItemMoveReq(const CSItemMoveReq& from);
  
  inline CSItemMoveReq& operator=(const CSItemMoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveReq& default_instance();
  
  void Swap(CSItemMoveReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveReq& from);
  void MergeFrom(const CSItemMoveReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);
  
  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveReq)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveRsp : public ::google::protobuf::Message {
 public:
  CSItemMoveRsp();
  virtual ~CSItemMoveRsp();
  
  CSItemMoveRsp(const CSItemMoveRsp& from);
  
  inline CSItemMoveRsp& operator=(const CSItemMoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveRsp& default_instance();
  
  void Swap(CSItemMoveRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveRsp& from);
  void MergeFrom(const CSItemMoveRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos_from = 1;
  inline bool has_pos_from() const;
  inline void clear_pos_from();
  static const int kPosFromFieldNumber = 1;
  inline ::google::protobuf::uint32 pos_from() const;
  inline void set_pos_from(::google::protobuf::uint32 value);
  
  // required uint32 pos_to = 2;
  inline bool has_pos_to() const;
  inline void clear_pos_to();
  static const int kPosToFieldNumber = 2;
  inline ::google::protobuf::uint32 pos_to() const;
  inline void set_pos_to(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveRsp)
 private:
  inline void set_has_pos_from();
  inline void clear_has_pos_from();
  inline void set_has_pos_to();
  inline void clear_has_pos_to();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_from_;
  ::google::protobuf::uint32 pos_to_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemUpdateRsp : public ::google::protobuf::Message {
 public:
  CSItemUpdateRsp();
  virtual ~CSItemUpdateRsp();
  
  CSItemUpdateRsp(const CSItemUpdateRsp& from);
  
  inline CSItemUpdateRsp& operator=(const CSItemUpdateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemUpdateRsp& default_instance();
  
  void Swap(CSItemUpdateRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemUpdateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemUpdateRsp& from);
  void MergeFrom(const CSItemUpdateRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSItemInfo item = 1;
  inline int item_size() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::CSItemInfo& item(int index) const;
  inline ::CSItemInfo* mutable_item(int index);
  inline ::CSItemInfo* add_item();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      item() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_item();
  
  // @@protoc_insertion_point(class_scope:CSItemUpdateRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemUpdateRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSItemOrderReq : public ::google::protobuf::Message {
 public:
  CSItemOrderReq();
  virtual ~CSItemOrderReq();
  
  CSItemOrderReq(const CSItemOrderReq& from);
  
  inline CSItemOrderReq& operator=(const CSItemOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemOrderReq& default_instance();
  
  void Swap(CSItemOrderReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemOrderReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemOrderReq& from);
  void MergeFrom(const CSItemOrderReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 target = 1;
  inline bool has_target() const;
  inline void clear_target();
  static const int kTargetFieldNumber = 1;
  inline ::google::protobuf::uint32 target() const;
  inline void set_target(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemOrderReq)
 private:
  inline void set_has_target();
  inline void clear_has_target();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 target_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemOrderReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveToRecycleBinReq : public ::google::protobuf::Message {
 public:
  CSItemMoveToRecycleBinReq();
  virtual ~CSItemMoveToRecycleBinReq();
  
  CSItemMoveToRecycleBinReq(const CSItemMoveToRecycleBinReq& from);
  
  inline CSItemMoveToRecycleBinReq& operator=(const CSItemMoveToRecycleBinReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveToRecycleBinReq& default_instance();
  
  void Swap(CSItemMoveToRecycleBinReq* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveToRecycleBinReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveToRecycleBinReq& from);
  void MergeFrom(const CSItemMoveToRecycleBinReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveToRecycleBinReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveToRecycleBinReq* default_instance_;
};
// -------------------------------------------------------------------

class CSItemMoveToRecycleBinRsp : public ::google::protobuf::Message {
 public:
  CSItemMoveToRecycleBinRsp();
  virtual ~CSItemMoveToRecycleBinRsp();
  
  CSItemMoveToRecycleBinRsp(const CSItemMoveToRecycleBinRsp& from);
  
  inline CSItemMoveToRecycleBinRsp& operator=(const CSItemMoveToRecycleBinRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSItemMoveToRecycleBinRsp& default_instance();
  
  void Swap(CSItemMoveToRecycleBinRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSItemMoveToRecycleBinRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSItemMoveToRecycleBinRsp& from);
  void MergeFrom(const CSItemMoveToRecycleBinRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSItemMoveToRecycleBinRsp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSItemMoveToRecycleBinRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSRepoRecycleBinItemReq : public ::google::protobuf::Message {
 public:
  CSRepoRecycleBinItemReq();
  virtual ~CSRepoRecycleBinItemReq();
  
  CSRepoRecycleBinItemReq(const CSRepoRecycleBinItemReq& from);
  
  inline CSRepoRecycleBinItemReq& operator=(const CSRepoRecycleBinItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRepoRecycleBinItemReq& default_instance();
  
  void Swap(CSRepoRecycleBinItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSRepoRecycleBinItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRepoRecycleBinItemReq& from);
  void MergeFrom(const CSRepoRecycleBinItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRepoRecycleBinItemReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRepoRecycleBinItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSRepoRecycleBinItemRsp : public ::google::protobuf::Message {
 public:
  CSRepoRecycleBinItemRsp();
  virtual ~CSRepoRecycleBinItemRsp();
  
  CSRepoRecycleBinItemRsp(const CSRepoRecycleBinItemRsp& from);
  
  inline CSRepoRecycleBinItemRsp& operator=(const CSRepoRecycleBinItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSRepoRecycleBinItemRsp& default_instance();
  
  void Swap(CSRepoRecycleBinItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSRepoRecycleBinItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSRepoRecycleBinItemRsp& from);
  void MergeFrom(const CSRepoRecycleBinItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 coin = 1;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSRepoRecycleBinItemRsp)
 private:
  inline void set_has_coin();
  inline void clear_has_coin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 coin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSRepoRecycleBinItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceInfo : public ::google::protobuf::Message {
 public:
  CSInstanceInfo();
  virtual ~CSInstanceInfo();
  
  CSInstanceInfo(const CSInstanceInfo& from);
  
  inline CSInstanceInfo& operator=(const CSInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceInfo& default_instance();
  
  void Swap(CSInstanceInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceInfo& from);
  void MergeFrom(const CSInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 instance_id = 1;
  inline bool has_instance_id() const;
  inline void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  inline ::google::protobuf::uint32 instance_id() const;
  inline void set_instance_id(::google::protobuf::uint32 value);
  
  // required uint32 star = 2;
  inline bool has_star() const;
  inline void clear_star();
  static const int kStarFieldNumber = 2;
  inline ::google::protobuf::uint32 star() const;
  inline void set_star(::google::protobuf::uint32 value);
  
  // required bool can_enter_flag = 3;
  inline bool has_can_enter_flag() const;
  inline void clear_can_enter_flag();
  static const int kCanEnterFlagFieldNumber = 3;
  inline bool can_enter_flag() const;
  inline void set_can_enter_flag(bool value);
  
  // required uint32 refresh_times = 4;
  inline bool has_refresh_times() const;
  inline void clear_refresh_times();
  static const int kRefreshTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 refresh_times() const;
  inline void set_refresh_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceInfo)
 private:
  inline void set_has_instance_id();
  inline void clear_has_instance_id();
  inline void set_has_star();
  inline void clear_has_star();
  inline void set_has_can_enter_flag();
  inline void clear_has_can_enter_flag();
  inline void set_has_refresh_times();
  inline void clear_has_refresh_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 instance_id_;
  ::google::protobuf::uint32 star_;
  bool can_enter_flag_;
  ::google::protobuf::uint32 refresh_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceReq : public ::google::protobuf::Message {
 public:
  CSInstanceReq();
  virtual ~CSInstanceReq();
  
  CSInstanceReq(const CSInstanceReq& from);
  
  inline CSInstanceReq& operator=(const CSInstanceReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceReq& default_instance();
  
  void Swap(CSInstanceReq* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceReq& from);
  void MergeFrom(const CSInstanceReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 start = 1;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 1;
  inline ::google::protobuf::uint32 start() const;
  inline void set_start(::google::protobuf::uint32 value);
  
  // required uint32 end = 2;
  inline bool has_end() const;
  inline void clear_end();
  static const int kEndFieldNumber = 2;
  inline ::google::protobuf::uint32 end() const;
  inline void set_end(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSInstanceReq)
 private:
  inline void set_has_start();
  inline void clear_has_start();
  inline void set_has_end();
  inline void clear_has_end();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 end_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSInstanceRsp : public ::google::protobuf::Message {
 public:
  CSInstanceRsp();
  virtual ~CSInstanceRsp();
  
  CSInstanceRsp(const CSInstanceRsp& from);
  
  inline CSInstanceRsp& operator=(const CSInstanceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSInstanceRsp& default_instance();
  
  void Swap(CSInstanceRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSInstanceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSInstanceRsp& from);
  void MergeFrom(const CSInstanceRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSInstanceInfo new_instances = 1;
  inline int new_instances_size() const;
  inline void clear_new_instances();
  static const int kNewInstancesFieldNumber = 1;
  inline const ::CSInstanceInfo& new_instances(int index) const;
  inline ::CSInstanceInfo* mutable_new_instances(int index);
  inline ::CSInstanceInfo* add_new_instances();
  inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >&
      new_instances() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >*
      mutable_new_instances();
  
  // @@protoc_insertion_point(class_scope:CSInstanceRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo > new_instances_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSInstanceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUGCityBoxRewardReq : public ::google::protobuf::Message {
 public:
  CSGetUGCityBoxRewardReq();
  virtual ~CSGetUGCityBoxRewardReq();
  
  CSGetUGCityBoxRewardReq(const CSGetUGCityBoxRewardReq& from);
  
  inline CSGetUGCityBoxRewardReq& operator=(const CSGetUGCityBoxRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUGCityBoxRewardReq& default_instance();
  
  void Swap(CSGetUGCityBoxRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUGCityBoxRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUGCityBoxRewardReq& from);
  void MergeFrom(const CSGetUGCityBoxRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUGCityBoxRewardReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUGCityBoxRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUGCityBoxRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetUGCityBoxRewardRsp();
  virtual ~CSGetUGCityBoxRewardRsp();
  
  CSGetUGCityBoxRewardRsp(const CSGetUGCityBoxRewardRsp& from);
  
  inline CSGetUGCityBoxRewardRsp& operator=(const CSGetUGCityBoxRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUGCityBoxRewardRsp& default_instance();
  
  void Swap(CSGetUGCityBoxRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUGCityBoxRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUGCityBoxRewardRsp& from);
  void MergeFrom(const CSGetUGCityBoxRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // optional .CSReward reward = 3;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 3;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSGetUGCityBoxRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 index_;
  ::CSReward* reward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUGCityBoxRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSReward_RewardInfo : public ::google::protobuf::Message {
 public:
  CSReward_RewardInfo();
  virtual ~CSReward_RewardInfo();
  
  CSReward_RewardInfo(const CSReward_RewardInfo& from);
  
  inline CSReward_RewardInfo& operator=(const CSReward_RewardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward_RewardInfo& default_instance();
  
  void Swap(CSReward_RewardInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSReward_RewardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward_RewardInfo& from);
  void MergeFrom(const CSReward_RewardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_level = 2;
  inline bool has_item_level() const;
  inline void clear_item_level();
  static const int kItemLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 item_level() const;
  inline void set_item_level(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 3;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSReward.RewardInfo)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_level();
  inline void clear_has_item_level();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSReward_RewardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSReward : public ::google::protobuf::Message {
 public:
  CSReward();
  virtual ~CSReward();
  
  CSReward(const CSReward& from);
  
  inline CSReward& operator=(const CSReward& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSReward& default_instance();
  
  void Swap(CSReward* other);
  
  // implements Message ----------------------------------------------
  
  CSReward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSReward& from);
  void MergeFrom(const CSReward& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSReward_RewardInfo RewardInfo;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSReward.RewardInfo rewards = 1;
  inline int rewards_size() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::CSReward_RewardInfo& rewards(int index) const;
  inline ::CSReward_RewardInfo* mutable_rewards(int index);
  inline ::CSReward_RewardInfo* add_rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
      rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
      mutable_rewards();
  
  // optional uint32 add_coin = 2;
  inline bool has_add_coin() const;
  inline void clear_add_coin();
  static const int kAddCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 add_coin() const;
  inline void set_add_coin(::google::protobuf::uint32 value);
  
  // optional uint32 add_exp = 3;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 3;
  inline ::google::protobuf::uint32 add_exp() const;
  inline void set_add_exp(::google::protobuf::uint32 value);
  
  // optional uint32 add_exploit = 4;
  inline bool has_add_exploit() const;
  inline void clear_add_exploit();
  static const int kAddExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 add_exploit() const;
  inline void set_add_exploit(::google::protobuf::uint32 value);
  
  // optional uint32 add_diamond = 5;
  inline bool has_add_diamond() const;
  inline void clear_add_diamond();
  static const int kAddDiamondFieldNumber = 5;
  inline ::google::protobuf::uint32 add_diamond() const;
  inline void set_add_diamond(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSReward)
 private:
  inline void set_has_add_coin();
  inline void clear_has_add_coin();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  inline void set_has_add_exploit();
  inline void clear_has_add_exploit();
  inline void set_has_add_diamond();
  inline void clear_has_add_diamond();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo > rewards_;
  ::google::protobuf::uint32 add_coin_;
  ::google::protobuf::uint32 add_exp_;
  ::google::protobuf::uint32 add_exploit_;
  ::google::protobuf::uint32 add_diamond_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSReward* default_instance_;
};
// -------------------------------------------------------------------

class CSLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSLevelUpRsp();
  virtual ~CSLevelUpRsp();
  
  CSLevelUpRsp(const CSLevelUpRsp& from);
  
  inline CSLevelUpRsp& operator=(const CSLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLevelUpRsp& default_instance();
  
  void Swap(CSLevelUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLevelUpRsp& from);
  void MergeFrom(const CSLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSLevelUpRsp)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBasicUserBattleInfoRsp : public ::google::protobuf::Message {
 public:
  CSBasicUserBattleInfoRsp();
  virtual ~CSBasicUserBattleInfoRsp();
  
  CSBasicUserBattleInfoRsp(const CSBasicUserBattleInfoRsp& from);
  
  inline CSBasicUserBattleInfoRsp& operator=(const CSBasicUserBattleInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBasicUserBattleInfoRsp& default_instance();
  
  void Swap(CSBasicUserBattleInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSBasicUserBattleInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBasicUserBattleInfoRsp& from);
  void MergeFrom(const CSBasicUserBattleInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .BasicUserBattleInfo battle_info = 4;
  inline bool has_battle_info() const;
  inline void clear_battle_info();
  static const int kBattleInfoFieldNumber = 4;
  inline const ::BasicUserBattleInfo& battle_info() const;
  inline ::BasicUserBattleInfo* mutable_battle_info();
  inline ::BasicUserBattleInfo* release_battle_info();
  
  // @@protoc_insertion_point(class_scope:CSBasicUserBattleInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_battle_info();
  inline void clear_has_battle_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 reg_time_;
  ::BasicUserBattleInfo* battle_info_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBasicUserBattleInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneReq : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneReq();
  virtual ~CSSearchSpiritStoneReq();
  
  CSSearchSpiritStoneReq(const CSSearchSpiritStoneReq& from);
  
  inline CSSearchSpiritStoneReq& operator=(const CSSearchSpiritStoneReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneReq& default_instance();
  
  void Swap(CSSearchSpiritStoneReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchSpiritStoneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneReq& from);
  void MergeFrom(const CSSearchSpiritStoneReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchSpiritStoneReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSearchSpiritStoneRsp : public ::google::protobuf::Message {
 public:
  CSSearchSpiritStoneRsp();
  virtual ~CSSearchSpiritStoneRsp();
  
  CSSearchSpiritStoneRsp(const CSSearchSpiritStoneRsp& from);
  
  inline CSSearchSpiritStoneRsp& operator=(const CSSearchSpiritStoneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSearchSpiritStoneRsp& default_instance();
  
  void Swap(CSSearchSpiritStoneRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSearchSpiritStoneRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSearchSpiritStoneRsp& from);
  void MergeFrom(const CSSearchSpiritStoneRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 cost_coin = 2;
  inline bool has_cost_coin() const;
  inline void clear_cost_coin();
  static const int kCostCoinFieldNumber = 2;
  inline ::google::protobuf::uint32 cost_coin() const;
  inline void set_cost_coin(::google::protobuf::uint32 value);
  
  // optional uint32 mon_id = 3;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // optional uint32 item_id = 4;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSearchSpiritStoneRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cost_coin();
  inline void clear_has_cost_coin();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_item_id();
  inline void clear_has_item_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 cost_coin_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 item_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSearchSpiritStoneRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagReq();
  virtual ~CSSpiritStoneMoveBagReq();
  
  CSSpiritStoneMoveBagReq(const CSSpiritStoneMoveBagReq& from);
  
  inline CSSpiritStoneMoveBagReq& operator=(const CSSpiritStoneMoveBagReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagReq& default_instance();
  
  void Swap(CSSpiritStoneMoveBagReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneMoveBagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagReq& from);
  void MergeFrom(const CSSpiritStoneMoveBagReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneMoveBagRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneMoveBagRsp();
  virtual ~CSSpiritStoneMoveBagRsp();
  
  CSSpiritStoneMoveBagRsp(const CSSpiritStoneMoveBagRsp& from);
  
  inline CSSpiritStoneMoveBagRsp& operator=(const CSSpiritStoneMoveBagRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneMoveBagRsp& default_instance();
  
  void Swap(CSSpiritStoneMoveBagRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneMoveBagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneMoveBagRsp& from);
  void MergeFrom(const CSSpiritStoneMoveBagRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneMoveBagRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneMoveBagRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpReq();
  virtual ~CSSpiritStoneLevelUpReq();
  
  CSSpiritStoneLevelUpReq(const CSSpiritStoneLevelUpReq& from);
  
  inline CSSpiritStoneLevelUpReq& operator=(const CSSpiritStoneLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpReq& default_instance();
  
  void Swap(CSSpiritStoneLevelUpReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneLevelUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpReq& from);
  void MergeFrom(const CSSpiritStoneLevelUpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneLevelUpRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneLevelUpRsp();
  virtual ~CSSpiritStoneLevelUpRsp();
  
  CSSpiritStoneLevelUpRsp(const CSSpiritStoneLevelUpRsp& from);
  
  inline CSSpiritStoneLevelUpRsp& operator=(const CSSpiritStoneLevelUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneLevelUpRsp& default_instance();
  
  void Swap(CSSpiritStoneLevelUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneLevelUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneLevelUpRsp& from);
  void MergeFrom(const CSSpiritStoneLevelUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 cost_sp = 3;
  inline bool has_cost_sp() const;
  inline void clear_cost_sp();
  static const int kCostSpFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_sp() const;
  inline void set_cost_sp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneLevelUpRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_cost_sp();
  inline void clear_has_cost_sp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 cost_sp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneLevelUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPReq : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPReq();
  virtual ~CSSpiritStoneToSPReq();
  
  CSSpiritStoneToSPReq(const CSSpiritStoneToSPReq& from);
  
  inline CSSpiritStoneToSPReq& operator=(const CSSpiritStoneToSPReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPReq& default_instance();
  
  void Swap(CSSpiritStoneToSPReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneToSPReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPReq& from);
  void MergeFrom(const CSSpiritStoneToSPReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneToSPReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSpiritStoneToSPRsp : public ::google::protobuf::Message {
 public:
  CSSpiritStoneToSPRsp();
  virtual ~CSSpiritStoneToSPRsp();
  
  CSSpiritStoneToSPRsp(const CSSpiritStoneToSPRsp& from);
  
  inline CSSpiritStoneToSPRsp& operator=(const CSSpiritStoneToSPRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSpiritStoneToSPRsp& default_instance();
  
  void Swap(CSSpiritStoneToSPRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSpiritStoneToSPRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSpiritStoneToSPRsp& from);
  void MergeFrom(const CSSpiritStoneToSPRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 sp_key = 2;
  inline bool has_sp_key() const;
  inline void clear_sp_key();
  static const int kSpKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 sp_key() const;
  inline void set_sp_key(::google::protobuf::uint32 value);
  
  // optional uint32 sp_value = 3;
  inline bool has_sp_value() const;
  inline void clear_sp_value();
  static const int kSpValueFieldNumber = 3;
  inline ::google::protobuf::uint32 sp_value() const;
  inline void set_sp_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSpiritStoneToSPRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_sp_key();
  inline void clear_has_sp_key();
  inline void set_has_sp_value();
  inline void clear_has_sp_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 sp_key_;
  ::google::protobuf::uint32 sp_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSpiritStoneToSPRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoReq : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoReq();
  virtual ~CSGetExchangeSSInfoReq();
  
  CSGetExchangeSSInfoReq(const CSGetExchangeSSInfoReq& from);
  
  inline CSGetExchangeSSInfoReq& operator=(const CSGetExchangeSSInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoReq& default_instance();
  
  void Swap(CSGetExchangeSSInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExchangeSSInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoReq& from);
  void MergeFrom(const CSGetExchangeSSInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeSSInfo : public ::google::protobuf::Message {
 public:
  ExchangeSSInfo();
  virtual ~ExchangeSSInfo();
  
  ExchangeSSInfo(const ExchangeSSInfo& from);
  
  inline ExchangeSSInfo& operator=(const ExchangeSSInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeSSInfo& default_instance();
  
  void Swap(ExchangeSSInfo* other);
  
  // implements Message ----------------------------------------------
  
  ExchangeSSInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeSSInfo& from);
  void MergeFrom(const ExchangeSSInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ss_id = 1;
  inline bool has_ss_id() const;
  inline void clear_ss_id();
  static const int kSsIdFieldNumber = 1;
  inline ::google::protobuf::uint32 ss_id() const;
  inline void set_ss_id(::google::protobuf::uint32 value);
  
  // required uint32 consume = 2;
  inline bool has_consume() const;
  inline void clear_consume();
  static const int kConsumeFieldNumber = 2;
  inline ::google::protobuf::uint32 consume() const;
  inline void set_consume(::google::protobuf::uint32 value);
  
  // required uint32 convert = 3;
  inline bool has_convert() const;
  inline void clear_convert();
  static const int kConvertFieldNumber = 3;
  inline ::google::protobuf::uint32 convert() const;
  inline void set_convert(::google::protobuf::uint32 value);
  
  // required uint32 need_chip = 4;
  inline bool has_need_chip() const;
  inline void clear_need_chip();
  static const int kNeedChipFieldNumber = 4;
  inline ::google::protobuf::uint32 need_chip() const;
  inline void set_need_chip(::google::protobuf::uint32 value);
  
  // required uint32 key = 5;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 5;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ExchangeSSInfo)
 private:
  inline void set_has_ss_id();
  inline void clear_has_ss_id();
  inline void set_has_consume();
  inline void clear_has_consume();
  inline void set_has_convert();
  inline void clear_has_convert();
  inline void set_has_need_chip();
  inline void clear_has_need_chip();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ss_id_;
  ::google::protobuf::uint32 consume_;
  ::google::protobuf::uint32 convert_;
  ::google::protobuf::uint32 need_chip_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ExchangeSSInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetExchangeSSInfoRsp : public ::google::protobuf::Message {
 public:
  CSGetExchangeSSInfoRsp();
  virtual ~CSGetExchangeSSInfoRsp();
  
  CSGetExchangeSSInfoRsp(const CSGetExchangeSSInfoRsp& from);
  
  inline CSGetExchangeSSInfoRsp& operator=(const CSGetExchangeSSInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetExchangeSSInfoRsp& default_instance();
  
  void Swap(CSGetExchangeSSInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetExchangeSSInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetExchangeSSInfoRsp& from);
  void MergeFrom(const CSGetExchangeSSInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ExchangeSSInfo ss_list = 1;
  inline int ss_list_size() const;
  inline void clear_ss_list();
  static const int kSsListFieldNumber = 1;
  inline const ::ExchangeSSInfo& ss_list(int index) const;
  inline ::ExchangeSSInfo* mutable_ss_list(int index);
  inline ::ExchangeSSInfo* add_ss_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
      ss_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
      mutable_ss_list();
  
  // @@protoc_insertion_point(class_scope:CSGetExchangeSSInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo > ss_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetExchangeSSInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorReq : public ::google::protobuf::Message {
 public:
  CSAddManorReq();
  virtual ~CSAddManorReq();
  
  CSAddManorReq(const CSAddManorReq& from);
  
  inline CSAddManorReq& operator=(const CSAddManorReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorReq& default_instance();
  
  void Swap(CSAddManorReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddManorReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorReq& from);
  void MergeFrom(const CSAddManorReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 manor_id = 1;
  inline bool has_manor_id() const;
  inline void clear_manor_id();
  static const int kManorIdFieldNumber = 1;
  inline ::google::protobuf::uint32 manor_id() const;
  inline void set_manor_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddManorReq)
 private:
  inline void set_has_manor_id();
  inline void clear_has_manor_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 manor_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddManorReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddManorRsp : public ::google::protobuf::Message {
 public:
  CSAddManorRsp();
  virtual ~CSAddManorRsp();
  
  CSAddManorRsp(const CSAddManorRsp& from);
  
  inline CSAddManorRsp& operator=(const CSAddManorRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddManorRsp& default_instance();
  
  void Swap(CSAddManorRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddManorRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddManorRsp& from);
  void MergeFrom(const CSAddManorRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddManorRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddManorRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpReq : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpReq();
  virtual ~CSWarmSportLvUpReq();
  
  CSWarmSportLvUpReq(const CSWarmSportLvUpReq& from);
  
  inline CSWarmSportLvUpReq& operator=(const CSWarmSportLvUpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpReq& default_instance();
  
  void Swap(CSWarmSportLvUpReq* other);
  
  // implements Message ----------------------------------------------
  
  CSWarmSportLvUpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpReq& from);
  void MergeFrom(const CSWarmSportLvUpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional bool to_max_lv = 2 [default = false];
  inline bool has_to_max_lv() const;
  inline void clear_to_max_lv();
  static const int kToMaxLvFieldNumber = 2;
  inline bool to_max_lv() const;
  inline void set_to_max_lv(bool value);
  
  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_to_max_lv();
  inline void clear_has_to_max_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  bool to_max_lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWarmSportLvUpReq* default_instance_;
};
// -------------------------------------------------------------------

class CSWarmSportLvUpRsp : public ::google::protobuf::Message {
 public:
  CSWarmSportLvUpRsp();
  virtual ~CSWarmSportLvUpRsp();
  
  CSWarmSportLvUpRsp(const CSWarmSportLvUpRsp& from);
  
  inline CSWarmSportLvUpRsp& operator=(const CSWarmSportLvUpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSWarmSportLvUpRsp& default_instance();
  
  void Swap(CSWarmSportLvUpRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSWarmSportLvUpRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSWarmSportLvUpRsp& from);
  void MergeFrom(const CSWarmSportLvUpRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSWarmSportLvUpRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSWarmSportLvUpRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptReq : public ::google::protobuf::Message {
 public:
  CSManorOptReq();
  virtual ~CSManorOptReq();
  
  CSManorOptReq(const CSManorOptReq& from);
  
  inline CSManorOptReq& operator=(const CSManorOptReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptReq& default_instance();
  
  void Swap(CSManorOptReq* other);
  
  // implements Message ----------------------------------------------
  
  CSManorOptReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptReq& from);
  void MergeFrom(const CSManorOptReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSManorOptReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSManorOptReq* default_instance_;
};
// -------------------------------------------------------------------

class CSManorOptRsp : public ::google::protobuf::Message {
 public:
  CSManorOptRsp();
  virtual ~CSManorOptRsp();
  
  CSManorOptRsp(const CSManorOptRsp& from);
  
  inline CSManorOptRsp& operator=(const CSManorOptRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSManorOptRsp& default_instance();
  
  void Swap(CSManorOptRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSManorOptRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSManorOptRsp& from);
  void MergeFrom(const CSManorOptRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSManorOptRsp)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSManorOptRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListReq : public ::google::protobuf::Message {
 public:
  CSMonListReq();
  virtual ~CSMonListReq();
  
  CSMonListReq(const CSMonListReq& from);
  
  inline CSMonListReq& operator=(const CSMonListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListReq& default_instance();
  
  void Swap(CSMonListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMonListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListReq& from);
  void MergeFrom(const CSMonListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMonListReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMonListReq* default_instance_;
};
// -------------------------------------------------------------------

class MonInfo : public ::google::protobuf::Message {
 public:
  MonInfo();
  virtual ~MonInfo();
  
  MonInfo(const MonInfo& from);
  
  inline MonInfo& operator=(const MonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonInfo& default_instance();
  
  void Swap(MonInfo* other);
  
  // implements Message ----------------------------------------------
  
  MonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonInfo& from);
  void MergeFrom(const MonInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:MonInfo)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static MonInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSMonListRsp : public ::google::protobuf::Message {
 public:
  CSMonListRsp();
  virtual ~CSMonListRsp();
  
  CSMonListRsp(const CSMonListRsp& from);
  
  inline CSMonListRsp& operator=(const CSMonListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMonListRsp& default_instance();
  
  void Swap(CSMonListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMonListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMonListRsp& from);
  void MergeFrom(const CSMonListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .MonInfo mon_info = 4;
  inline int mon_info_size() const;
  inline void clear_mon_info();
  static const int kMonInfoFieldNumber = 4;
  inline const ::MonInfo& mon_info(int index) const;
  inline ::MonInfo* mutable_mon_info(int index);
  inline ::MonInfo* add_mon_info();
  inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
      mon_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
      mutable_mon_info();
  
  // @@protoc_insertion_point(class_scope:CSMonListRsp)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::MonInfo > mon_info_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMonListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusReq : public ::google::protobuf::Message {
 public:
  CSSetMonStatusReq();
  virtual ~CSSetMonStatusReq();
  
  CSSetMonStatusReq(const CSSetMonStatusReq& from);
  
  inline CSSetMonStatusReq& operator=(const CSSetMonStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusReq& default_instance();
  
  void Swap(CSSetMonStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMonStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusReq& from);
  void MergeFrom(const CSSetMonStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_status = 2;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMonStatusReq)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMonStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMonStatusRsp : public ::google::protobuf::Message {
 public:
  CSSetMonStatusRsp();
  virtual ~CSSetMonStatusRsp();
  
  CSSetMonStatusRsp(const CSSetMonStatusRsp& from);
  
  inline CSSetMonStatusRsp& operator=(const CSSetMonStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMonStatusRsp& default_instance();
  
  void Swap(CSSetMonStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMonStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMonStatusRsp& from);
  void MergeFrom(const CSSetMonStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // optional uint32 mon_id = 2;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // optional uint32 mon_status = 3;
  inline bool has_mon_status() const;
  inline void clear_mon_status();
  static const int kMonStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 mon_status() const;
  inline void set_mon_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMonStatusRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_status();
  inline void clear_has_mon_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMonStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomReq();
  virtual ~CSPVPQueryRoomReq();
  
  CSPVPQueryRoomReq(const CSPVPQueryRoomReq& from);
  
  inline CSPVPQueryRoomReq& operator=(const CSPVPQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomReq& default_instance();
  
  void Swap(CSPVPQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomReq& from);
  void MergeFrom(const CSPVPQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPRoomBase : public ::google::protobuf::Message {
 public:
  PVPRoomBase();
  virtual ~PVPRoomBase();
  
  PVPRoomBase(const PVPRoomBase& from);
  
  inline PVPRoomBase& operator=(const PVPRoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPRoomBase& default_instance();
  
  void Swap(PVPRoomBase* other);
  
  // implements Message ----------------------------------------------
  
  PVPRoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPRoomBase& from);
  void MergeFrom(const PVPRoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PVPRoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVPRoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPQueryRoomRsp();
  virtual ~CSPVPQueryRoomRsp();
  
  CSPVPQueryRoomRsp(const CSPVPQueryRoomRsp& from);
  
  inline CSPVPQueryRoomRsp& operator=(const CSPVPQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPQueryRoomRsp& default_instance();
  
  void Swap(CSPVPQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPQueryRoomRsp& from);
  void MergeFrom(const CSPVPQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PVPRoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVPRoomBase& rooms(int index) const;
  inline ::PVPRoomBase* mutable_rooms(int index);
  inline ::PVPRoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSPVPQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PVPRoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVPBaseInfoRsp();
  virtual ~CSPVPBaseInfoRsp();
  
  CSPVPBaseInfoRsp(const CSPVPBaseInfoRsp& from);
  
  inline CSPVPBaseInfoRsp& operator=(const CSPVPBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPBaseInfoRsp& default_instance();
  
  void Swap(CSPVPBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPBaseInfoRsp& from);
  void MergeFrom(const CSPVPBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 winning = 1;
  inline bool has_winning() const;
  inline void clear_winning();
  static const int kWinningFieldNumber = 1;
  inline ::google::protobuf::uint32 winning() const;
  inline void set_winning(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPBaseInfoRsp)
 private:
  inline void set_has_winning();
  inline void clear_has_winning();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 winning_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPCreateRoomReq();
  virtual ~CSPVPCreateRoomReq();
  
  CSPVPCreateRoomReq(const CSPVPCreateRoomReq& from);
  
  inline CSPVPCreateRoomReq& operator=(const CSPVPCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCreateRoomReq& default_instance();
  
  void Swap(CSPVPCreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCreateRoomReq& from);
  void MergeFrom(const CSPVPCreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPCreateRoomReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 top_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomReq();
  virtual ~CSPVPJoinRoomReq();
  
  CSPVPJoinRoomReq(const CSPVPJoinRoomReq& from);
  
  inline CSPVPJoinRoomReq& operator=(const CSPVPJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomReq& default_instance();
  
  void Swap(CSPVPJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomReq& from);
  void MergeFrom(const CSPVPJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVPSeatBase : public ::google::protobuf::Message {
 public:
  PVPSeatBase();
  virtual ~PVPSeatBase();
  
  PVPSeatBase(const PVPSeatBase& from);
  
  inline PVPSeatBase& operator=(const PVPSeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVPSeatBase& default_instance();
  
  void Swap(PVPSeatBase* other);
  
  // implements Message ----------------------------------------------
  
  PVPSeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVPSeatBase& from);
  void MergeFrom(const PVPSeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // @@protoc_insertion_point(class_scope:PVPSeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVPSeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPJoinRoomRsp();
  virtual ~CSPVPJoinRoomRsp();
  
  CSPVPJoinRoomRsp(const CSPVPJoinRoomRsp& from);
  
  inline CSPVPJoinRoomRsp& operator=(const CSPVPJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPJoinRoomRsp& default_instance();
  
  void Swap(CSPVPJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPJoinRoomRsp& from);
  void MergeFrom(const CSPVPJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 3;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .PVPSeatBase seats = 4;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 4;
  inline const ::PVPSeatBase& seats(int index) const;
  inline ::PVPSeatBase* mutable_seats(int index);
  inline ::PVPSeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSPVPJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::RepeatedPtrField< ::PVPSeatBase > seats_;
  ::google::protobuf::uint32 top_level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomReq();
  virtual ~CSPVPExitRoomReq();
  
  CSPVPExitRoomReq(const CSPVPExitRoomReq& from);
  
  inline CSPVPExitRoomReq& operator=(const CSPVPExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomReq& default_instance();
  
  void Swap(CSPVPExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomReq& from);
  void MergeFrom(const CSPVPExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPExitRoomRsp();
  virtual ~CSPVPExitRoomRsp();
  
  CSPVPExitRoomRsp(const CSPVPExitRoomRsp& from);
  
  inline CSPVPExitRoomRsp& operator=(const CSPVPExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPExitRoomRsp& default_instance();
  
  void Swap(CSPVPExitRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPExitRoomRsp& from);
  void MergeFrom(const CSPVPExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPExitRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVPCloseRoomRsp();
  virtual ~CSPVPCloseRoomRsp();
  
  CSPVPCloseRoomRsp(const CSPVPCloseRoomRsp& from);
  
  inline CSPVPCloseRoomRsp& operator=(const CSPVPCloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCloseRoomRsp& default_instance();
  
  void Swap(CSPVPCloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCloseRoomRsp& from);
  void MergeFrom(const CSPVPCloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPCloseRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPChangeSeatReq : public ::google::protobuf::Message {
 public:
  CSPVPChangeSeatReq();
  virtual ~CSPVPChangeSeatReq();
  
  CSPVPChangeSeatReq(const CSPVPChangeSeatReq& from);
  
  inline CSPVPChangeSeatReq& operator=(const CSPVPChangeSeatReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPChangeSeatReq& default_instance();
  
  void Swap(CSPVPChangeSeatReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPChangeSeatReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPChangeSeatReq& from);
  void MergeFrom(const CSPVPChangeSeatReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPChangeSeatReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPChangeSeatReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPReadyReq();
  virtual ~CSPVPReadyReq();
  
  CSPVPReadyReq(const CSPVPReadyReq& from);
  
  inline CSPVPReadyReq& operator=(const CSPVPReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPReadyReq& default_instance();
  
  void Swap(CSPVPReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPReadyReq& from);
  void MergeFrom(const CSPVPReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPCancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVPCancelReadyReq();
  virtual ~CSPVPCancelReadyReq();
  
  CSPVPCancelReadyReq(const CSPVPCancelReadyReq& from);
  
  inline CSPVPCancelReadyReq& operator=(const CSPVPCancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPCancelReadyReq& default_instance();
  
  void Swap(CSPVPCancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPCancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPCancelReadyReq& from);
  void MergeFrom(const CSPVPCancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPCancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPCancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVPKickoffReq();
  virtual ~CSPVPKickoffReq();
  
  CSPVPKickoffReq(const CSPVPKickoffReq& from);
  
  inline CSPVPKickoffReq& operator=(const CSPVPKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffReq& default_instance();
  
  void Swap(CSPVPKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffReq& from);
  void MergeFrom(const CSPVPKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVPKickoffRsp();
  virtual ~CSPVPKickoffRsp();
  
  CSPVPKickoffRsp(const CSPVPKickoffRsp& from);
  
  inline CSPVPKickoffRsp& operator=(const CSPVPKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPKickoffRsp& default_instance();
  
  void Swap(CSPVPKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPKickoffRsp& from);
  void MergeFrom(const CSPVPKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartReq : public ::google::protobuf::Message {
 public:
  CSPVPStartReq();
  virtual ~CSPVPStartReq();
  
  CSPVPStartReq(const CSPVPStartReq& from);
  
  inline CSPVPStartReq& operator=(const CSPVPStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartReq& default_instance();
  
  void Swap(CSPVPStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartReq& from);
  void MergeFrom(const CSPVPStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVPStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVPStartRsp : public ::google::protobuf::Message {
 public:
  CSPVPStartRsp();
  virtual ~CSPVPStartRsp();
  
  CSPVPStartRsp(const CSPVPStartRsp& from);
  
  inline CSPVPStartRsp& operator=(const CSPVPStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVPStartRsp& default_instance();
  
  void Swap(CSPVPStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVPStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVPStartRsp& from);
  void MergeFrom(const CSPVPStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVPStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVPStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleReq : public ::google::protobuf::Message {
 public:
  CSPPVEBattleReq();
  virtual ~CSPPVEBattleReq();
  
  CSPPVEBattleReq(const CSPPVEBattleReq& from);
  
  inline CSPPVEBattleReq& operator=(const CSPPVEBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleReq& default_instance();
  
  void Swap(CSPPVEBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPPVEBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleReq& from);
  void MergeFrom(const CSPPVEBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPPVEBattleReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPPVEBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPPVEBattleRsp : public ::google::protobuf::Message {
 public:
  CSPPVEBattleRsp();
  virtual ~CSPPVEBattleRsp();
  
  CSPPVEBattleRsp(const CSPPVEBattleRsp& from);
  
  inline CSPPVEBattleRsp& operator=(const CSPPVEBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPPVEBattleRsp& default_instance();
  
  void Swap(CSPPVEBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPPVEBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPPVEBattleRsp& from);
  void MergeFrom(const CSPPVEBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 ids = 1;
  inline int ids_size() const;
  inline void clear_ids();
  static const int kIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 ids(int index) const;
  inline void set_ids(int index, ::google::protobuf::uint32 value);
  inline void add_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ids();
  
  // @@protoc_insertion_point(class_scope:CSPPVEBattleRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPPVEBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomReq();
  virtual ~CSPVEQueryRoomReq();
  
  CSPVEQueryRoomReq(const CSPVEQueryRoomReq& from);
  
  inline CSPVEQueryRoomReq& operator=(const CSPVEQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomReq& default_instance();
  
  void Swap(CSPVEQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomReq& from);
  void MergeFrom(const CSPVEQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class PVERoomBase : public ::google::protobuf::Message {
 public:
  PVERoomBase();
  virtual ~PVERoomBase();
  
  PVERoomBase(const PVERoomBase& from);
  
  inline PVERoomBase& operator=(const PVERoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVERoomBase& default_instance();
  
  void Swap(PVERoomBase* other);
  
  // implements Message ----------------------------------------------
  
  PVERoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVERoomBase& from);
  void MergeFrom(const PVERoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PVERoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVERoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEQueryRoomRsp();
  virtual ~CSPVEQueryRoomRsp();
  
  CSPVEQueryRoomRsp(const CSPVEQueryRoomRsp& from);
  
  inline CSPVEQueryRoomRsp& operator=(const CSPVEQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEQueryRoomRsp& default_instance();
  
  void Swap(CSPVEQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEQueryRoomRsp& from);
  void MergeFrom(const CSPVEQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PVERoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::PVERoomBase& rooms(int index) const;
  inline ::PVERoomBase* mutable_rooms(int index);
  inline ::PVERoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSPVEQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PVERoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSPVEBaseInfoRsp();
  virtual ~CSPVEBaseInfoRsp();
  
  CSPVEBaseInfoRsp(const CSPVEBaseInfoRsp& from);
  
  inline CSPVEBaseInfoRsp& operator=(const CSPVEBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEBaseInfoRsp& default_instance();
  
  void Swap(CSPVEBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEBaseInfoRsp& from);
  void MergeFrom(const CSPVEBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 countdown = 1;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 1;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEBaseInfoRsp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECreateRoomReq : public ::google::protobuf::Message {
 public:
  CSPVECreateRoomReq();
  virtual ~CSPVECreateRoomReq();
  
  CSPVECreateRoomReq(const CSPVECreateRoomReq& from);
  
  inline CSPVECreateRoomReq& operator=(const CSPVECreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECreateRoomReq& default_instance();
  
  void Swap(CSPVECreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECreateRoomReq& from);
  void MergeFrom(const CSPVECreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 top_level = 1;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 battle_id = 2;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVECreateRoomReq)
 private:
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 battle_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomReq();
  virtual ~CSPVEJoinRoomReq();
  
  CSPVEJoinRoomReq(const CSPVEJoinRoomReq& from);
  
  inline CSPVEJoinRoomReq& operator=(const CSPVEJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomReq& default_instance();
  
  void Swap(CSPVEJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomReq& from);
  void MergeFrom(const CSPVEJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomFailureRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomFailureRsp();
  virtual ~CSPVEJoinRoomFailureRsp();
  
  CSPVEJoinRoomFailureRsp(const CSPVEJoinRoomFailureRsp& from);
  
  inline CSPVEJoinRoomFailureRsp& operator=(const CSPVEJoinRoomFailureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomFailureRsp& default_instance();
  
  void Swap(CSPVEJoinRoomFailureRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomFailureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomFailureRsp& from);
  void MergeFrom(const CSPVEJoinRoomFailureRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomFailureRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomFailureRsp* default_instance_;
};
// -------------------------------------------------------------------

class PVESeatBase : public ::google::protobuf::Message {
 public:
  PVESeatBase();
  virtual ~PVESeatBase();
  
  PVESeatBase(const PVESeatBase& from);
  
  inline PVESeatBase& operator=(const PVESeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PVESeatBase& default_instance();
  
  void Swap(PVESeatBase* other);
  
  // implements Message ----------------------------------------------
  
  PVESeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PVESeatBase& from);
  void MergeFrom(const PVESeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // @@protoc_insertion_point(class_scope:PVESeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PVESeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEJoinRoomRsp();
  virtual ~CSPVEJoinRoomRsp();
  
  CSPVEJoinRoomRsp(const CSPVEJoinRoomRsp& from);
  
  inline CSPVEJoinRoomRsp& operator=(const CSPVEJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEJoinRoomRsp& default_instance();
  
  void Swap(CSPVEJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEJoinRoomRsp& from);
  void MergeFrom(const CSPVEJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .PVESeatBase seats = 3;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 3;
  inline const ::PVESeatBase& seats(int index) const;
  inline ::PVESeatBase* mutable_seats(int index);
  inline ::PVESeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSPVEJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::RepeatedPtrField< ::PVESeatBase > seats_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomReq : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomReq();
  virtual ~CSPVEExitRoomReq();
  
  CSPVEExitRoomReq(const CSPVEExitRoomReq& from);
  
  inline CSPVEExitRoomReq& operator=(const CSPVEExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomReq& default_instance();
  
  void Swap(CSPVEExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomReq& from);
  void MergeFrom(const CSPVEExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEExitRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVEExitRoomRsp();
  virtual ~CSPVEExitRoomRsp();
  
  CSPVEExitRoomRsp(const CSPVEExitRoomRsp& from);
  
  inline CSPVEExitRoomRsp& operator=(const CSPVEExitRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEExitRoomRsp& default_instance();
  
  void Swap(CSPVEExitRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEExitRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEExitRoomRsp& from);
  void MergeFrom(const CSPVEExitRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEExitRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEExitRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSPVECloseRoomRsp();
  virtual ~CSPVECloseRoomRsp();
  
  CSPVECloseRoomRsp(const CSPVECloseRoomRsp& from);
  
  inline CSPVECloseRoomRsp& operator=(const CSPVECloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECloseRoomRsp& default_instance();
  
  void Swap(CSPVECloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECloseRoomRsp& from);
  void MergeFrom(const CSPVECloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVECloseRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEReadyReq : public ::google::protobuf::Message {
 public:
  CSPVEReadyReq();
  virtual ~CSPVEReadyReq();
  
  CSPVEReadyReq(const CSPVEReadyReq& from);
  
  inline CSPVEReadyReq& operator=(const CSPVEReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEReadyReq& default_instance();
  
  void Swap(CSPVEReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEReadyReq& from);
  void MergeFrom(const CSPVEReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVECancelReadyReq : public ::google::protobuf::Message {
 public:
  CSPVECancelReadyReq();
  virtual ~CSPVECancelReadyReq();
  
  CSPVECancelReadyReq(const CSPVECancelReadyReq& from);
  
  inline CSPVECancelReadyReq& operator=(const CSPVECancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVECancelReadyReq& default_instance();
  
  void Swap(CSPVECancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVECancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVECancelReadyReq& from);
  void MergeFrom(const CSPVECancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVECancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVECancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffReq : public ::google::protobuf::Message {
 public:
  CSPVEKickoffReq();
  virtual ~CSPVEKickoffReq();
  
  CSPVEKickoffReq(const CSPVEKickoffReq& from);
  
  inline CSPVEKickoffReq& operator=(const CSPVEKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffReq& default_instance();
  
  void Swap(CSPVEKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffReq& from);
  void MergeFrom(const CSPVEKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEKickoffRsp : public ::google::protobuf::Message {
 public:
  CSPVEKickoffRsp();
  virtual ~CSPVEKickoffRsp();
  
  CSPVEKickoffRsp(const CSPVEKickoffRsp& from);
  
  inline CSPVEKickoffRsp& operator=(const CSPVEKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEKickoffRsp& default_instance();
  
  void Swap(CSPVEKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEKickoffRsp& from);
  void MergeFrom(const CSPVEKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartReq : public ::google::protobuf::Message {
 public:
  CSPVEStartReq();
  virtual ~CSPVEStartReq();
  
  CSPVEStartReq(const CSPVEStartReq& from);
  
  inline CSPVEStartReq& operator=(const CSPVEStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartReq& default_instance();
  
  void Swap(CSPVEStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartReq& from);
  void MergeFrom(const CSPVEStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVEStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVEStartRsp : public ::google::protobuf::Message {
 public:
  CSPVEStartRsp();
  virtual ~CSPVEStartRsp();
  
  CSPVEStartRsp(const CSPVEStartRsp& from);
  
  inline CSPVEStartRsp& operator=(const CSPVEStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVEStartRsp& default_instance();
  
  void Swap(CSPVEStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVEStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVEStartRsp& from);
  void MergeFrom(const CSPVEStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVEStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVEStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIReq : public ::google::protobuf::Message {
 public:
  CSPVAIReq();
  virtual ~CSPVAIReq();
  
  CSPVAIReq(const CSPVAIReq& from);
  
  inline CSPVAIReq& operator=(const CSPVAIReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIReq& default_instance();
  
  void Swap(CSPVAIReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIReq& from);
  void MergeFrom(const CSPVAIReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional .PB_INSTANCE_TYPE_T type = 4 [default = PB_INSTANCE_TYPE_PVAI];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline PB_INSTANCE_TYPE_T type() const;
  inline void set_type(PB_INSTANCE_TYPE_T value);
  
  // @@protoc_insertion_point(class_scope:CSPVAIReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoReq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoReq();
  virtual ~CSPVAIInfoReq();
  
  CSPVAIInfoReq(const CSPVAIInfoReq& from);
  
  inline CSPVAIInfoReq& operator=(const CSPVAIInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoReq& default_instance();
  
  void Swap(CSPVAIInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoReq& from);
  void MergeFrom(const CSPVAIInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAIInfo : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAIInfo();
  virtual ~CSPVAIInfoRsq_CSPVAIInfo();
  
  CSPVAIInfoRsq_CSPVAIInfo(const CSPVAIInfoRsq_CSPVAIInfo& from);
  
  inline CSPVAIInfoRsq_CSPVAIInfo& operator=(const CSPVAIInfoRsq_CSPVAIInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAIInfo& default_instance();
  
  void Swap(CSPVAIInfoRsq_CSPVAIInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq_CSPVAIInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAIInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required uint32 rank = 4;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // required bytes name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 lv = 7;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 7;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAIInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_lv();
  inline void clear_has_lv();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 rank_;
  ::std::string* name_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 lv_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAIInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq_CSPVAILog : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq_CSPVAILog();
  virtual ~CSPVAIInfoRsq_CSPVAILog();
  
  CSPVAIInfoRsq_CSPVAILog(const CSPVAIInfoRsq_CSPVAILog& from);
  
  inline CSPVAIInfoRsq_CSPVAILog& operator=(const CSPVAIInfoRsq_CSPVAILog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq_CSPVAILog& default_instance();
  
  void Swap(CSPVAIInfoRsq_CSPVAILog* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq_CSPVAILog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void MergeFrom(const CSPVAIInfoRsq_CSPVAILog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required bool direct = 2;
  inline bool has_direct() const;
  inline void clear_direct();
  static const int kDirectFieldNumber = 2;
  inline bool direct() const;
  inline void set_direct(bool value);
  
  // required bool win = 3;
  inline bool has_win() const;
  inline void clear_win();
  static const int kWinFieldNumber = 3;
  inline bool win() const;
  inline void set_win(bool value);
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq.CSPVAILog)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_direct();
  inline void clear_has_direct();
  inline void set_has_win();
  inline void clear_has_win();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  bool direct_;
  bool win_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq_CSPVAILog* default_instance_;
};
// -------------------------------------------------------------------

class CSPVAIInfoRsq : public ::google::protobuf::Message {
 public:
  CSPVAIInfoRsq();
  virtual ~CSPVAIInfoRsq();
  
  CSPVAIInfoRsq(const CSPVAIInfoRsq& from);
  
  inline CSPVAIInfoRsq& operator=(const CSPVAIInfoRsq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVAIInfoRsq& default_instance();
  
  void Swap(CSPVAIInfoRsq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVAIInfoRsq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVAIInfoRsq& from);
  void MergeFrom(const CSPVAIInfoRsq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSPVAIInfoRsq_CSPVAIInfo CSPVAIInfo;
  typedef CSPVAIInfoRsq_CSPVAILog CSPVAILog;
  
  // accessors -------------------------------------------------------
  
  // required uint32 rank = 1;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);
  
  // repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
  inline int infos_size() const;
  inline void clear_infos();
  static const int kInfosFieldNumber = 2;
  inline const ::CSPVAIInfoRsq_CSPVAIInfo& infos(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAIInfo* mutable_infos(int index);
  inline ::CSPVAIInfoRsq_CSPVAIInfo* add_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
      infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
      mutable_infos();
  
  // repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 3;
  inline const ::CSPVAIInfoRsq_CSPVAILog& logs(int index) const;
  inline ::CSPVAIInfoRsq_CSPVAILog* mutable_logs(int index);
  inline ::CSPVAIInfoRsq_CSPVAILog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
      mutable_logs();
  
  // @@protoc_insertion_point(class_scope:CSPVAIInfoRsq)
 private:
  inline void set_has_rank();
  inline void clear_has_rank();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo > infos_;
  ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog > logs_;
  ::google::protobuf::uint32 rank_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVAIInfoRsq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2Req : public ::google::protobuf::Message {
 public:
  CSPVP2Req();
  virtual ~CSPVP2Req();
  
  CSPVP2Req(const CSPVP2Req& from);
  
  inline CSPVP2Req& operator=(const CSPVP2Req& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2Req& default_instance();
  
  void Swap(CSPVP2Req* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2Req& from);
  void MergeFrom(const CSPVP2Req& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVP2Req)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2Req* default_instance_;
};
// -------------------------------------------------------------------

class CSPVP2CancelReq : public ::google::protobuf::Message {
 public:
  CSPVP2CancelReq();
  virtual ~CSPVP2CancelReq();
  
  CSPVP2CancelReq(const CSPVP2CancelReq& from);
  
  inline CSPVP2CancelReq& operator=(const CSPVP2CancelReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVP2CancelReq& default_instance();
  
  void Swap(CSPVP2CancelReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPVP2CancelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVP2CancelReq& from);
  void MergeFrom(const CSPVP2CancelReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPVP2CancelReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVP2CancelReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPVXRewardRsp : public ::google::protobuf::Message {
 public:
  CSPVXRewardRsp();
  virtual ~CSPVXRewardRsp();
  
  CSPVXRewardRsp(const CSPVXRewardRsp& from);
  
  inline CSPVXRewardRsp& operator=(const CSPVXRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPVXRewardRsp& default_instance();
  
  void Swap(CSPVXRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPVXRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPVXRewardRsp& from);
  void MergeFrom(const CSPVXRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool is_win = 1;
  inline bool has_is_win() const;
  inline void clear_is_win();
  static const int kIsWinFieldNumber = 1;
  inline bool is_win() const;
  inline void set_is_win(bool value);
  
  // required uint32 pvx_type = 2;
  inline bool has_pvx_type() const;
  inline void clear_pvx_type();
  static const int kPvxTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 pvx_type() const;
  inline void set_pvx_type(::google::protobuf::uint32 value);
  
  // required uint32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);
  
  // required uint32 reputation = 4;
  inline bool has_reputation() const;
  inline void clear_reputation();
  static const int kReputationFieldNumber = 4;
  inline ::google::protobuf::uint32 reputation() const;
  inline void set_reputation(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSPVXRewardRsp)
 private:
  inline void set_has_is_win();
  inline void clear_has_is_win();
  inline void set_has_pvx_type();
  inline void clear_has_pvx_type();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_reputation();
  inline void clear_has_reputation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool is_win_;
  ::google::protobuf::uint32 pvx_type_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 reputation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPVXRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemReq : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemReq();
  virtual ~CSEquipInlayGemReq();
  
  CSEquipInlayGemReq(const CSEquipInlayGemReq& from);
  
  inline CSEquipInlayGemReq& operator=(const CSEquipInlayGemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemReq& default_instance();
  
  void Swap(CSEquipInlayGemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipInlayGemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemReq& from);
  void MergeFrom(const CSEquipInlayGemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);
  
  // required uint32 gem_id = 2;
  inline bool has_gem_id() const;
  inline void clear_gem_id();
  static const int kGemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gem_id() const;
  inline void set_gem_id(::google::protobuf::uint32 value);
  
  // required uint32 hole_index = 3;
  inline bool has_hole_index() const;
  inline void clear_hole_index();
  static const int kHoleIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 hole_index() const;
  inline void set_hole_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipInlayGemReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_gem_id();
  inline void clear_has_gem_id();
  inline void set_has_hole_index();
  inline void clear_has_hole_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 gem_id_;
  ::google::protobuf::uint32 hole_index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipInlayGemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipInlayGemRsp : public ::google::protobuf::Message {
 public:
  CSEquipInlayGemRsp();
  virtual ~CSEquipInlayGemRsp();
  
  CSEquipInlayGemRsp(const CSEquipInlayGemRsp& from);
  
  inline CSEquipInlayGemRsp& operator=(const CSEquipInlayGemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipInlayGemRsp& default_instance();
  
  void Swap(CSEquipInlayGemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipInlayGemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipInlayGemRsp& from);
  void MergeFrom(const CSEquipInlayGemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipInlayGemRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipInlayGemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrReq : public ::google::protobuf::Message {
 public:
  CSResetGemAttrReq();
  virtual ~CSResetGemAttrReq();
  
  CSResetGemAttrReq(const CSResetGemAttrReq& from);
  
  inline CSResetGemAttrReq& operator=(const CSResetGemAttrReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrReq& default_instance();
  
  void Swap(CSResetGemAttrReq* other);
  
  // implements Message ----------------------------------------------
  
  CSResetGemAttrReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrReq& from);
  void MergeFrom(const CSResetGemAttrReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 equip_pos = 1;
  inline bool has_equip_pos() const;
  inline void clear_equip_pos();
  static const int kEquipPosFieldNumber = 1;
  inline ::google::protobuf::uint32 equip_pos() const;
  inline void set_equip_pos(::google::protobuf::uint32 value);
  
  // repeated uint32 holes_index = 2;
  inline int holes_index_size() const;
  inline void clear_holes_index();
  static const int kHolesIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 holes_index(int index) const;
  inline void set_holes_index(int index, ::google::protobuf::uint32 value);
  inline void add_holes_index(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      holes_index() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_holes_index();
  
  // optional uint32 cost_attr_key = 3;
  inline bool has_cost_attr_key() const;
  inline void clear_cost_attr_key();
  static const int kCostAttrKeyFieldNumber = 3;
  inline ::google::protobuf::uint32 cost_attr_key() const;
  inline void set_cost_attr_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSResetGemAttrReq)
 private:
  inline void set_has_equip_pos();
  inline void clear_has_equip_pos();
  inline void set_has_cost_attr_key();
  inline void clear_has_cost_attr_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > holes_index_;
  ::google::protobuf::uint32 equip_pos_;
  ::google::protobuf::uint32 cost_attr_key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSResetGemAttrReq* default_instance_;
};
// -------------------------------------------------------------------

class CSResetGemAttrRsp : public ::google::protobuf::Message {
 public:
  CSResetGemAttrRsp();
  virtual ~CSResetGemAttrRsp();
  
  CSResetGemAttrRsp(const CSResetGemAttrRsp& from);
  
  inline CSResetGemAttrRsp& operator=(const CSResetGemAttrRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSResetGemAttrRsp& default_instance();
  
  void Swap(CSResetGemAttrRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSResetGemAttrRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSResetGemAttrRsp& from);
  void MergeFrom(const CSResetGemAttrRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSResetGemAttrRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSResetGemAttrRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthReq : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthReq();
  virtual ~CSEquipmentStrengthReq();
  
  CSEquipmentStrengthReq(const CSEquipmentStrengthReq& from);
  
  inline CSEquipmentStrengthReq& operator=(const CSEquipmentStrengthReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthReq& default_instance();
  
  void Swap(CSEquipmentStrengthReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentStrengthReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthReq& from);
  void MergeFrom(const CSEquipmentStrengthReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthReq)
 private:
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentStrengthReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentStrengthRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentStrengthRsp();
  virtual ~CSEquipmentStrengthRsp();
  
  CSEquipmentStrengthRsp(const CSEquipmentStrengthRsp& from);
  
  inline CSEquipmentStrengthRsp& operator=(const CSEquipmentStrengthRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentStrengthRsp& default_instance();
  
  void Swap(CSEquipmentStrengthRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentStrengthRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentStrengthRsp& from);
  void MergeFrom(const CSEquipmentStrengthRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // required uint32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentStrengthRsp)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_pos();
  inline void clear_has_pos();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 pos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentStrengthRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeReq : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeReq();
  virtual ~CSEquipmentComposeReq();
  
  CSEquipmentComposeReq(const CSEquipmentComposeReq& from);
  
  inline CSEquipmentComposeReq& operator=(const CSEquipmentComposeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeReq& default_instance();
  
  void Swap(CSEquipmentComposeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentComposeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeReq& from);
  void MergeFrom(const CSEquipmentComposeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);
  
  // repeated uint32 from_item_pos = 2;
  inline int from_item_pos_size() const;
  inline void clear_from_item_pos();
  static const int kFromItemPosFieldNumber = 2;
  inline ::google::protobuf::uint32 from_item_pos(int index) const;
  inline void set_from_item_pos(int index, ::google::protobuf::uint32 value);
  inline void add_from_item_pos(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      from_item_pos() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_from_item_pos();
  
  // optional uint32 multi = 3 [default = 1];
  inline bool has_multi() const;
  inline void clear_multi();
  static const int kMultiFieldNumber = 3;
  inline ::google::protobuf::uint32 multi() const;
  inline void set_multi(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentComposeReq)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_multi();
  inline void clear_has_multi();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > from_item_pos_;
  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 multi_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentComposeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSEquipmentComposeRsp : public ::google::protobuf::Message {
 public:
  CSEquipmentComposeRsp();
  virtual ~CSEquipmentComposeRsp();
  
  CSEquipmentComposeRsp(const CSEquipmentComposeRsp& from);
  
  inline CSEquipmentComposeRsp& operator=(const CSEquipmentComposeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSEquipmentComposeRsp& default_instance();
  
  void Swap(CSEquipmentComposeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSEquipmentComposeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSEquipmentComposeRsp& from);
  void MergeFrom(const CSEquipmentComposeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 exchange_item_id = 1;
  inline bool has_exchange_item_id() const;
  inline void clear_exchange_item_id();
  static const int kExchangeItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 exchange_item_id() const;
  inline void set_exchange_item_id(::google::protobuf::uint32 value);
  
  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSEquipmentComposeRsp)
 private:
  inline void set_has_exchange_item_id();
  inline void clear_has_exchange_item_id();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 exchange_item_id_;
  ::google::protobuf::uint32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSEquipmentComposeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoReq : public ::google::protobuf::Message {
 public:
  CSTaskInfoReq();
  virtual ~CSTaskInfoReq();
  
  CSTaskInfoReq(const CSTaskInfoReq& from);
  
  inline CSTaskInfoReq& operator=(const CSTaskInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoReq& default_instance();
  
  void Swap(CSTaskInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoReq& from);
  void MergeFrom(const CSTaskInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTaskInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class TaskInfo : public ::google::protobuf::Message {
 public:
  TaskInfo();
  virtual ~TaskInfo();
  
  TaskInfo(const TaskInfo& from);
  
  inline TaskInfo& operator=(const TaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskInfo& default_instance();
  
  void Swap(TaskInfo* other);
  
  // implements Message ----------------------------------------------
  
  TaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskInfo& from);
  void MergeFrom(const TaskInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:TaskInfo)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static TaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSTaskInfoRsp();
  virtual ~CSTaskInfoRsp();
  
  CSTaskInfoRsp(const CSTaskInfoRsp& from);
  
  inline CSTaskInfoRsp& operator=(const CSTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskInfoRsp& default_instance();
  
  void Swap(CSTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskInfoRsp& from);
  void MergeFrom(const CSTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 acceptable_tasks = 1;
  inline int acceptable_tasks_size() const;
  inline void clear_acceptable_tasks();
  static const int kAcceptableTasksFieldNumber = 1;
  inline ::google::protobuf::uint32 acceptable_tasks(int index) const;
  inline void set_acceptable_tasks(int index, ::google::protobuf::uint32 value);
  inline void add_acceptable_tasks(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      acceptable_tasks() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_acceptable_tasks();
  
  // repeated .TaskInfo accept_tasks = 2;
  inline int accept_tasks_size() const;
  inline void clear_accept_tasks();
  static const int kAcceptTasksFieldNumber = 2;
  inline const ::TaskInfo& accept_tasks(int index) const;
  inline ::TaskInfo* mutable_accept_tasks(int index);
  inline ::TaskInfo* add_accept_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      accept_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_accept_tasks();
  
  // @@protoc_insertion_point(class_scope:CSTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > acceptable_tasks_;
  ::google::protobuf::RepeatedPtrField< ::TaskInfo > accept_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepReq : public ::google::protobuf::Message {
 public:
  CSTaskDoStepReq();
  virtual ~CSTaskDoStepReq();
  
  CSTaskDoStepReq(const CSTaskDoStepReq& from);
  
  inline CSTaskDoStepReq& operator=(const CSTaskDoStepReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepReq& default_instance();
  
  void Swap(CSTaskDoStepReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskDoStepReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepReq& from);
  void MergeFrom(const CSTaskDoStepReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskDoStepReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskDoStepReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskDoStepRsp : public ::google::protobuf::Message {
 public:
  CSTaskDoStepRsp();
  virtual ~CSTaskDoStepRsp();
  
  CSTaskDoStepRsp(const CSTaskDoStepRsp& from);
  
  inline CSTaskDoStepRsp& operator=(const CSTaskDoStepRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskDoStepRsp& default_instance();
  
  void Swap(CSTaskDoStepRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskDoStepRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskDoStepRsp& from);
  void MergeFrom(const CSTaskDoStepRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskDoStepRsp)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskDoStepRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogReq : public ::google::protobuf::Message {
 public:
  CSTaskLogReq();
  virtual ~CSTaskLogReq();
  
  CSTaskLogReq(const CSTaskLogReq& from);
  
  inline CSTaskLogReq& operator=(const CSTaskLogReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogReq& default_instance();
  
  void Swap(CSTaskLogReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskLogReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogReq& from);
  void MergeFrom(const CSTaskLogReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTaskLogReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskLogReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskLogRsp : public ::google::protobuf::Message {
 public:
  CSTaskLogRsp();
  virtual ~CSTaskLogRsp();
  
  CSTaskLogRsp(const CSTaskLogRsp& from);
  
  inline CSTaskLogRsp& operator=(const CSTaskLogRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskLogRsp& default_instance();
  
  void Swap(CSTaskLogRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskLogRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskLogRsp& from);
  void MergeFrom(const CSTaskLogRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .TaskInfo tasks = 1;
  inline int tasks_size() const;
  inline void clear_tasks();
  static const int kTasksFieldNumber = 1;
  inline const ::TaskInfo& tasks(int index) const;
  inline ::TaskInfo* mutable_tasks(int index);
  inline ::TaskInfo* add_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
      tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
      mutable_tasks();
  
  // @@protoc_insertion_point(class_scope:CSTaskLogRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::TaskInfo > tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskLogRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskStatusReq : public ::google::protobuf::Message {
 public:
  CSTaskStatusReq();
  virtual ~CSTaskStatusReq();
  
  CSTaskStatusReq(const CSTaskStatusReq& from);
  
  inline CSTaskStatusReq& operator=(const CSTaskStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskStatusReq& default_instance();
  
  void Swap(CSTaskStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskStatusReq& from);
  void MergeFrom(const CSTaskStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTaskStatusReq)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTaskStatusRsp : public ::google::protobuf::Message {
 public:
  CSTaskStatusRsp();
  virtual ~CSTaskStatusRsp();
  
  CSTaskStatusRsp(const CSTaskStatusRsp& from);
  
  inline CSTaskStatusRsp& operator=(const CSTaskStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTaskStatusRsp& default_instance();
  
  void Swap(CSTaskStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTaskStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTaskStatusRsp& from);
  void MergeFrom(const CSTaskStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // required .PB_TASK_STATUS_T status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline PB_TASK_STATUS_T status() const;
  inline void set_status(PB_TASK_STATUS_T value);
  
  // @@protoc_insertion_point(class_scope:CSTaskStatusRsp)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 task_id_;
  int status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTaskStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class DailyTaskInfo : public ::google::protobuf::Message {
 public:
  DailyTaskInfo();
  virtual ~DailyTaskInfo();
  
  DailyTaskInfo(const DailyTaskInfo& from);
  
  inline DailyTaskInfo& operator=(const DailyTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskInfo& default_instance();
  
  void Swap(DailyTaskInfo* other);
  
  // implements Message ----------------------------------------------
  
  DailyTaskInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyTaskInfo& from);
  void MergeFrom(const DailyTaskInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 daily_task_id = 1;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // required int32 daily_task_status = 2;
  inline bool has_daily_task_status() const;
  inline void clear_daily_task_status();
  static const int kDailyTaskStatusFieldNumber = 2;
  inline ::google::protobuf::int32 daily_task_status() const;
  inline void set_daily_task_status(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:DailyTaskInfo)
 private:
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  inline void set_has_daily_task_status();
  inline void clear_has_daily_task_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daily_task_id_;
  ::google::protobuf::int32 daily_task_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static DailyTaskInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSDailyTaskInfoReq : public ::google::protobuf::Message {
 public:
  CSDailyTaskInfoReq();
  virtual ~CSDailyTaskInfoReq();
  
  CSDailyTaskInfoReq(const CSDailyTaskInfoReq& from);
  
  inline CSDailyTaskInfoReq& operator=(const CSDailyTaskInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDailyTaskInfoReq& default_instance();
  
  void Swap(CSDailyTaskInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDailyTaskInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDailyTaskInfoReq& from);
  void MergeFrom(const CSDailyTaskInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSDailyTaskInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDailyTaskInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDailyTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSDailyTaskInfoRsp();
  virtual ~CSDailyTaskInfoRsp();
  
  CSDailyTaskInfoRsp(const CSDailyTaskInfoRsp& from);
  
  inline CSDailyTaskInfoRsp& operator=(const CSDailyTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDailyTaskInfoRsp& default_instance();
  
  void Swap(CSDailyTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDailyTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDailyTaskInfoRsp& from);
  void MergeFrom(const CSDailyTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DailyTaskInfo daily_tasks = 1;
  inline int daily_tasks_size() const;
  inline void clear_daily_tasks();
  static const int kDailyTasksFieldNumber = 1;
  inline const ::DailyTaskInfo& daily_tasks(int index) const;
  inline ::DailyTaskInfo* mutable_daily_tasks(int index);
  inline ::DailyTaskInfo* add_daily_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
      daily_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
      mutable_daily_tasks();
  
  // @@protoc_insertion_point(class_scope:CSDailyTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo > daily_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDailyTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAcceptDailyTaskReq : public ::google::protobuf::Message {
 public:
  CSAcceptDailyTaskReq();
  virtual ~CSAcceptDailyTaskReq();
  
  CSAcceptDailyTaskReq(const CSAcceptDailyTaskReq& from);
  
  inline CSAcceptDailyTaskReq& operator=(const CSAcceptDailyTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAcceptDailyTaskReq& default_instance();
  
  void Swap(CSAcceptDailyTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAcceptDailyTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAcceptDailyTaskReq& from);
  void MergeFrom(const CSAcceptDailyTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 daily_task_id = 1;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAcceptDailyTaskReq)
 private:
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAcceptDailyTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAcceptDailyTaskRsp : public ::google::protobuf::Message {
 public:
  CSAcceptDailyTaskRsp();
  virtual ~CSAcceptDailyTaskRsp();
  
  CSAcceptDailyTaskRsp(const CSAcceptDailyTaskRsp& from);
  
  inline CSAcceptDailyTaskRsp& operator=(const CSAcceptDailyTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAcceptDailyTaskRsp& default_instance();
  
  void Swap(CSAcceptDailyTaskRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAcceptDailyTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAcceptDailyTaskRsp& from);
  void MergeFrom(const CSAcceptDailyTaskRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAcceptDailyTaskRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAcceptDailyTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGiveUpDailyTaskReq : public ::google::protobuf::Message {
 public:
  CSGiveUpDailyTaskReq();
  virtual ~CSGiveUpDailyTaskReq();
  
  CSGiveUpDailyTaskReq(const CSGiveUpDailyTaskReq& from);
  
  inline CSGiveUpDailyTaskReq& operator=(const CSGiveUpDailyTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGiveUpDailyTaskReq& default_instance();
  
  void Swap(CSGiveUpDailyTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGiveUpDailyTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGiveUpDailyTaskReq& from);
  void MergeFrom(const CSGiveUpDailyTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGiveUpDailyTaskReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGiveUpDailyTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGiveUpDailyTaskRsp : public ::google::protobuf::Message {
 public:
  CSGiveUpDailyTaskRsp();
  virtual ~CSGiveUpDailyTaskRsp();
  
  CSGiveUpDailyTaskRsp(const CSGiveUpDailyTaskRsp& from);
  
  inline CSGiveUpDailyTaskRsp& operator=(const CSGiveUpDailyTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGiveUpDailyTaskRsp& default_instance();
  
  void Swap(CSGiveUpDailyTaskRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGiveUpDailyTaskRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGiveUpDailyTaskRsp& from);
  void MergeFrom(const CSGiveUpDailyTaskRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGiveUpDailyTaskRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGiveUpDailyTaskRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyTaskRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyTaskRewardReq();
  virtual ~CSGetDailyTaskRewardReq();
  
  CSGetDailyTaskRewardReq(const CSGetDailyTaskRewardReq& from);
  
  inline CSGetDailyTaskRewardReq& operator=(const CSGetDailyTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyTaskRewardReq& default_instance();
  
  void Swap(CSGetDailyTaskRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyTaskRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyTaskRewardReq& from);
  void MergeFrom(const CSGetDailyTaskRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetDailyTaskRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyTaskRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyTaskRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyTaskRewardRsp();
  virtual ~CSGetDailyTaskRewardRsp();
  
  CSGetDailyTaskRewardRsp(const CSGetDailyTaskRewardRsp& from);
  
  inline CSGetDailyTaskRewardRsp& operator=(const CSGetDailyTaskRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyTaskRewardRsp& default_instance();
  
  void Swap(CSGetDailyTaskRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyTaskRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyTaskRewardRsp& from);
  void MergeFrom(const CSGetDailyTaskRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // optional uint32 daily_task_id = 2;
  inline bool has_daily_task_id() const;
  inline void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 2;
  inline ::google::protobuf::uint32 daily_task_id() const;
  inline void set_daily_task_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyTaskRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_daily_task_id();
  inline void clear_has_daily_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 daily_task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyTaskRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyUpdateDailyTaskInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyUpdateDailyTaskInfoRsp();
  virtual ~CSNotifyUpdateDailyTaskInfoRsp();
  
  CSNotifyUpdateDailyTaskInfoRsp(const CSNotifyUpdateDailyTaskInfoRsp& from);
  
  inline CSNotifyUpdateDailyTaskInfoRsp& operator=(const CSNotifyUpdateDailyTaskInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyUpdateDailyTaskInfoRsp& default_instance();
  
  void Swap(CSNotifyUpdateDailyTaskInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyUpdateDailyTaskInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyUpdateDailyTaskInfoRsp& from);
  void MergeFrom(const CSNotifyUpdateDailyTaskInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DailyTaskInfo update_daily_tasks = 1;
  inline int update_daily_tasks_size() const;
  inline void clear_update_daily_tasks();
  static const int kUpdateDailyTasksFieldNumber = 1;
  inline const ::DailyTaskInfo& update_daily_tasks(int index) const;
  inline ::DailyTaskInfo* mutable_update_daily_tasks(int index);
  inline ::DailyTaskInfo* add_update_daily_tasks();
  inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
      update_daily_tasks() const;
  inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
      mutable_update_daily_tasks();
  
  // @@protoc_insertion_point(class_scope:CSNotifyUpdateDailyTaskInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo > update_daily_tasks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyUpdateDailyTaskInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyGoalRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyGoalRewardReq();
  virtual ~CSGetDailyGoalRewardReq();
  
  CSGetDailyGoalRewardReq(const CSGetDailyGoalRewardReq& from);
  
  inline CSGetDailyGoalRewardReq& operator=(const CSGetDailyGoalRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyGoalRewardReq& default_instance();
  
  void Swap(CSGetDailyGoalRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyGoalRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyGoalRewardReq& from);
  void MergeFrom(const CSGetDailyGoalRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetDailyGoalRewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyGoalRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyGoalRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyGoalRewardRsp();
  virtual ~CSGetDailyGoalRewardRsp();
  
  CSGetDailyGoalRewardRsp(const CSGetDailyGoalRewardRsp& from);
  
  inline CSGetDailyGoalRewardRsp& operator=(const CSGetDailyGoalRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyGoalRewardRsp& default_instance();
  
  void Swap(CSGetDailyGoalRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyGoalRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyGoalRewardRsp& from);
  void MergeFrom(const CSGetDailyGoalRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyGoalRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyGoalRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyRewardReq : public ::google::protobuf::Message {
 public:
  CSGetDailyRewardReq();
  virtual ~CSGetDailyRewardReq();
  
  CSGetDailyRewardReq(const CSGetDailyRewardReq& from);
  
  inline CSGetDailyRewardReq& operator=(const CSGetDailyRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyRewardReq& default_instance();
  
  void Swap(CSGetDailyRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyRewardReq& from);
  void MergeFrom(const CSGetDailyRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyRewardReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetDailyRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetDailyRewardRsp();
  virtual ~CSGetDailyRewardRsp();
  
  CSGetDailyRewardRsp(const CSGetDailyRewardRsp& from);
  
  inline CSGetDailyRewardRsp& operator=(const CSGetDailyRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetDailyRewardRsp& default_instance();
  
  void Swap(CSGetDailyRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetDailyRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetDailyRewardRsp& from);
  void MergeFrom(const CSGetDailyRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetDailyRewardRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_key();
  inline void clear_has_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetDailyRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSelectPVAIACCURewardReq : public ::google::protobuf::Message {
 public:
  CSSelectPVAIACCURewardReq();
  virtual ~CSSelectPVAIACCURewardReq();
  
  CSSelectPVAIACCURewardReq(const CSSelectPVAIACCURewardReq& from);
  
  inline CSSelectPVAIACCURewardReq& operator=(const CSSelectPVAIACCURewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSelectPVAIACCURewardReq& default_instance();
  
  void Swap(CSSelectPVAIACCURewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSelectPVAIACCURewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSelectPVAIACCURewardReq& from);
  void MergeFrom(const CSSelectPVAIACCURewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSSelectPVAIACCURewardReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSelectPVAIACCURewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSelectPVAIACCURewardRsp : public ::google::protobuf::Message {
 public:
  CSSelectPVAIACCURewardRsp();
  virtual ~CSSelectPVAIACCURewardRsp();
  
  CSSelectPVAIACCURewardRsp(const CSSelectPVAIACCURewardRsp& from);
  
  inline CSSelectPVAIACCURewardRsp& operator=(const CSSelectPVAIACCURewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSelectPVAIACCURewardRsp& default_instance();
  
  void Swap(CSSelectPVAIACCURewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSelectPVAIACCURewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSelectPVAIACCURewardRsp& from);
  void MergeFrom(const CSSelectPVAIACCURewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 accu_coin = 1;
  inline bool has_accu_coin() const;
  inline void clear_accu_coin();
  static const int kAccuCoinFieldNumber = 1;
  inline ::google::protobuf::uint32 accu_coin() const;
  inline void set_accu_coin(::google::protobuf::uint32 value);
  
  // required uint32 accu_reputation = 2;
  inline bool has_accu_reputation() const;
  inline void clear_accu_reputation();
  static const int kAccuReputationFieldNumber = 2;
  inline ::google::protobuf::uint32 accu_reputation() const;
  inline void set_accu_reputation(::google::protobuf::uint32 value);
  
  // required uint32 one_hour_coin = 3;
  inline bool has_one_hour_coin() const;
  inline void clear_one_hour_coin();
  static const int kOneHourCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 one_hour_coin() const;
  inline void set_one_hour_coin(::google::protobuf::uint32 value);
  
  // required uint32 one_hour_reputation = 4;
  inline bool has_one_hour_reputation() const;
  inline void clear_one_hour_reputation();
  static const int kOneHourReputationFieldNumber = 4;
  inline ::google::protobuf::uint32 one_hour_reputation() const;
  inline void set_one_hour_reputation(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSelectPVAIACCURewardRsp)
 private:
  inline void set_has_accu_coin();
  inline void clear_has_accu_coin();
  inline void set_has_accu_reputation();
  inline void clear_has_accu_reputation();
  inline void set_has_one_hour_coin();
  inline void clear_has_one_hour_coin();
  inline void set_has_one_hour_reputation();
  inline void clear_has_one_hour_reputation();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 accu_coin_;
  ::google::protobuf::uint32 accu_reputation_;
  ::google::protobuf::uint32 one_hour_coin_;
  ::google::protobuf::uint32 one_hour_reputation_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSelectPVAIACCURewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesSetReq : public ::google::protobuf::Message {
 public:
  CSAttributesSetReq();
  virtual ~CSAttributesSetReq();
  
  CSAttributesSetReq(const CSAttributesSetReq& from);
  
  inline CSAttributesSetReq& operator=(const CSAttributesSetReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesSetReq& default_instance();
  
  void Swap(CSAttributesSetReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesSetReq& from);
  void MergeFrom(const CSAttributesSetReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAttributesSetReq)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesReq : public ::google::protobuf::Message {
 public:
  CSAttributesReq();
  virtual ~CSAttributesReq();
  
  CSAttributesReq(const CSAttributesReq& from);
  
  inline CSAttributesReq& operator=(const CSAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesReq& default_instance();
  
  void Swap(CSAttributesReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesReq& from);
  void MergeFrom(const CSAttributesReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 keys = 1;
  inline int keys_size() const;
  inline void clear_keys();
  static const int kKeysFieldNumber = 1;
  inline ::google::protobuf::uint32 keys(int index) const;
  inline void set_keys(int index, ::google::protobuf::uint32 value);
  inline void add_keys(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      keys() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_keys();
  
  // @@protoc_insertion_point(class_scope:CSAttributesReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > keys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp_KeyValue : public ::google::protobuf::Message {
 public:
  CSAttributesRsp_KeyValue();
  virtual ~CSAttributesRsp_KeyValue();
  
  CSAttributesRsp_KeyValue(const CSAttributesRsp_KeyValue& from);
  
  inline CSAttributesRsp_KeyValue& operator=(const CSAttributesRsp_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp_KeyValue& default_instance();
  
  void Swap(CSAttributesRsp_KeyValue* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesRsp_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp_KeyValue& from);
  void MergeFrom(const CSAttributesRsp_KeyValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline ::google::protobuf::uint32 key() const;
  inline void set_key(::google::protobuf::uint32 value);
  
  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAttributesRsp.KeyValue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesRsp_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class CSAttributesRsp : public ::google::protobuf::Message {
 public:
  CSAttributesRsp();
  virtual ~CSAttributesRsp();
  
  CSAttributesRsp(const CSAttributesRsp& from);
  
  inline CSAttributesRsp& operator=(const CSAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAttributesRsp& default_instance();
  
  void Swap(CSAttributesRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAttributesRsp& from);
  void MergeFrom(const CSAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSAttributesRsp_KeyValue KeyValue;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSAttributesRsp.KeyValue values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSAttributesRsp_KeyValue& values(int index) const;
  inline ::CSAttributesRsp_KeyValue* mutable_values(int index);
  inline ::CSAttributesRsp_KeyValue* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:CSAttributesRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceSetReq : public ::google::protobuf::Message {
 public:
  CSOnceSetReq();
  virtual ~CSOnceSetReq();
  
  CSOnceSetReq(const CSOnceSetReq& from);
  
  inline CSOnceSetReq& operator=(const CSOnceSetReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceSetReq& default_instance();
  
  void Swap(CSOnceSetReq* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceSetReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceSetReq& from);
  void MergeFrom(const CSOnceSetReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSOnceSetReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceSetReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceReq : public ::google::protobuf::Message {
 public:
  CSOnceReq();
  virtual ~CSOnceReq();
  
  CSOnceReq(const CSOnceReq& from);
  
  inline CSOnceReq& operator=(const CSOnceReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceReq& default_instance();
  
  void Swap(CSOnceReq* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceReq& from);
  void MergeFrom(const CSOnceReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 indexs = 1;
  inline int indexs_size() const;
  inline void clear_indexs();
  static const int kIndexsFieldNumber = 1;
  inline ::google::protobuf::uint32 indexs(int index) const;
  inline void set_indexs(int index, ::google::protobuf::uint32 value);
  inline void add_indexs(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indexs() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indexs();
  
  // @@protoc_insertion_point(class_scope:CSOnceReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indexs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceReq* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp_Once : public ::google::protobuf::Message {
 public:
  CSOnceRsp_Once();
  virtual ~CSOnceRsp_Once();
  
  CSOnceRsp_Once(const CSOnceRsp_Once& from);
  
  inline CSOnceRsp_Once& operator=(const CSOnceRsp_Once& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp_Once& default_instance();
  
  void Swap(CSOnceRsp_Once* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceRsp_Once* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp_Once& from);
  void MergeFrom(const CSOnceRsp_Once& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required bool is_set = 2;
  inline bool has_is_set() const;
  inline void clear_is_set();
  static const int kIsSetFieldNumber = 2;
  inline bool is_set() const;
  inline void set_is_set(bool value);
  
  // @@protoc_insertion_point(class_scope:CSOnceRsp.Once)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_is_set();
  inline void clear_has_is_set();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  bool is_set_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceRsp_Once* default_instance_;
};
// -------------------------------------------------------------------

class CSOnceRsp : public ::google::protobuf::Message {
 public:
  CSOnceRsp();
  virtual ~CSOnceRsp();
  
  CSOnceRsp(const CSOnceRsp& from);
  
  inline CSOnceRsp& operator=(const CSOnceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSOnceRsp& default_instance();
  
  void Swap(CSOnceRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSOnceRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSOnceRsp& from);
  void MergeFrom(const CSOnceRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSOnceRsp_Once Once;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSOnceRsp.Once values = 1;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 1;
  inline const ::CSOnceRsp_Once& values(int index) const;
  inline ::CSOnceRsp_Once* mutable_values(int index);
  inline ::CSOnceRsp_Once* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
      mutable_values();
  
  // @@protoc_insertion_point(class_scope:CSOnceRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once > values_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSOnceRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoReq : public ::google::protobuf::Message {
 public:
  CSTrainInfoReq();
  virtual ~CSTrainInfoReq();
  
  CSTrainInfoReq(const CSTrainInfoReq& from);
  
  inline CSTrainInfoReq& operator=(const CSTrainInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoReq& default_instance();
  
  void Swap(CSTrainInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoReq& from);
  void MergeFrom(const CSTrainInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainInfoRsp : public ::google::protobuf::Message {
 public:
  CSTrainInfoRsp();
  virtual ~CSTrainInfoRsp();
  
  CSTrainInfoRsp(const CSTrainInfoRsp& from);
  
  inline CSTrainInfoRsp& operator=(const CSTrainInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainInfoRsp& default_instance();
  
  void Swap(CSTrainInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainInfoRsp& from);
  void MergeFrom(const CSTrainInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 potential = 1;
  inline bool has_potential() const;
  inline void clear_potential();
  static const int kPotentialFieldNumber = 1;
  inline ::google::protobuf::uint32 potential() const;
  inline void set_potential(::google::protobuf::uint32 value);
  
  // required uint32 courage = 2;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 2;
  inline ::google::protobuf::uint32 courage() const;
  inline void set_courage(::google::protobuf::uint32 value);
  
  // required uint32 charm = 3;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 3;
  inline ::google::protobuf::uint32 charm() const;
  inline void set_charm(::google::protobuf::uint32 value);
  
  // required uint32 trick = 4;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 4;
  inline ::google::protobuf::uint32 trick() const;
  inline void set_trick(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTrainInfoRsp)
 private:
  inline void set_has_potential();
  inline void clear_has_potential();
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 potential_;
  ::google::protobuf::uint32 courage_;
  ::google::protobuf::uint32 charm_;
  ::google::protobuf::uint32 trick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainReq : public ::google::protobuf::Message {
 public:
  CSTrainReq();
  virtual ~CSTrainReq();
  
  CSTrainReq(const CSTrainReq& from);
  
  inline CSTrainReq& operator=(const CSTrainReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainReq& default_instance();
  
  void Swap(CSTrainReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainReq& from);
  void MergeFrom(const CSTrainReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSTrainReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainRsp : public ::google::protobuf::Message {
 public:
  CSTrainRsp();
  virtual ~CSTrainRsp();
  
  CSTrainRsp(const CSTrainRsp& from);
  
  inline CSTrainRsp& operator=(const CSTrainRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainRsp& default_instance();
  
  void Swap(CSTrainRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainRsp& from);
  void MergeFrom(const CSTrainRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 courage = 1;
  inline bool has_courage() const;
  inline void clear_courage();
  static const int kCourageFieldNumber = 1;
  inline ::google::protobuf::int32 courage() const;
  inline void set_courage(::google::protobuf::int32 value);
  
  // required int32 charm = 2;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 2;
  inline ::google::protobuf::int32 charm() const;
  inline void set_charm(::google::protobuf::int32 value);
  
  // required int32 trick = 3;
  inline bool has_trick() const;
  inline void clear_trick();
  static const int kTrickFieldNumber = 3;
  inline ::google::protobuf::int32 trick() const;
  inline void set_trick(::google::protobuf::int32 value);
  
  // required bool succ = 4;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 4;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSTrainRsp)
 private:
  inline void set_has_courage();
  inline void clear_has_courage();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_trick();
  inline void clear_has_trick();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 courage_;
  ::google::protobuf::int32 charm_;
  ::google::protobuf::int32 trick_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineReq : public ::google::protobuf::Message {
 public:
  CSTrainDetermineReq();
  virtual ~CSTrainDetermineReq();
  
  CSTrainDetermineReq(const CSTrainDetermineReq& from);
  
  inline CSTrainDetermineReq& operator=(const CSTrainDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineReq& default_instance();
  
  void Swap(CSTrainDetermineReq* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineReq& from);
  void MergeFrom(const CSTrainDetermineReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainDetermineReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSTrainDetermineRsp : public ::google::protobuf::Message {
 public:
  CSTrainDetermineRsp();
  virtual ~CSTrainDetermineRsp();
  
  CSTrainDetermineRsp(const CSTrainDetermineRsp& from);
  
  inline CSTrainDetermineRsp& operator=(const CSTrainDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSTrainDetermineRsp& default_instance();
  
  void Swap(CSTrainDetermineRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSTrainDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSTrainDetermineRsp& from);
  void MergeFrom(const CSTrainDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSTrainDetermineRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSTrainDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreReq : public ::google::protobuf::Message {
 public:
  CSExploreReq();
  virtual ~CSExploreReq();
  
  CSExploreReq(const CSExploreReq& from);
  
  inline CSExploreReq& operator=(const CSExploreReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreReq& default_instance();
  
  void Swap(CSExploreReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreReq& from);
  void MergeFrom(const CSExploreReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreRsp : public ::google::protobuf::Message {
 public:
  CSExploreRsp();
  virtual ~CSExploreRsp();
  
  CSExploreRsp(const CSExploreRsp& from);
  
  inline CSExploreRsp& operator=(const CSExploreRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreRsp& default_instance();
  
  void Swap(CSExploreRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreRsp& from);
  void MergeFrom(const CSExploreRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // required uint32 map_id = 2;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreRsp)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineReq : public ::google::protobuf::Message {
 public:
  CSExploreDetermineReq();
  virtual ~CSExploreDetermineReq();
  
  CSExploreDetermineReq(const CSExploreDetermineReq& from);
  
  inline CSExploreDetermineReq& operator=(const CSExploreDetermineReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineReq& default_instance();
  
  void Swap(CSExploreDetermineReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreDetermineReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineReq& from);
  void MergeFrom(const CSExploreDetermineReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 option = 1;
  inline bool has_option() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline ::google::protobuf::uint32 option() const;
  inline void set_option(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSExploreDetermineReq)
 private:
  inline void set_has_option();
  inline void clear_has_option();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 option_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreDetermineReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExploreDetermineRsp : public ::google::protobuf::Message {
 public:
  CSExploreDetermineRsp();
  virtual ~CSExploreDetermineRsp();
  
  CSExploreDetermineRsp(const CSExploreDetermineRsp& from);
  
  inline CSExploreDetermineRsp& operator=(const CSExploreDetermineRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExploreDetermineRsp& default_instance();
  
  void Swap(CSExploreDetermineRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExploreDetermineRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExploreDetermineRsp& from);
  void MergeFrom(const CSExploreDetermineRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // optional .CSReward rewards = 2;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSExploreDetermineRsp)
 private:
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::CSReward* rewards_;
  ::google::protobuf::uint32 map_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExploreDetermineRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerReq : public ::google::protobuf::Message {
 public:
  CSQueryDowerReq();
  virtual ~CSQueryDowerReq();
  
  CSQueryDowerReq(const CSQueryDowerReq& from);
  
  inline CSQueryDowerReq& operator=(const CSQueryDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerReq& default_instance();
  
  void Swap(CSQueryDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerReq& from);
  void MergeFrom(const CSQueryDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp_Dower : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp_Dower();
  virtual ~CSQueryDowerRsp_Dower();
  
  CSQueryDowerRsp_Dower(const CSQueryDowerRsp_Dower& from);
  
  inline CSQueryDowerRsp_Dower& operator=(const CSQueryDowerRsp_Dower& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp_Dower& default_instance();
  
  void Swap(CSQueryDowerRsp_Dower* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerRsp_Dower* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp_Dower& from);
  void MergeFrom(const CSQueryDowerRsp_Dower& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 max_level = 3;
  inline bool has_max_level() const;
  inline void clear_max_level();
  static const int kMaxLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 max_level() const;
  inline void set_max_level(::google::protobuf::uint32 value);
  
  // required uint32 plus = 4;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 4;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // required uint32 each_plus = 5;
  inline bool has_each_plus() const;
  inline void clear_each_plus();
  static const int kEachPlusFieldNumber = 5;
  inline ::google::protobuf::uint32 each_plus() const;
  inline void set_each_plus(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp.Dower)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_max_level();
  inline void clear_has_max_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_each_plus();
  inline void clear_has_each_plus();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 max_level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 each_plus_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerRsp_Dower* default_instance_;
};
// -------------------------------------------------------------------

class CSQueryDowerRsp : public ::google::protobuf::Message {
 public:
  CSQueryDowerRsp();
  virtual ~CSQueryDowerRsp();
  
  CSQueryDowerRsp(const CSQueryDowerRsp& from);
  
  inline CSQueryDowerRsp& operator=(const CSQueryDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSQueryDowerRsp& default_instance();
  
  void Swap(CSQueryDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSQueryDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSQueryDowerRsp& from);
  void MergeFrom(const CSQueryDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSQueryDowerRsp_Dower Dower;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSQueryDowerRsp.Dower dower = 1;
  inline int dower_size() const;
  inline void clear_dower();
  static const int kDowerFieldNumber = 1;
  inline const ::CSQueryDowerRsp_Dower& dower(int index) const;
  inline ::CSQueryDowerRsp_Dower* mutable_dower(int index);
  inline ::CSQueryDowerRsp_Dower* add_dower();
  inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
      dower() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
      mutable_dower();
  
  // optional uint32 timeout = 2;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 2;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSQueryDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower > dower_;
  ::google::protobuf::uint32 timeout_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSQueryDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoReq : public ::google::protobuf::Message {
 public:
  CSDowerInfoReq();
  virtual ~CSDowerInfoReq();
  
  CSDowerInfoReq(const CSDowerInfoReq& from);
  
  inline CSDowerInfoReq& operator=(const CSDowerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoReq& default_instance();
  
  void Swap(CSDowerInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoReq& from);
  void MergeFrom(const CSDowerInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerInfoReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerInfoRsp : public ::google::protobuf::Message {
 public:
  CSDowerInfoRsp();
  virtual ~CSDowerInfoRsp();
  
  CSDowerInfoRsp(const CSDowerInfoRsp& from);
  
  inline CSDowerInfoRsp& operator=(const CSDowerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerInfoRsp& default_instance();
  
  void Swap(CSDowerInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerInfoRsp& from);
  void MergeFrom(const CSDowerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 next_exploit = 3;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 3;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);
  
  // required uint32 next_time = 4;
  inline bool has_next_time() const;
  inline void clear_next_time();
  static const int kNextTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 next_time() const;
  inline void set_next_time(::google::protobuf::uint32 value);
  
  // required uint32 diff_physical_attack = 5;
  inline bool has_diff_physical_attack() const;
  inline void clear_diff_physical_attack();
  static const int kDiffPhysicalAttackFieldNumber = 5;
  inline ::google::protobuf::uint32 diff_physical_attack() const;
  inline void set_diff_physical_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_magic_attack = 6;
  inline bool has_diff_magic_attack() const;
  inline void clear_diff_magic_attack();
  static const int kDiffMagicAttackFieldNumber = 6;
  inline ::google::protobuf::uint32 diff_magic_attack() const;
  inline void set_diff_magic_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_skill_attack = 7;
  inline bool has_diff_skill_attack() const;
  inline void clear_diff_skill_attack();
  static const int kDiffSkillAttackFieldNumber = 7;
  inline ::google::protobuf::uint32 diff_skill_attack() const;
  inline void set_diff_skill_attack(::google::protobuf::uint32 value);
  
  // required uint32 diff_physical_defence = 8;
  inline bool has_diff_physical_defence() const;
  inline void clear_diff_physical_defence();
  static const int kDiffPhysicalDefenceFieldNumber = 8;
  inline ::google::protobuf::uint32 diff_physical_defence() const;
  inline void set_diff_physical_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_magic_defence = 9;
  inline bool has_diff_magic_defence() const;
  inline void clear_diff_magic_defence();
  static const int kDiffMagicDefenceFieldNumber = 9;
  inline ::google::protobuf::uint32 diff_magic_defence() const;
  inline void set_diff_magic_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_skill_defence = 10;
  inline bool has_diff_skill_defence() const;
  inline void clear_diff_skill_defence();
  static const int kDiffSkillDefenceFieldNumber = 10;
  inline ::google::protobuf::uint32 diff_skill_defence() const;
  inline void set_diff_skill_defence(::google::protobuf::uint32 value);
  
  // required uint32 diff_hp = 11;
  inline bool has_diff_hp() const;
  inline void clear_diff_hp();
  static const int kDiffHpFieldNumber = 11;
  inline ::google::protobuf::uint32 diff_hp() const;
  inline void set_diff_hp(::google::protobuf::uint32 value);
  
  // required uint32 plus = 12;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 12;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerInfoRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();
  inline void set_has_next_time();
  inline void clear_has_next_time();
  inline void set_has_diff_physical_attack();
  inline void clear_has_diff_physical_attack();
  inline void set_has_diff_magic_attack();
  inline void clear_has_diff_magic_attack();
  inline void set_has_diff_skill_attack();
  inline void clear_has_diff_skill_attack();
  inline void set_has_diff_physical_defence();
  inline void clear_has_diff_physical_defence();
  inline void set_has_diff_magic_defence();
  inline void clear_has_diff_magic_defence();
  inline void set_has_diff_skill_defence();
  inline void clear_has_diff_skill_defence();
  inline void set_has_diff_hp();
  inline void clear_has_diff_hp();
  inline void set_has_plus();
  inline void clear_has_plus();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 next_exploit_;
  ::google::protobuf::uint32 next_time_;
  ::google::protobuf::uint32 diff_physical_attack_;
  ::google::protobuf::uint32 diff_magic_attack_;
  ::google::protobuf::uint32 diff_skill_attack_;
  ::google::protobuf::uint32 diff_physical_defence_;
  ::google::protobuf::uint32 diff_magic_defence_;
  ::google::protobuf::uint32 diff_skill_defence_;
  ::google::protobuf::uint32 diff_hp_;
  ::google::protobuf::uint32 plus_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerReq : public ::google::protobuf::Message {
 public:
  CSDowerReq();
  virtual ~CSDowerReq();
  
  CSDowerReq(const CSDowerReq& from);
  
  inline CSDowerReq& operator=(const CSDowerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerReq& default_instance();
  
  void Swap(CSDowerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerReq& from);
  void MergeFrom(const CSDowerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDowerRsp : public ::google::protobuf::Message {
 public:
  CSDowerRsp();
  virtual ~CSDowerRsp();
  
  CSDowerRsp(const CSDowerRsp& from);
  
  inline CSDowerRsp& operator=(const CSDowerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDowerRsp& default_instance();
  
  void Swap(CSDowerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDowerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDowerRsp& from);
  void MergeFrom(const CSDowerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 timeout = 1;
  inline bool has_timeout() const;
  inline void clear_timeout();
  static const int kTimeoutFieldNumber = 1;
  inline ::google::protobuf::uint32 timeout() const;
  inline void set_timeout(::google::protobuf::uint32 value);
  
  // required uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required uint32 plus = 3;
  inline bool has_plus() const;
  inline void clear_plus();
  static const int kPlusFieldNumber = 3;
  inline ::google::protobuf::uint32 plus() const;
  inline void set_plus(::google::protobuf::uint32 value);
  
  // required uint32 next_exploit = 4;
  inline bool has_next_exploit() const;
  inline void clear_next_exploit();
  static const int kNextExploitFieldNumber = 4;
  inline ::google::protobuf::uint32 next_exploit() const;
  inline void set_next_exploit(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDowerRsp)
 private:
  inline void set_has_timeout();
  inline void clear_has_timeout();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_plus();
  inline void clear_has_plus();
  inline void set_has_next_exploit();
  inline void clear_has_next_exploit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 timeout_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 plus_;
  ::google::protobuf::uint32 next_exploit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDowerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterReq : public ::google::protobuf::Message {
 public:
  CSABMonsterReq();
  virtual ~CSABMonsterReq();
  
  CSABMonsterReq(const CSABMonsterReq& from);
  
  inline CSABMonsterReq& operator=(const CSABMonsterReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterReq& default_instance();
  
  void Swap(CSABMonsterReq* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterReq& from);
  void MergeFrom(const CSABMonsterReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 instance_type = 2 [default = 1];
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSABMonsterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterRsp_MonInfo : public ::google::protobuf::Message {
 public:
  CSABMonsterRsp_MonInfo();
  virtual ~CSABMonsterRsp_MonInfo();
  
  CSABMonsterRsp_MonInfo(const CSABMonsterRsp_MonInfo& from);
  
  inline CSABMonsterRsp_MonInfo& operator=(const CSABMonsterRsp_MonInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterRsp_MonInfo& default_instance();
  
  void Swap(CSABMonsterRsp_MonInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterRsp_MonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterRsp_MonInfo& from);
  void MergeFrom(const CSABMonsterRsp_MonInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mon_id = 1;
  inline bool has_mon_id() const;
  inline void clear_mon_id();
  static const int kMonIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mon_id() const;
  inline void set_mon_id(::google::protobuf::uint32 value);
  
  // required uint32 mon_num = 2;
  inline bool has_mon_num() const;
  inline void clear_mon_num();
  static const int kMonNumFieldNumber = 2;
  inline ::google::protobuf::uint32 mon_num() const;
  inline void set_mon_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSABMonsterRsp.MonInfo)
 private:
  inline void set_has_mon_id();
  inline void clear_has_mon_id();
  inline void set_has_mon_num();
  inline void clear_has_mon_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mon_id_;
  ::google::protobuf::uint32 mon_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterRsp_MonInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSABMonsterRsp : public ::google::protobuf::Message {
 public:
  CSABMonsterRsp();
  virtual ~CSABMonsterRsp();
  
  CSABMonsterRsp(const CSABMonsterRsp& from);
  
  inline CSABMonsterRsp& operator=(const CSABMonsterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABMonsterRsp& default_instance();
  
  void Swap(CSABMonsterRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSABMonsterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABMonsterRsp& from);
  void MergeFrom(const CSABMonsterRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSABMonsterRsp_MonInfo MonInfo;
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 instance_type = 2;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // repeated .CSABMonsterRsp.MonInfo mon_infos = 3;
  inline int mon_infos_size() const;
  inline void clear_mon_infos();
  static const int kMonInfosFieldNumber = 3;
  inline const ::CSABMonsterRsp_MonInfo& mon_infos(int index) const;
  inline ::CSABMonsterRsp_MonInfo* mutable_mon_infos(int index);
  inline ::CSABMonsterRsp_MonInfo* add_mon_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >&
      mon_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >*
      mutable_mon_infos();
  
  // @@protoc_insertion_point(class_scope:CSABMonsterRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo > mon_infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABMonsterRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleReq : public ::google::protobuf::Message {
 public:
  CSAutoBattleReq();
  virtual ~CSAutoBattleReq();
  
  CSAutoBattleReq(const CSAutoBattleReq& from);
  
  inline CSAutoBattleReq& operator=(const CSAutoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleReq& default_instance();
  
  void Swap(CSAutoBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleReq& from);
  void MergeFrom(const CSAutoBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAutoBattleRsp : public ::google::protobuf::Message {
 public:
  CSAutoBattleRsp();
  virtual ~CSAutoBattleRsp();
  
  CSAutoBattleRsp(const CSAutoBattleRsp& from);
  
  inline CSAutoBattleRsp& operator=(const CSAutoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAutoBattleRsp& default_instance();
  
  void Swap(CSAutoBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAutoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAutoBattleRsp& from);
  void MergeFrom(const CSAutoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::uint32 ret() const;
  inline void set_ret(::google::protobuf::uint32 value);
  
  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 instance_type = 3;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAutoBattleRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 ret_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAutoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSABRewardRsp : public ::google::protobuf::Message {
 public:
  CSABRewardRsp();
  virtual ~CSABRewardRsp();
  
  CSABRewardRsp(const CSABRewardRsp& from);
  
  inline CSABRewardRsp& operator=(const CSABRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSABRewardRsp& default_instance();
  
  void Swap(CSABRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSABRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSABRewardRsp& from);
  void MergeFrom(const CSABRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 instance_type = 2;
  inline bool has_instance_type() const;
  inline void clear_instance_type();
  static const int kInstanceTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 instance_type() const;
  inline void set_instance_type(::google::protobuf::uint32 value);
  
  // required .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSABRewardRsp)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_instance_type();
  inline void clear_has_instance_type();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 instance_type_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSABRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelAutoBattleReq : public ::google::protobuf::Message {
 public:
  CSCancelAutoBattleReq();
  virtual ~CSCancelAutoBattleReq();
  
  CSCancelAutoBattleReq(const CSCancelAutoBattleReq& from);
  
  inline CSCancelAutoBattleReq& operator=(const CSCancelAutoBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelAutoBattleReq& default_instance();
  
  void Swap(CSCancelAutoBattleReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCancelAutoBattleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelAutoBattleReq& from);
  void MergeFrom(const CSCancelAutoBattleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCancelAutoBattleReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCancelAutoBattleReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCancelAutoBattleRsp : public ::google::protobuf::Message {
 public:
  CSCancelAutoBattleRsp();
  virtual ~CSCancelAutoBattleRsp();
  
  CSCancelAutoBattleRsp(const CSCancelAutoBattleRsp& from);
  
  inline CSCancelAutoBattleRsp& operator=(const CSCancelAutoBattleRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCancelAutoBattleRsp& default_instance();
  
  void Swap(CSCancelAutoBattleRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCancelAutoBattleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCancelAutoBattleRsp& from);
  void MergeFrom(const CSCancelAutoBattleRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCancelAutoBattleRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCancelAutoBattleRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterReq : public ::google::protobuf::Message {
 public:
  CSExchangeParameterReq();
  virtual ~CSExchangeParameterReq();
  
  CSExchangeParameterReq(const CSExchangeParameterReq& from);
  
  inline CSExchangeParameterReq& operator=(const CSExchangeParameterReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterReq& default_instance();
  
  void Swap(CSExchangeParameterReq* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterReq& from);
  void MergeFrom(const CSExchangeParameterReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterReq)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterReq* default_instance_;
};
// -------------------------------------------------------------------

class CSExchangeParameterRsp : public ::google::protobuf::Message {
 public:
  CSExchangeParameterRsp();
  virtual ~CSExchangeParameterRsp();
  
  CSExchangeParameterRsp(const CSExchangeParameterRsp& from);
  
  inline CSExchangeParameterRsp& operator=(const CSExchangeParameterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSExchangeParameterRsp& default_instance();
  
  void Swap(CSExchangeParameterRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSExchangeParameterRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSExchangeParameterRsp& from);
  void MergeFrom(const CSExchangeParameterRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 3;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSExchangeParameterRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSExchangeParameterRsp* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo_Item : public ::google::protobuf::Message {
 public:
  ShopItemInfo_Item();
  virtual ~ShopItemInfo_Item();
  
  ShopItemInfo_Item(const ShopItemInfo_Item& from);
  
  inline ShopItemInfo_Item& operator=(const ShopItemInfo_Item& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo_Item& default_instance();
  
  void Swap(ShopItemInfo_Item* other);
  
  // implements Message ----------------------------------------------
  
  ShopItemInfo_Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo_Item& from);
  void MergeFrom(const ShopItemInfo_Item& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:ShopItemInfo.Item)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShopItemInfo_Item* default_instance_;
};
// -------------------------------------------------------------------

class ShopItemInfo : public ::google::protobuf::Message {
 public:
  ShopItemInfo();
  virtual ~ShopItemInfo();
  
  ShopItemInfo(const ShopItemInfo& from);
  
  inline ShopItemInfo& operator=(const ShopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShopItemInfo& default_instance();
  
  void Swap(ShopItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  ShopItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShopItemInfo& from);
  void MergeFrom(const ShopItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ShopItemInfo_Item Item;
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required .ShopItemInfo.Item from_item = 2;
  inline bool has_from_item() const;
  inline void clear_from_item();
  static const int kFromItemFieldNumber = 2;
  inline const ::ShopItemInfo_Item& from_item() const;
  inline ::ShopItemInfo_Item* mutable_from_item();
  inline ::ShopItemInfo_Item* release_from_item();
  
  // required .ShopItemInfo.Item to_item = 3;
  inline bool has_to_item() const;
  inline void clear_to_item();
  static const int kToItemFieldNumber = 3;
  inline const ::ShopItemInfo_Item& to_item() const;
  inline ::ShopItemInfo_Item* mutable_to_item();
  inline ::ShopItemInfo_Item* release_to_item();
  
  // required bool is_buy = 4;
  inline bool has_is_buy() const;
  inline void clear_is_buy();
  static const int kIsBuyFieldNumber = 4;
  inline bool is_buy() const;
  inline void set_is_buy(bool value);
  
  // @@protoc_insertion_point(class_scope:ShopItemInfo)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_from_item();
  inline void clear_has_from_item();
  inline void set_has_to_item();
  inline void clear_has_to_item();
  inline void set_has_is_buy();
  inline void clear_has_is_buy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::ShopItemInfo_Item* from_item_;
  ::google::protobuf::uint32 index_;
  bool is_buy_;
  ::ShopItemInfo_Item* to_item_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static ShopItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsReq : public ::google::protobuf::Message {
 public:
  CSGetShopItemsReq();
  virtual ~CSGetShopItemsReq();
  
  CSGetShopItemsReq(const CSGetShopItemsReq& from);
  
  inline CSGetShopItemsReq& operator=(const CSGetShopItemsReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsReq& default_instance();
  
  void Swap(CSGetShopItemsReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShopItemsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsReq& from);
  void MergeFrom(const CSGetShopItemsReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetShopItemsReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShopItemsReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetShopItemsRsp : public ::google::protobuf::Message {
 public:
  CSGetShopItemsRsp();
  virtual ~CSGetShopItemsRsp();
  
  CSGetShopItemsRsp(const CSGetShopItemsRsp& from);
  
  inline CSGetShopItemsRsp& operator=(const CSGetShopItemsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetShopItemsRsp& default_instance();
  
  void Swap(CSGetShopItemsRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetShopItemsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetShopItemsRsp& from);
  void MergeFrom(const CSGetShopItemsRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ShopItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::ShopItemInfo& items(int index) const;
  inline ::ShopItemInfo* mutable_items(int index);
  inline ::ShopItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSGetShopItemsRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ShopItemInfo > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetShopItemsRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemReq : public ::google::protobuf::Message {
 public:
  CSBuyShopItemReq();
  virtual ~CSBuyShopItemReq();
  
  CSBuyShopItemReq(const CSBuyShopItemReq& from);
  
  inline CSBuyShopItemReq& operator=(const CSBuyShopItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemReq& default_instance();
  
  void Swap(CSBuyShopItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSBuyShopItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemReq& from);
  void MergeFrom(const CSBuyShopItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSBuyShopItemReq)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBuyShopItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSBuyShopItemRsp : public ::google::protobuf::Message {
 public:
  CSBuyShopItemRsp();
  virtual ~CSBuyShopItemRsp();
  
  CSBuyShopItemRsp(const CSBuyShopItemRsp& from);
  
  inline CSBuyShopItemRsp& operator=(const CSBuyShopItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSBuyShopItemRsp& default_instance();
  
  void Swap(CSBuyShopItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSBuyShopItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSBuyShopItemRsp& from);
  void MergeFrom(const CSBuyShopItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 index() const;
  inline void set_index(::google::protobuf::uint32 value);
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSBuyShopItemRsp)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 index_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSBuyShopItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemReq : public ::google::protobuf::Message {
 public:
  CSGetUserItemReq();
  virtual ~CSGetUserItemReq();
  
  CSGetUserItemReq(const CSGetUserItemReq& from);
  
  inline CSGetUserItemReq& operator=(const CSGetUserItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemReq& default_instance();
  
  void Swap(CSGetUserItemReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemReq& from);
  void MergeFrom(const CSGetUserItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserItemReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserItemReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserItemRsp : public ::google::protobuf::Message {
 public:
  CSGetUserItemRsp();
  virtual ~CSGetUserItemRsp();
  
  CSGetUserItemRsp(const CSGetUserItemRsp& from);
  
  inline CSGetUserItemRsp& operator=(const CSGetUserItemRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserItemRsp& default_instance();
  
  void Swap(CSGetUserItemRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserItemRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserItemRsp& from);
  void MergeFrom(const CSGetUserItemRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // repeated .CSItemInfo items = 4;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 4;
  inline const ::CSItemInfo& items(int index) const;
  inline ::CSItemInfo* mutable_items(int index);
  inline ::CSItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:CSGetUserItemRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::RepeatedPtrField< ::CSItemInfo > items_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserItemRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesReq : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesReq();
  virtual ~CSGetUserAttributesReq();
  
  CSGetUserAttributesReq(const CSGetUserAttributesReq& from);
  
  inline CSGetUserAttributesReq& operator=(const CSGetUserAttributesReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesReq& default_instance();
  
  void Swap(CSGetUserAttributesReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserAttributesReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesReq& from);
  void MergeFrom(const CSGetUserAttributesReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetUserAttributesReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserAttributesReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetUserAttributesRsp : public ::google::protobuf::Message {
 public:
  CSGetUserAttributesRsp();
  virtual ~CSGetUserAttributesRsp();
  
  CSGetUserAttributesRsp(const CSGetUserAttributesRsp& from);
  
  inline CSGetUserAttributesRsp& operator=(const CSGetUserAttributesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetUserAttributesRsp& default_instance();
  
  void Swap(CSGetUserAttributesRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetUserAttributesRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetUserAttributesRsp& from);
  void MergeFrom(const CSGetUserAttributesRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_time = 2;
  inline bool has_reg_time() const;
  inline void clear_reg_time();
  static const int kRegTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_time() const;
  inline void set_reg_time(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required .CSAttributesRsp attributes = 4;
  inline bool has_attributes() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 4;
  inline const ::CSAttributesRsp& attributes() const;
  inline ::CSAttributesRsp* mutable_attributes();
  inline ::CSAttributesRsp* release_attributes();
  
  // @@protoc_insertion_point(class_scope:CSGetUserAttributesRsp)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_time();
  inline void clear_has_reg_time();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_attributes();
  inline void clear_has_attributes();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_time_;
  ::CSAttributesRsp* attributes_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetUserAttributesRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyMoneyConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyMoneyConfInfoRsp();
  virtual ~CSNotifyMoneyConfInfoRsp();
  
  CSNotifyMoneyConfInfoRsp(const CSNotifyMoneyConfInfoRsp& from);
  
  inline CSNotifyMoneyConfInfoRsp& operator=(const CSNotifyMoneyConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyMoneyConfInfoRsp& default_instance();
  
  void Swap(CSNotifyMoneyConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyMoneyConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyMoneyConfInfoRsp& from);
  void MergeFrom(const CSNotifyMoneyConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pay = 1;
  inline bool has_pay() const;
  inline void clear_pay();
  static const int kPayFieldNumber = 1;
  inline ::google::protobuf::uint32 pay() const;
  inline void set_pay(::google::protobuf::uint32 value);
  
  // required uint32 diamond = 2;
  inline bool has_diamond() const;
  inline void clear_diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 diamond() const;
  inline void set_diamond(::google::protobuf::uint32 value);
  
  // required uint32 explore = 3;
  inline bool has_explore() const;
  inline void clear_explore();
  static const int kExploreFieldNumber = 3;
  inline ::google::protobuf::uint32 explore() const;
  inline void set_explore(::google::protobuf::uint32 value);
  
  // required uint32 train = 4;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 4;
  inline ::google::protobuf::uint32 train() const;
  inline void set_train(::google::protobuf::uint32 value);
  
  // required uint32 hold_on_line_max_exp = 20;
  inline bool has_hold_on_line_max_exp() const;
  inline void clear_hold_on_line_max_exp();
  static const int kHoldOnLineMaxExpFieldNumber = 20;
  inline ::google::protobuf::uint32 hold_on_line_max_exp() const;
  inline void set_hold_on_line_max_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyMoneyConfInfoRsp)
 private:
  inline void set_has_pay();
  inline void clear_has_pay();
  inline void set_has_diamond();
  inline void clear_has_diamond();
  inline void set_has_explore();
  inline void clear_has_explore();
  inline void set_has_train();
  inline void clear_has_train();
  inline void set_has_hold_on_line_max_exp();
  inline void clear_has_hold_on_line_max_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pay_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 explore_;
  ::google::protobuf::uint32 train_;
  ::google::protobuf::uint32 hold_on_line_max_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyMoneyConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyLevelConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyLevelConfInfoRsp();
  virtual ~CSNotifyLevelConfInfoRsp();
  
  CSNotifyLevelConfInfoRsp(const CSNotifyLevelConfInfoRsp& from);
  
  inline CSNotifyLevelConfInfoRsp& operator=(const CSNotifyLevelConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyLevelConfInfoRsp& default_instance();
  
  void Swap(CSNotifyLevelConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyLevelConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyLevelConfInfoRsp& from);
  void MergeFrom(const CSNotifyLevelConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 pay_money = 1;
  inline bool has_pay_money() const;
  inline void clear_pay_money();
  static const int kPayMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 pay_money() const;
  inline void set_pay_money(::google::protobuf::uint32 value);
  
  // required uint32 mine_money = 2;
  inline bool has_mine_money() const;
  inline void clear_mine_money();
  static const int kMineMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 mine_money() const;
  inline void set_mine_money(::google::protobuf::uint32 value);
  
  // required uint32 train_money = 3;
  inline bool has_train_money() const;
  inline void clear_train_money();
  static const int kTrainMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 train_money() const;
  inline void set_train_money(::google::protobuf::uint32 value);
  
  // required uint32 suspend_limit_exp = 4;
  inline bool has_suspend_limit_exp() const;
  inline void clear_suspend_limit_exp();
  static const int kSuspendLimitExpFieldNumber = 4;
  inline ::google::protobuf::uint32 suspend_limit_exp() const;
  inline void set_suspend_limit_exp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyLevelConfInfoRsp)
 private:
  inline void set_has_pay_money();
  inline void clear_has_pay_money();
  inline void set_has_mine_money();
  inline void clear_has_mine_money();
  inline void set_has_train_money();
  inline void clear_has_train_money();
  inline void set_has_suspend_limit_exp();
  inline void clear_has_suspend_limit_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 pay_money_;
  ::google::protobuf::uint32 mine_money_;
  ::google::protobuf::uint32 train_money_;
  ::google::protobuf::uint32 suspend_limit_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyLevelConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyVipConfInfoRsp : public ::google::protobuf::Message {
 public:
  CSNotifyVipConfInfoRsp();
  virtual ~CSNotifyVipConfInfoRsp();
  
  CSNotifyVipConfInfoRsp(const CSNotifyVipConfInfoRsp& from);
  
  inline CSNotifyVipConfInfoRsp& operator=(const CSNotifyVipConfInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyVipConfInfoRsp& default_instance();
  
  void Swap(CSNotifyVipConfInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyVipConfInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyVipConfInfoRsp& from);
  void MergeFrom(const CSNotifyVipConfInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 hold_on_line_max_time = 1;
  inline bool has_hold_on_line_max_time() const;
  inline void clear_hold_on_line_max_time();
  static const int kHoldOnLineMaxTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 hold_on_line_max_time() const;
  inline void set_hold_on_line_max_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyVipConfInfoRsp)
 private:
  inline void set_has_hold_on_line_max_time();
  inline void clear_has_hold_on_line_max_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 hold_on_line_max_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyVipConfInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyCliSysFlagRsp_SysFlag : public ::google::protobuf::Message {
 public:
  CSNotifyCliSysFlagRsp_SysFlag();
  virtual ~CSNotifyCliSysFlagRsp_SysFlag();
  
  CSNotifyCliSysFlagRsp_SysFlag(const CSNotifyCliSysFlagRsp_SysFlag& from);
  
  inline CSNotifyCliSysFlagRsp_SysFlag& operator=(const CSNotifyCliSysFlagRsp_SysFlag& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyCliSysFlagRsp_SysFlag& default_instance();
  
  void Swap(CSNotifyCliSysFlagRsp_SysFlag* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyCliSysFlagRsp_SysFlag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyCliSysFlagRsp_SysFlag& from);
  void MergeFrom(const CSNotifyCliSysFlagRsp_SysFlag& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .CSNotifyCliSysFlagRsp.SysIndex sys_index = 1;
  inline bool has_sys_index() const;
  inline void clear_sys_index();
  static const int kSysIndexFieldNumber = 1;
  inline ::CSNotifyCliSysFlagRsp_SysIndex sys_index() const;
  inline void set_sys_index(::CSNotifyCliSysFlagRsp_SysIndex value);
  
  // required bool flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline bool flag() const;
  inline void set_flag(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNotifyCliSysFlagRsp.SysFlag)
 private:
  inline void set_has_sys_index();
  inline void clear_has_sys_index();
  inline void set_has_flag();
  inline void clear_has_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int sys_index_;
  bool flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyCliSysFlagRsp_SysFlag* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyCliSysFlagRsp : public ::google::protobuf::Message {
 public:
  CSNotifyCliSysFlagRsp();
  virtual ~CSNotifyCliSysFlagRsp();
  
  CSNotifyCliSysFlagRsp(const CSNotifyCliSysFlagRsp& from);
  
  inline CSNotifyCliSysFlagRsp& operator=(const CSNotifyCliSysFlagRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyCliSysFlagRsp& default_instance();
  
  void Swap(CSNotifyCliSysFlagRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyCliSysFlagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyCliSysFlagRsp& from);
  void MergeFrom(const CSNotifyCliSysFlagRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSNotifyCliSysFlagRsp_SysFlag SysFlag;
  
  typedef CSNotifyCliSysFlagRsp_SysIndex SysIndex;
  static const SysIndex DOWER_SYSTEM = CSNotifyCliSysFlagRsp_SysIndex_DOWER_SYSTEM;
  static inline bool SysIndex_IsValid(int value) {
    return CSNotifyCliSysFlagRsp_SysIndex_IsValid(value);
  }
  static const SysIndex SysIndex_MIN =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MIN;
  static const SysIndex SysIndex_MAX =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_MAX;
  static const int SysIndex_ARRAYSIZE =
    CSNotifyCliSysFlagRsp_SysIndex_SysIndex_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SysIndex_descriptor() {
    return CSNotifyCliSysFlagRsp_SysIndex_descriptor();
  }
  static inline const ::std::string& SysIndex_Name(SysIndex value) {
    return CSNotifyCliSysFlagRsp_SysIndex_Name(value);
  }
  static inline bool SysIndex_Parse(const ::std::string& name,
      SysIndex* value) {
    return CSNotifyCliSysFlagRsp_SysIndex_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .CSNotifyCliSysFlagRsp.SysFlag sys_flags = 1;
  inline int sys_flags_size() const;
  inline void clear_sys_flags();
  static const int kSysFlagsFieldNumber = 1;
  inline const ::CSNotifyCliSysFlagRsp_SysFlag& sys_flags(int index) const;
  inline ::CSNotifyCliSysFlagRsp_SysFlag* mutable_sys_flags(int index);
  inline ::CSNotifyCliSysFlagRsp_SysFlag* add_sys_flags();
  inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >&
      sys_flags() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >*
      mutable_sys_flags();
  
  // @@protoc_insertion_point(class_scope:CSNotifyCliSysFlagRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag > sys_flags_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyCliSysFlagRsp* default_instance_;
};
// -------------------------------------------------------------------

class PartnerInfo : public ::google::protobuf::Message {
 public:
  PartnerInfo();
  virtual ~PartnerInfo();
  
  PartnerInfo(const PartnerInfo& from);
  
  inline PartnerInfo& operator=(const PartnerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartnerInfo& default_instance();
  
  void Swap(PartnerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PartnerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PartnerInfo& from);
  void MergeFrom(const PartnerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 lv = 5;
  inline bool has_lv() const;
  inline void clear_lv();
  static const int kLvFieldNumber = 5;
  inline ::google::protobuf::uint32 lv() const;
  inline void set_lv(::google::protobuf::uint32 value);
  
  // required uint32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 prestige = 7;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 7;
  inline ::google::protobuf::uint32 prestige() const;
  inline void set_prestige(::google::protobuf::uint32 value);
  
  // required uint32 pvai_rank = 8;
  inline bool has_pvai_rank() const;
  inline void clear_pvai_rank();
  static const int kPvaiRankFieldNumber = 8;
  inline ::google::protobuf::uint32 pvai_rank() const;
  inline void set_pvai_rank(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:PartnerInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_lv();
  inline void clear_has_lv();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_pvai_rank();
  inline void clear_has_pvai_rank();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 lv_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 prestige_;
  ::google::protobuf::uint32 pvai_rank_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static PartnerInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSNearByReq : public ::google::protobuf::Message {
 public:
  CSNearByReq();
  virtual ~CSNearByReq();
  
  CSNearByReq(const CSNearByReq& from);
  
  inline CSNearByReq& operator=(const CSNearByReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearByReq& default_instance();
  
  void Swap(CSNearByReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNearByReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearByReq& from);
  void MergeFrom(const CSNearByReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNearByReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearByReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNearByRsp : public ::google::protobuf::Message {
 public:
  CSNearByRsp();
  virtual ~CSNearByRsp();
  
  CSNearByRsp(const CSNearByRsp& from);
  
  inline CSNearByRsp& operator=(const CSNearByRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNearByRsp& default_instance();
  
  void Swap(CSNearByRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNearByRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNearByRsp& from);
  void MergeFrom(const CSNearByRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo nearby = 1;
  inline int nearby_size() const;
  inline void clear_nearby();
  static const int kNearbyFieldNumber = 1;
  inline const ::PartnerInfo& nearby(int index) const;
  inline ::PartnerInfo* mutable_nearby(int index);
  inline ::PartnerInfo* add_nearby();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      nearby() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_nearby();
  
  // @@protoc_insertion_point(class_scope:CSNearByRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > nearby_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNearByRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSPartnerInfoReq : public ::google::protobuf::Message {
 public:
  CSPartnerInfoReq();
  virtual ~CSPartnerInfoReq();
  
  CSPartnerInfoReq(const CSPartnerInfoReq& from);
  
  inline CSPartnerInfoReq& operator=(const CSPartnerInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPartnerInfoReq& default_instance();
  
  void Swap(CSPartnerInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSPartnerInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPartnerInfoReq& from);
  void MergeFrom(const CSPartnerInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSPartnerInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPartnerInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAddPartnerReq : public ::google::protobuf::Message {
 public:
  CSAddPartnerReq();
  virtual ~CSAddPartnerReq();
  
  CSAddPartnerReq(const CSAddPartnerReq& from);
  
  inline CSAddPartnerReq& operator=(const CSAddPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddPartnerReq& default_instance();
  
  void Swap(CSAddPartnerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddPartnerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddPartnerReq& from);
  void MergeFrom(const CSAddPartnerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:CSAddPartnerReq)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddPartnerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelPartnerReq : public ::google::protobuf::Message {
 public:
  CSDelPartnerReq();
  virtual ~CSDelPartnerReq();
  
  CSDelPartnerReq(const CSDelPartnerReq& from);
  
  inline CSDelPartnerReq& operator=(const CSDelPartnerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelPartnerReq& default_instance();
  
  void Swap(CSDelPartnerReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelPartnerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelPartnerReq& from);
  void MergeFrom(const CSDelPartnerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelPartnerReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelPartnerReq* default_instance_;
};
// -------------------------------------------------------------------

class CSPartnerInfoRsp : public ::google::protobuf::Message {
 public:
  CSPartnerInfoRsp();
  virtual ~CSPartnerInfoRsp();
  
  CSPartnerInfoRsp(const CSPartnerInfoRsp& from);
  
  inline CSPartnerInfoRsp& operator=(const CSPartnerInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSPartnerInfoRsp& default_instance();
  
  void Swap(CSPartnerInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSPartnerInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSPartnerInfoRsp& from);
  void MergeFrom(const CSPartnerInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PartnerInfo partner = 1;
  inline int partner_size() const;
  inline void clear_partner();
  static const int kPartnerFieldNumber = 1;
  inline const ::PartnerInfo& partner(int index) const;
  inline ::PartnerInfo* mutable_partner(int index);
  inline ::PartnerInfo* add_partner();
  inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
      partner() const;
  inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
      mutable_partner();
  
  // @@protoc_insertion_point(class_scope:CSPartnerInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PartnerInfo > partner_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSPartnerInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddPartnerRsp : public ::google::protobuf::Message {
 public:
  CSAddPartnerRsp();
  virtual ~CSAddPartnerRsp();
  
  CSAddPartnerRsp(const CSAddPartnerRsp& from);
  
  inline CSAddPartnerRsp& operator=(const CSAddPartnerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddPartnerRsp& default_instance();
  
  void Swap(CSAddPartnerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddPartnerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddPartnerRsp& from);
  void MergeFrom(const CSAddPartnerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSAddPartnerRsp_AddPartnerType AddPartnerType;
  static const AddPartnerType succ = CSAddPartnerRsp_AddPartnerType_succ;
  static const AddPartnerType existed = CSAddPartnerRsp_AddPartnerType_existed;
  static const AddPartnerType nofound = CSAddPartnerRsp_AddPartnerType_nofound;
  static const AddPartnerType overflow = CSAddPartnerRsp_AddPartnerType_overflow;
  static const AddPartnerType self = CSAddPartnerRsp_AddPartnerType_self;
  static inline bool AddPartnerType_IsValid(int value) {
    return CSAddPartnerRsp_AddPartnerType_IsValid(value);
  }
  static const AddPartnerType AddPartnerType_MIN =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_MIN;
  static const AddPartnerType AddPartnerType_MAX =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_MAX;
  static const int AddPartnerType_ARRAYSIZE =
    CSAddPartnerRsp_AddPartnerType_AddPartnerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AddPartnerType_descriptor() {
    return CSAddPartnerRsp_AddPartnerType_descriptor();
  }
  static inline const ::std::string& AddPartnerType_Name(AddPartnerType value) {
    return CSAddPartnerRsp_AddPartnerType_Name(value);
  }
  static inline bool AddPartnerType_Parse(const ::std::string& name,
      AddPartnerType* value) {
    return CSAddPartnerRsp_AddPartnerType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .CSAddPartnerRsp.AddPartnerType rsp = 1 [default = succ];
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline ::CSAddPartnerRsp_AddPartnerType rsp() const;
  inline void set_rsp(::CSAddPartnerRsp_AddPartnerType value);
  
  // @@protoc_insertion_point(class_scope:CSAddPartnerRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddPartnerRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelPartnerRsp : public ::google::protobuf::Message {
 public:
  CSDelPartnerRsp();
  virtual ~CSDelPartnerRsp();
  
  CSDelPartnerRsp(const CSDelPartnerRsp& from);
  
  inline CSDelPartnerRsp& operator=(const CSDelPartnerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelPartnerRsp& default_instance();
  
  void Swap(CSDelPartnerRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelPartnerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelPartnerRsp& from);
  void MergeFrom(const CSDelPartnerRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelPartnerRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelPartnerRsp* default_instance_;
};
// -------------------------------------------------------------------

class DndInfo : public ::google::protobuf::Message {
 public:
  DndInfo();
  virtual ~DndInfo();
  
  DndInfo(const DndInfo& from);
  
  inline DndInfo& operator=(const DndInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DndInfo& default_instance();
  
  void Swap(DndInfo* other);
  
  // implements Message ----------------------------------------------
  
  DndInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DndInfo& from);
  void MergeFrom(const DndInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:DndInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::std::string* name_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static DndInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSAddDndReq : public ::google::protobuf::Message {
 public:
  CSAddDndReq();
  virtual ~CSAddDndReq();
  
  CSAddDndReq(const CSAddDndReq& from);
  
  inline CSAddDndReq& operator=(const CSAddDndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddDndReq& default_instance();
  
  void Swap(CSAddDndReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAddDndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddDndReq& from);
  void MergeFrom(const CSAddDndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSAddDndReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddDndReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDndInfoReq : public ::google::protobuf::Message {
 public:
  CSDndInfoReq();
  virtual ~CSDndInfoReq();
  
  CSDndInfoReq(const CSDndInfoReq& from);
  
  inline CSDndInfoReq& operator=(const CSDndInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDndInfoReq& default_instance();
  
  void Swap(CSDndInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDndInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDndInfoReq& from);
  void MergeFrom(const CSDndInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSDndInfoReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDndInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelDndReq : public ::google::protobuf::Message {
 public:
  CSDelDndReq();
  virtual ~CSDelDndReq();
  
  CSDelDndReq(const CSDelDndReq& from);
  
  inline CSDelDndReq& operator=(const CSDelDndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelDndReq& default_instance();
  
  void Swap(CSDelDndReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelDndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelDndReq& from);
  void MergeFrom(const CSDelDndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 reg_tm = 2;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 2;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // required uint32 channel_id = 3;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 3;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelDndReq)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelDndReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDndInfoRsp : public ::google::protobuf::Message {
 public:
  CSDndInfoRsp();
  virtual ~CSDndInfoRsp();
  
  CSDndInfoRsp(const CSDndInfoRsp& from);
  
  inline CSDndInfoRsp& operator=(const CSDndInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDndInfoRsp& default_instance();
  
  void Swap(CSDndInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDndInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDndInfoRsp& from);
  void MergeFrom(const CSDndInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DndInfo dnd = 1;
  inline int dnd_size() const;
  inline void clear_dnd();
  static const int kDndFieldNumber = 1;
  inline const ::DndInfo& dnd(int index) const;
  inline ::DndInfo* mutable_dnd(int index);
  inline ::DndInfo* add_dnd();
  inline const ::google::protobuf::RepeatedPtrField< ::DndInfo >&
      dnd() const;
  inline ::google::protobuf::RepeatedPtrField< ::DndInfo >*
      mutable_dnd();
  
  // @@protoc_insertion_point(class_scope:CSDndInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DndInfo > dnd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDndInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAddDndRsp : public ::google::protobuf::Message {
 public:
  CSAddDndRsp();
  virtual ~CSAddDndRsp();
  
  CSAddDndRsp(const CSAddDndRsp& from);
  
  inline CSAddDndRsp& operator=(const CSAddDndRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAddDndRsp& default_instance();
  
  void Swap(CSAddDndRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAddDndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAddDndRsp& from);
  void MergeFrom(const CSAddDndRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSAddDndRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAddDndRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelDndRsp : public ::google::protobuf::Message {
 public:
  CSDelDndRsp();
  virtual ~CSDelDndRsp();
  
  CSDelDndRsp(const CSDelDndRsp& from);
  
  inline CSDelDndRsp& operator=(const CSDelDndRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelDndRsp& default_instance();
  
  void Swap(CSDelDndRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelDndRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelDndRsp& from);
  void MergeFrom(const CSDelDndRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool succ = 1;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 1;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelDndRsp)
 private:
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelDndRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteReq : public ::google::protobuf::Message {
 public:
  CSNoteReq();
  virtual ~CSNoteReq();
  
  CSNoteReq(const CSNoteReq& from);
  
  inline CSNoteReq& operator=(const CSNoteReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteReq& default_instance();
  
  void Swap(CSNoteReq* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteReq& from);
  void MergeFrom(const CSNoteReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .NoteType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline NoteType type() const;
  inline void set_type(NoteType value);
  
  // required bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // required uint32 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // required bytes name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 userid = 5;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 5;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_tm = 6;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 6;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 channel_id = 7;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 7;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bool dnd = 8 [default = true];
  inline bool has_dnd() const;
  inline void clear_dnd();
  static const int kDndFieldNumber = 8;
  inline bool dnd() const;
  inline void set_dnd(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNoteReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_dnd();
  inline void clear_has_dnd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  int type_;
  ::google::protobuf::uint32 seq_;
  ::std::string* name_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  bool dnd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteReq* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteRsp : public ::google::protobuf::Message {
 public:
  CSNoteRsp();
  virtual ~CSNoteRsp();
  
  CSNoteRsp(const CSNoteRsp& from);
  
  inline CSNoteRsp& operator=(const CSNoteRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteRsp& default_instance();
  
  void Swap(CSNoteRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteRsp& from);
  void MergeFrom(const CSNoteRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);
  
  // required bool succ = 2;
  inline bool has_succ() const;
  inline void clear_succ();
  static const int kSuccFieldNumber = 2;
  inline bool succ() const;
  inline void set_succ(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNoteRsp)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_succ();
  inline void clear_has_succ();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seq_;
  bool succ_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNoteShow : public ::google::protobuf::Message {
 public:
  CSNoteShow();
  virtual ~CSNoteShow();
  
  CSNoteShow(const CSNoteShow& from);
  
  inline CSNoteShow& operator=(const CSNoteShow& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNoteShow& default_instance();
  
  void Swap(CSNoteShow* other);
  
  // implements Message ----------------------------------------------
  
  CSNoteShow* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNoteShow& from);
  void MergeFrom(const CSNoteShow& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .NoteType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline NoteType type() const;
  inline void set_type(NoteType value);
  
  // required bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional uint32 userid = 4;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 4;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // optional uint32 reg_tm = 5;
  inline bool has_reg_tm() const;
  inline void clear_reg_tm();
  static const int kRegTmFieldNumber = 5;
  inline ::google::protobuf::uint32 reg_tm() const;
  inline void set_reg_tm(::google::protobuf::uint32 value);
  
  // optional uint32 channel_id = 6;
  inline bool has_channel_id() const;
  inline void clear_channel_id();
  static const int kChannelIdFieldNumber = 6;
  inline ::google::protobuf::uint32 channel_id() const;
  inline void set_channel_id(::google::protobuf::uint32 value);
  
  // optional bool system = 7;
  inline bool has_system() const;
  inline void clear_system();
  static const int kSystemFieldNumber = 7;
  inline bool system() const;
  inline void set_system(bool value);
  
  // @@protoc_insertion_point(class_scope:CSNoteShow)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_reg_tm();
  inline void clear_has_reg_tm();
  inline void set_has_channel_id();
  inline void clear_has_channel_id();
  inline void set_has_system();
  inline void clear_has_system();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  int type_;
  ::google::protobuf::uint32 userid_;
  ::std::string* name_;
  ::google::protobuf::uint32 reg_tm_;
  ::google::protobuf::uint32 channel_id_;
  bool system_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNoteShow* default_instance_;
};
// -------------------------------------------------------------------

class CSMailReq : public ::google::protobuf::Message {
 public:
  CSMailReq();
  virtual ~CSMailReq();
  
  CSMailReq(const CSMailReq& from);
  
  inline CSMailReq& operator=(const CSMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailReq& default_instance();
  
  void Swap(CSMailReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailReq& from);
  void MergeFrom(const CSMailReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailReq* default_instance_;
};
// -------------------------------------------------------------------

class AttachItem : public ::google::protobuf::Message {
 public:
  AttachItem();
  virtual ~AttachItem();
  
  AttachItem(const AttachItem& from);
  
  inline AttachItem& operator=(const AttachItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttachItem& default_instance();
  
  void Swap(AttachItem* other);
  
  // implements Message ----------------------------------------------
  
  AttachItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttachItem& from);
  void MergeFrom(const AttachItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:AttachItem)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static AttachItem* default_instance_;
};
// -------------------------------------------------------------------

class CSMailRsp : public ::google::protobuf::Message {
 public:
  CSMailRsp();
  virtual ~CSMailRsp();
  
  CSMailRsp(const CSMailRsp& from);
  
  inline CSMailRsp& operator=(const CSMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailRsp& default_instance();
  
  void Swap(CSMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailRsp& from);
  void MergeFrom(const CSMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // optional bytes title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional bytes from = 3;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 3;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const void* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // optional bytes content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // repeated .AttachItem items = 5;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 5;
  inline const ::AttachItem& items(int index) const;
  inline ::AttachItem* mutable_items(int index);
  inline ::AttachItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::AttachItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::AttachItem >*
      mutable_items();
  
  // required bool hasget = 6;
  inline bool has_hasget() const;
  inline void clear_hasget();
  static const int kHasgetFieldNumber = 6;
  inline bool hasget() const;
  inline void set_hasget(bool value);
  
  // required bytes from_tm = 7;
  inline bool has_from_tm() const;
  inline void clear_from_tm();
  static const int kFromTmFieldNumber = 7;
  inline const ::std::string& from_tm() const;
  inline void set_from_tm(const ::std::string& value);
  inline void set_from_tm(const char* value);
  inline void set_from_tm(const void* value, size_t size);
  inline ::std::string* mutable_from_tm();
  inline ::std::string* release_from_tm();
  
  // @@protoc_insertion_point(class_scope:CSMailRsp)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_hasget();
  inline void clear_has_hasget();
  inline void set_has_from_tm();
  inline void clear_has_from_tm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* title_;
  ::std::string* from_;
  ::google::protobuf::uint32 mailid_;
  bool hasget_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::AttachItem > items_;
  ::std::string* from_tm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class MailList : public ::google::protobuf::Message {
 public:
  MailList();
  virtual ~MailList();
  
  MailList(const MailList& from);
  
  inline MailList& operator=(const MailList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailList& default_instance();
  
  void Swap(MailList* other);
  
  // implements Message ----------------------------------------------
  
  MailList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailList& from);
  void MergeFrom(const MailList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // optional bytes title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // required bool hasread = 3;
  inline bool has_hasread() const;
  inline void clear_hasread();
  static const int kHasreadFieldNumber = 3;
  inline bool hasread() const;
  inline void set_hasread(bool value);
  
  // required bool hasattach = 4;
  inline bool has_hasattach() const;
  inline void clear_hasattach();
  static const int kHasattachFieldNumber = 4;
  inline bool hasattach() const;
  inline void set_hasattach(bool value);
  
  // @@protoc_insertion_point(class_scope:MailList)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_hasread();
  inline void clear_has_hasread();
  inline void set_has_hasattach();
  inline void clear_has_hasattach();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* title_;
  ::google::protobuf::uint32 mailid_;
  bool hasread_;
  bool hasattach_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static MailList* default_instance_;
};
// -------------------------------------------------------------------

class CSMailListReq : public ::google::protobuf::Message {
 public:
  CSMailListReq();
  virtual ~CSMailListReq();
  
  CSMailListReq(const CSMailListReq& from);
  
  inline CSMailListReq& operator=(const CSMailListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailListReq& default_instance();
  
  void Swap(CSMailListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSMailListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailListReq& from);
  void MergeFrom(const CSMailListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSMailListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSMailListRsp : public ::google::protobuf::Message {
 public:
  CSMailListRsp();
  virtual ~CSMailListRsp();
  
  CSMailListRsp(const CSMailListRsp& from);
  
  inline CSMailListRsp& operator=(const CSMailListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailListRsp& default_instance();
  
  void Swap(CSMailListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMailListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailListRsp& from);
  void MergeFrom(const CSMailListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MailList maillist = 1;
  inline int maillist_size() const;
  inline void clear_maillist();
  static const int kMaillistFieldNumber = 1;
  inline const ::MailList& maillist(int index) const;
  inline ::MailList* mutable_maillist(int index);
  inline ::MailList* add_maillist();
  inline const ::google::protobuf::RepeatedPtrField< ::MailList >&
      maillist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailList >*
      mutable_maillist();
  
  // optional .CSMailRsp mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::CSMailRsp& mail() const;
  inline ::CSMailRsp* mutable_mail();
  inline ::CSMailRsp* release_mail();
  
  // @@protoc_insertion_point(class_scope:CSMailListRsp)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MailList > maillist_;
  ::CSMailRsp* mail_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelMailReq : public ::google::protobuf::Message {
 public:
  CSDelMailReq();
  virtual ~CSDelMailReq();
  
  CSDelMailReq(const CSDelMailReq& from);
  
  inline CSDelMailReq& operator=(const CSDelMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelMailReq& default_instance();
  
  void Swap(CSDelMailReq* other);
  
  // implements Message ----------------------------------------------
  
  CSDelMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelMailReq& from);
  void MergeFrom(const CSDelMailReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSDelMailReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelMailReq* default_instance_;
};
// -------------------------------------------------------------------

class CSDelMailRsp : public ::google::protobuf::Message {
 public:
  CSDelMailRsp();
  virtual ~CSDelMailRsp();
  
  CSDelMailRsp(const CSDelMailRsp& from);
  
  inline CSDelMailRsp& operator=(const CSDelMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelMailRsp& default_instance();
  
  void Swap(CSDelMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelMailRsp& from);
  void MergeFrom(const CSDelMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline bool rsp() const;
  inline void set_rsp(bool value);
  
  // @@protoc_insertion_point(class_scope:CSDelMailRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetAttachReq : public ::google::protobuf::Message {
 public:
  CSGetAttachReq();
  virtual ~CSGetAttachReq();
  
  CSGetAttachReq(const CSGetAttachReq& from);
  
  inline CSGetAttachReq& operator=(const CSGetAttachReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetAttachReq& default_instance();
  
  void Swap(CSGetAttachReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetAttachReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetAttachReq& from);
  void MergeFrom(const CSGetAttachReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mailid = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailidFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetAttachReq)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mailid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetAttachReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetAttachRsp : public ::google::protobuf::Message {
 public:
  CSGetAttachRsp();
  virtual ~CSGetAttachRsp();
  
  CSGetAttachRsp(const CSGetAttachRsp& from);
  
  inline CSGetAttachRsp& operator=(const CSGetAttachRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetAttachRsp& default_instance();
  
  void Swap(CSGetAttachRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetAttachRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetAttachRsp& from);
  void MergeFrom(const CSGetAttachRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline ::google::protobuf::uint32 rsp() const;
  inline void set_rsp(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetAttachRsp)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 rsp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetAttachRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNewMailRsp : public ::google::protobuf::Message {
 public:
  CSNewMailRsp();
  virtual ~CSNewMailRsp();
  
  CSNewMailRsp(const CSNewMailRsp& from);
  
  inline CSNewMailRsp& operator=(const CSNewMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNewMailRsp& default_instance();
  
  void Swap(CSNewMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNewMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNewMailRsp& from);
  void MergeFrom(const CSNewMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNewMailRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNewMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSActivityListReq : public ::google::protobuf::Message {
 public:
  CSActivityListReq();
  virtual ~CSActivityListReq();
  
  CSActivityListReq(const CSActivityListReq& from);
  
  inline CSActivityListReq& operator=(const CSActivityListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSActivityListReq& default_instance();
  
  void Swap(CSActivityListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSActivityListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSActivityListReq& from);
  void MergeFrom(const CSActivityListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSActivityListReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSActivityListReq* default_instance_;
};
// -------------------------------------------------------------------

class Activity_Step : public ::google::protobuf::Message {
 public:
  Activity_Step();
  virtual ~Activity_Step();
  
  Activity_Step(const Activity_Step& from);
  
  inline Activity_Step& operator=(const Activity_Step& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity_Step& default_instance();
  
  void Swap(Activity_Step* other);
  
  // implements Message ----------------------------------------------
  
  Activity_Step* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity_Step& from);
  void MergeFrom(const Activity_Step& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 step_type = 1;
  inline bool has_step_type() const;
  inline void clear_step_type();
  static const int kStepTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 step_type() const;
  inline void set_step_type(::google::protobuf::uint32 value);
  
  // required uint32 step_id = 2;
  inline bool has_step_id() const;
  inline void clear_step_id();
  static const int kStepIdFieldNumber = 2;
  inline ::google::protobuf::uint32 step_id() const;
  inline void set_step_id(::google::protobuf::uint32 value);
  
  // required uint32 step_value = 3;
  inline bool has_step_value() const;
  inline void clear_step_value();
  static const int kStepValueFieldNumber = 3;
  inline ::google::protobuf::uint32 step_value() const;
  inline void set_step_value(::google::protobuf::uint32 value);
  
  // required uint32 is_need_step = 4;
  inline bool has_is_need_step() const;
  inline void clear_is_need_step();
  static const int kIsNeedStepFieldNumber = 4;
  inline ::google::protobuf::uint32 is_need_step() const;
  inline void set_is_need_step(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Activity_Step)
 private:
  inline void set_has_step_type();
  inline void clear_has_step_type();
  inline void set_has_step_id();
  inline void clear_has_step_id();
  inline void set_has_step_value();
  inline void clear_has_step_value();
  inline void set_has_is_need_step();
  inline void clear_has_is_need_step();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 step_type_;
  ::google::protobuf::uint32 step_id_;
  ::google::protobuf::uint32 step_value_;
  ::google::protobuf::uint32 is_need_step_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Activity_Step* default_instance_;
};
// -------------------------------------------------------------------

class Activity_Info : public ::google::protobuf::Message {
 public:
  Activity_Info();
  virtual ~Activity_Info();
  
  Activity_Info(const Activity_Info& from);
  
  inline Activity_Info& operator=(const Activity_Info& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Activity_Info& default_instance();
  
  void Swap(Activity_Info* other);
  
  // implements Message ----------------------------------------------
  
  Activity_Info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Activity_Info& from);
  void MergeFrom(const Activity_Info& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // repeated .Activity_Step activity_steps = 2;
  inline int activity_steps_size() const;
  inline void clear_activity_steps();
  static const int kActivityStepsFieldNumber = 2;
  inline const ::Activity_Step& activity_steps(int index) const;
  inline ::Activity_Step* mutable_activity_steps(int index);
  inline ::Activity_Step* add_activity_steps();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Step >&
      activity_steps() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Step >*
      mutable_activity_steps();
  
  // required uint32 revc_reward_times = 3;
  inline bool has_revc_reward_times() const;
  inline void clear_revc_reward_times();
  static const int kRevcRewardTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 revc_reward_times() const;
  inline void set_revc_reward_times(::google::protobuf::uint32 value);
  
  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:Activity_Info)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_revc_reward_times();
  inline void clear_has_revc_reward_times();
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Step > activity_steps_;
  ::google::protobuf::uint32 activity_id_;
  ::google::protobuf::uint32 revc_reward_times_;
  ::google::protobuf::uint32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Activity_Info* default_instance_;
};
// -------------------------------------------------------------------

class CSActivityListRsp : public ::google::protobuf::Message {
 public:
  CSActivityListRsp();
  virtual ~CSActivityListRsp();
  
  CSActivityListRsp(const CSActivityListRsp& from);
  
  inline CSActivityListRsp& operator=(const CSActivityListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSActivityListRsp& default_instance();
  
  void Swap(CSActivityListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSActivityListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSActivityListRsp& from);
  void MergeFrom(const CSActivityListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Activity_Info activitys = 1;
  inline int activitys_size() const;
  inline void clear_activitys();
  static const int kActivitysFieldNumber = 1;
  inline const ::Activity_Info& activitys(int index) const;
  inline ::Activity_Info* mutable_activitys(int index);
  inline ::Activity_Info* add_activitys();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
      activitys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
      mutable_activitys();
  
  // @@protoc_insertion_point(class_scope:CSActivityListRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Info > activitys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSActivityListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRewardReq : public ::google::protobuf::Message {
 public:
  CSGetActivityRewardReq();
  virtual ~CSGetActivityRewardReq();
  
  CSGetActivityRewardReq(const CSGetActivityRewardReq& from);
  
  inline CSGetActivityRewardReq& operator=(const CSGetActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRewardReq& default_instance();
  
  void Swap(CSGetActivityRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRewardReq& from);
  void MergeFrom(const CSGetActivityRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // repeated uint32 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline ::google::protobuf::uint32 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint32 value);
  inline void add_param(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRewardReq)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_;
  ::google::protobuf::uint32 activity_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetActivityRewardRsp : public ::google::protobuf::Message {
 public:
  CSGetActivityRewardRsp();
  virtual ~CSGetActivityRewardRsp();
  
  CSGetActivityRewardRsp(const CSGetActivityRewardRsp& from);
  
  inline CSGetActivityRewardRsp& operator=(const CSGetActivityRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetActivityRewardRsp& default_instance();
  
  void Swap(CSGetActivityRewardRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetActivityRewardRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetActivityRewardRsp& from);
  void MergeFrom(const CSGetActivityRewardRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 activity_id = 1;
  inline bool has_activity_id() const;
  inline void clear_activity_id();
  static const int kActivityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_id() const;
  inline void set_activity_id(::google::protobuf::uint32 value);
  
  // required bool is_succ = 2;
  inline bool has_is_succ() const;
  inline void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  inline bool is_succ() const;
  inline void set_is_succ(bool value);
  
  // optional .CSReward rewards = 3;
  inline bool has_rewards() const;
  inline void clear_rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::CSReward& rewards() const;
  inline ::CSReward* mutable_rewards();
  inline ::CSReward* release_rewards();
  
  // @@protoc_insertion_point(class_scope:CSGetActivityRewardRsp)
 private:
  inline void set_has_activity_id();
  inline void clear_has_activity_id();
  inline void set_has_is_succ();
  inline void clear_has_is_succ();
  inline void set_has_rewards();
  inline void clear_has_rewards();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 activity_id_;
  bool is_succ_;
  ::CSReward* rewards_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetActivityRewardRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSUpdateActivityInfoRsp : public ::google::protobuf::Message {
 public:
  CSUpdateActivityInfoRsp();
  virtual ~CSUpdateActivityInfoRsp();
  
  CSUpdateActivityInfoRsp(const CSUpdateActivityInfoRsp& from);
  
  inline CSUpdateActivityInfoRsp& operator=(const CSUpdateActivityInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSUpdateActivityInfoRsp& default_instance();
  
  void Swap(CSUpdateActivityInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSUpdateActivityInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSUpdateActivityInfoRsp& from);
  void MergeFrom(const CSUpdateActivityInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Activity_Info activitys = 1;
  inline int activitys_size() const;
  inline void clear_activitys();
  static const int kActivitysFieldNumber = 1;
  inline const ::Activity_Info& activitys(int index) const;
  inline ::Activity_Info* mutable_activitys(int index);
  inline ::Activity_Info* add_activitys();
  inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
      activitys() const;
  inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
      mutable_activitys();
  
  // @@protoc_insertion_point(class_scope:CSUpdateActivityInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Activity_Info > activitys_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSUpdateActivityInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSDelActivityInfoRsp : public ::google::protobuf::Message {
 public:
  CSDelActivityInfoRsp();
  virtual ~CSDelActivityInfoRsp();
  
  CSDelActivityInfoRsp(const CSDelActivityInfoRsp& from);
  
  inline CSDelActivityInfoRsp& operator=(const CSDelActivityInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSDelActivityInfoRsp& default_instance();
  
  void Swap(CSDelActivityInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSDelActivityInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSDelActivityInfoRsp& from);
  void MergeFrom(const CSDelActivityInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 activity_ids = 1;
  inline int activity_ids_size() const;
  inline void clear_activity_ids();
  static const int kActivityIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 activity_ids(int index) const;
  inline void set_activity_ids(int index, ::google::protobuf::uint32 value);
  inline void add_activity_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      activity_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_activity_ids();
  
  // @@protoc_insertion_point(class_scope:CSDelActivityInfoRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > activity_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSDelActivityInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFQueryRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFQueryRoomReq();
  virtual ~CSCDEFQueryRoomReq();
  
  CSCDEFQueryRoomReq(const CSCDEFQueryRoomReq& from);
  
  inline CSCDEFQueryRoomReq& operator=(const CSCDEFQueryRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFQueryRoomReq& default_instance();
  
  void Swap(CSCDEFQueryRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFQueryRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFQueryRoomReq& from);
  void MergeFrom(const CSCDEFQueryRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFQueryRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFQueryRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CDEFRoomBase : public ::google::protobuf::Message {
 public:
  CDEFRoomBase();
  virtual ~CDEFRoomBase();
  
  CDEFRoomBase(const CDEFRoomBase& from);
  
  inline CDEFRoomBase& operator=(const CDEFRoomBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CDEFRoomBase& default_instance();
  
  void Swap(CDEFRoomBase* other);
  
  // implements Message ----------------------------------------------
  
  CDEFRoomBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDEFRoomBase& from);
  void MergeFrom(const CDEFRoomBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 current_online = 3;
  inline bool has_current_online() const;
  inline void clear_current_online();
  static const int kCurrentOnlineFieldNumber = 3;
  inline ::google::protobuf::uint32 current_online() const;
  inline void set_current_online(::google::protobuf::uint32 value);
  
  // required uint32 max_online = 4;
  inline bool has_max_online() const;
  inline void clear_max_online();
  static const int kMaxOnlineFieldNumber = 4;
  inline ::google::protobuf::uint32 max_online() const;
  inline void set_max_online(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CDEFRoomBase)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_current_online();
  inline void clear_has_current_online();
  inline void set_has_max_online();
  inline void clear_has_max_online();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 current_online_;
  ::google::protobuf::uint32 max_online_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CDEFRoomBase* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFQueryRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFQueryRoomRsp();
  virtual ~CSCDEFQueryRoomRsp();
  
  CSCDEFQueryRoomRsp(const CSCDEFQueryRoomRsp& from);
  
  inline CSCDEFQueryRoomRsp& operator=(const CSCDEFQueryRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFQueryRoomRsp& default_instance();
  
  void Swap(CSCDEFQueryRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFQueryRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFQueryRoomRsp& from);
  void MergeFrom(const CSCDEFQueryRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CDEFRoomBase rooms = 1;
  inline int rooms_size() const;
  inline void clear_rooms();
  static const int kRoomsFieldNumber = 1;
  inline const ::CDEFRoomBase& rooms(int index) const;
  inline ::CDEFRoomBase* mutable_rooms(int index);
  inline ::CDEFRoomBase* add_rooms();
  inline const ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >&
      rooms() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >*
      mutable_rooms();
  
  // @@protoc_insertion_point(class_scope:CSCDEFQueryRoomRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase > rooms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFQueryRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFBaseInfoRsp : public ::google::protobuf::Message {
 public:
  CSCDEFBaseInfoRsp();
  virtual ~CSCDEFBaseInfoRsp();
  
  CSCDEFBaseInfoRsp(const CSCDEFBaseInfoRsp& from);
  
  inline CSCDEFBaseInfoRsp& operator=(const CSCDEFBaseInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFBaseInfoRsp& default_instance();
  
  void Swap(CSCDEFBaseInfoRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFBaseInfoRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFBaseInfoRsp& from);
  void MergeFrom(const CSCDEFBaseInfoRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 countdown = 1;
  inline bool has_countdown() const;
  inline void clear_countdown();
  static const int kCountdownFieldNumber = 1;
  inline ::google::protobuf::uint32 countdown() const;
  inline void set_countdown(::google::protobuf::uint32 value);
  
  // required uint32 remain_times = 2;
  inline bool has_remain_times() const;
  inline void clear_remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 remain_times() const;
  inline void set_remain_times(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFBaseInfoRsp)
 private:
  inline void set_has_countdown();
  inline void clear_has_countdown();
  inline void set_has_remain_times();
  inline void clear_has_remain_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 countdown_;
  ::google::protobuf::uint32 remain_times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFBaseInfoRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCreateRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFCreateRoomReq();
  virtual ~CSCDEFCreateRoomReq();
  
  CSCDEFCreateRoomReq(const CSCDEFCreateRoomReq& from);
  
  inline CSCDEFCreateRoomReq& operator=(const CSCDEFCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCreateRoomReq& default_instance();
  
  void Swap(CSCDEFCreateRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCreateRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCreateRoomReq& from);
  void MergeFrom(const CSCDEFCreateRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 top_level = 1;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // required uint32 battle_id = 2;
  inline bool has_battle_id() const;
  inline void clear_battle_id();
  static const int kBattleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 battle_id() const;
  inline void set_battle_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFCreateRoomReq)
 private:
  inline void set_has_top_level();
  inline void clear_has_top_level();
  inline void set_has_battle_id();
  inline void clear_has_battle_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::uint32 battle_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCreateRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomReq();
  virtual ~CSCDEFJoinRoomReq();
  
  CSCDEFJoinRoomReq(const CSCDEFJoinRoomReq& from);
  
  inline CSCDEFJoinRoomReq& operator=(const CSCDEFJoinRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomReq& default_instance();
  
  void Swap(CSCDEFJoinRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomReq& from);
  void MergeFrom(const CSCDEFJoinRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomReq)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomFailureRsp : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomFailureRsp();
  virtual ~CSCDEFJoinRoomFailureRsp();
  
  CSCDEFJoinRoomFailureRsp(const CSCDEFJoinRoomFailureRsp& from);
  
  inline CSCDEFJoinRoomFailureRsp& operator=(const CSCDEFJoinRoomFailureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomFailureRsp& default_instance();
  
  void Swap(CSCDEFJoinRoomFailureRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomFailureRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomFailureRsp& from);
  void MergeFrom(const CSCDEFJoinRoomFailureRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 errcode = 1;
  inline bool has_errcode() const;
  inline void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  inline ::google::protobuf::uint32 errcode() const;
  inline void set_errcode(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomFailureRsp)
 private:
  inline void set_has_errcode();
  inline void clear_has_errcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 errcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomFailureRsp* default_instance_;
};
// -------------------------------------------------------------------

class CDEFSeatBase : public ::google::protobuf::Message {
 public:
  CDEFSeatBase();
  virtual ~CDEFSeatBase();
  
  CDEFSeatBase(const CDEFSeatBase& from);
  
  inline CDEFSeatBase& operator=(const CDEFSeatBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CDEFSeatBase& default_instance();
  
  void Swap(CDEFSeatBase* other);
  
  // implements Message ----------------------------------------------
  
  CDEFSeatBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CDEFSeatBase& from);
  void MergeFrom(const CDEFSeatBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 avatar = 2;
  inline bool has_avatar() const;
  inline void clear_avatar();
  static const int kAvatarFieldNumber = 2;
  inline ::google::protobuf::uint32 avatar() const;
  inline void set_avatar(::google::protobuf::uint32 value);
  
  // required bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // required bool ready = 5;
  inline bool has_ready() const;
  inline void clear_ready();
  static const int kReadyFieldNumber = 5;
  inline bool ready() const;
  inline void set_ready(bool value);
  
  // @@protoc_insertion_point(class_scope:CDEFSeatBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_avatar();
  inline void clear_has_avatar();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_ready();
  inline void clear_has_ready();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 avatar_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  bool ready_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CDEFSeatBase* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFJoinRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFJoinRoomRsp();
  virtual ~CSCDEFJoinRoomRsp();
  
  CSCDEFJoinRoomRsp(const CSCDEFJoinRoomRsp& from);
  
  inline CSCDEFJoinRoomRsp& operator=(const CSCDEFJoinRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFJoinRoomRsp& default_instance();
  
  void Swap(CSCDEFJoinRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFJoinRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFJoinRoomRsp& from);
  void MergeFrom(const CSCDEFJoinRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // required uint32 top_level = 2;
  inline bool has_top_level() const;
  inline void clear_top_level();
  static const int kTopLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 top_level() const;
  inline void set_top_level(::google::protobuf::uint32 value);
  
  // repeated .CDEFSeatBase seats = 3;
  inline int seats_size() const;
  inline void clear_seats();
  static const int kSeatsFieldNumber = 3;
  inline const ::CDEFSeatBase& seats(int index) const;
  inline ::CDEFSeatBase* mutable_seats(int index);
  inline ::CDEFSeatBase* add_seats();
  inline const ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >&
      seats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >*
      mutable_seats();
  
  // @@protoc_insertion_point(class_scope:CSCDEFJoinRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_top_level();
  inline void clear_has_top_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 top_level_;
  ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase > seats_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFJoinRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFExitRoomReq : public ::google::protobuf::Message {
 public:
  CSCDEFExitRoomReq();
  virtual ~CSCDEFExitRoomReq();
  
  CSCDEFExitRoomReq(const CSCDEFExitRoomReq& from);
  
  inline CSCDEFExitRoomReq& operator=(const CSCDEFExitRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFExitRoomReq& default_instance();
  
  void Swap(CSCDEFExitRoomReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFExitRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFExitRoomReq& from);
  void MergeFrom(const CSCDEFExitRoomReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFExitRoomReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFExitRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCloseRoomRsp : public ::google::protobuf::Message {
 public:
  CSCDEFCloseRoomRsp();
  virtual ~CSCDEFCloseRoomRsp();
  
  CSCDEFCloseRoomRsp(const CSCDEFCloseRoomRsp& from);
  
  inline CSCDEFCloseRoomRsp& operator=(const CSCDEFCloseRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCloseRoomRsp& default_instance();
  
  void Swap(CSCDEFCloseRoomRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCloseRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCloseRoomRsp& from);
  void MergeFrom(const CSCDEFCloseRoomRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFCloseRoomRsp)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 room_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCloseRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFReadyReq : public ::google::protobuf::Message {
 public:
  CSCDEFReadyReq();
  virtual ~CSCDEFReadyReq();
  
  CSCDEFReadyReq(const CSCDEFReadyReq& from);
  
  inline CSCDEFReadyReq& operator=(const CSCDEFReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFReadyReq& default_instance();
  
  void Swap(CSCDEFReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFReadyReq& from);
  void MergeFrom(const CSCDEFReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFCancelReadyReq : public ::google::protobuf::Message {
 public:
  CSCDEFCancelReadyReq();
  virtual ~CSCDEFCancelReadyReq();
  
  CSCDEFCancelReadyReq(const CSCDEFCancelReadyReq& from);
  
  inline CSCDEFCancelReadyReq& operator=(const CSCDEFCancelReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFCancelReadyReq& default_instance();
  
  void Swap(CSCDEFCancelReadyReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFCancelReadyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFCancelReadyReq& from);
  void MergeFrom(const CSCDEFCancelReadyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFCancelReadyReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFCancelReadyReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFKickoffReq : public ::google::protobuf::Message {
 public:
  CSCDEFKickoffReq();
  virtual ~CSCDEFKickoffReq();
  
  CSCDEFKickoffReq(const CSCDEFKickoffReq& from);
  
  inline CSCDEFKickoffReq& operator=(const CSCDEFKickoffReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFKickoffReq& default_instance();
  
  void Swap(CSCDEFKickoffReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFKickoffReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFKickoffReq& from);
  void MergeFrom(const CSCDEFKickoffReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 seat = 1;
  inline bool has_seat() const;
  inline void clear_seat();
  static const int kSeatFieldNumber = 1;
  inline ::google::protobuf::uint32 seat() const;
  inline void set_seat(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFKickoffReq)
 private:
  inline void set_has_seat();
  inline void clear_has_seat();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 seat_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFKickoffReq* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFKickoffRsp : public ::google::protobuf::Message {
 public:
  CSCDEFKickoffRsp();
  virtual ~CSCDEFKickoffRsp();
  
  CSCDEFKickoffRsp(const CSCDEFKickoffRsp& from);
  
  inline CSCDEFKickoffRsp& operator=(const CSCDEFKickoffRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFKickoffRsp& default_instance();
  
  void Swap(CSCDEFKickoffRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFKickoffRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFKickoffRsp& from);
  void MergeFrom(const CSCDEFKickoffRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFKickoffRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFKickoffRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFStartReq : public ::google::protobuf::Message {
 public:
  CSCDEFStartReq();
  virtual ~CSCDEFStartReq();
  
  CSCDEFStartReq(const CSCDEFStartReq& from);
  
  inline CSCDEFStartReq& operator=(const CSCDEFStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFStartReq& default_instance();
  
  void Swap(CSCDEFStartReq* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFStartReq& from);
  void MergeFrom(const CSCDEFStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSCDEFStartReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFStartReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeReq : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeReq();
  virtual ~CSGetSpecActivityTimeReq();
  
  CSGetSpecActivityTimeReq(const CSGetSpecActivityTimeReq& from);
  
  inline CSGetSpecActivityTimeReq& operator=(const CSGetSpecActivityTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeReq& default_instance();
  
  void Swap(CSGetSpecActivityTimeReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeReq& from);
  void MergeFrom(const CSGetSpecActivityTimeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeRsp_Inter : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeRsp_Inter();
  virtual ~CSGetSpecActivityTimeRsp_Inter();
  
  CSGetSpecActivityTimeRsp_Inter(const CSGetSpecActivityTimeRsp_Inter& from);
  
  inline CSGetSpecActivityTimeRsp_Inter& operator=(const CSGetSpecActivityTimeRsp_Inter& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeRsp_Inter& default_instance();
  
  void Swap(CSGetSpecActivityTimeRsp_Inter* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeRsp_Inter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeRsp_Inter& from);
  void MergeFrom(const CSGetSpecActivityTimeRsp_Inter& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // required uint32 enter_time = 2;
  inline bool has_enter_time() const;
  inline void clear_enter_time();
  static const int kEnterTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 enter_time() const;
  inline void set_enter_time(::google::protobuf::uint32 value);
  
  // required uint32 start_time = 3;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 start_time() const;
  inline void set_start_time(::google::protobuf::uint32 value);
  
  // required uint32 end_time = 4;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 end_time() const;
  inline void set_end_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeRsp.Inter)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_enter_time();
  inline void clear_has_enter_time();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 enter_time_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 end_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeRsp_Inter* default_instance_;
};
// -------------------------------------------------------------------

class CSGetSpecActivityTimeRsp : public ::google::protobuf::Message {
 public:
  CSGetSpecActivityTimeRsp();
  virtual ~CSGetSpecActivityTimeRsp();
  
  CSGetSpecActivityTimeRsp(const CSGetSpecActivityTimeRsp& from);
  
  inline CSGetSpecActivityTimeRsp& operator=(const CSGetSpecActivityTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetSpecActivityTimeRsp& default_instance();
  
  void Swap(CSGetSpecActivityTimeRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetSpecActivityTimeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetSpecActivityTimeRsp& from);
  void MergeFrom(const CSGetSpecActivityTimeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSGetSpecActivityTimeRsp_Inter Inter;
  
  // accessors -------------------------------------------------------
  
  // repeated .CSGetSpecActivityTimeRsp.Inter interval = 1;
  inline int interval_size() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 1;
  inline const ::CSGetSpecActivityTimeRsp_Inter& interval(int index) const;
  inline ::CSGetSpecActivityTimeRsp_Inter* mutable_interval(int index);
  inline ::CSGetSpecActivityTimeRsp_Inter* add_interval();
  inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >&
      interval() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >*
      mutable_interval();
  
  // @@protoc_insertion_point(class_scope:CSGetSpecActivityTimeRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter > interval_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetSpecActivityTimeRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSCDEFStartRsp : public ::google::protobuf::Message {
 public:
  CSCDEFStartRsp();
  virtual ~CSCDEFStartRsp();
  
  CSCDEFStartRsp(const CSCDEFStartRsp& from);
  
  inline CSCDEFStartRsp& operator=(const CSCDEFStartRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSCDEFStartRsp& default_instance();
  
  void Swap(CSCDEFStartRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSCDEFStartRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSCDEFStartRsp& from);
  void MergeFrom(const CSCDEFStartRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapid = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapidFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSCDEFStartRsp)
 private:
  inline void set_has_mapid();
  inline void clear_has_mapid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mapid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSCDEFStartRsp* default_instance_;
};
// -------------------------------------------------------------------

class Announcement : public ::google::protobuf::Message {
 public:
  Announcement();
  virtual ~Announcement();
  
  Announcement(const Announcement& from);
  
  inline Announcement& operator=(const Announcement& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Announcement& default_instance();
  
  void Swap(Announcement* other);
  
  // implements Message ----------------------------------------------
  
  Announcement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Announcement& from);
  void MergeFrom(const Announcement& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSStyle context = 1;
  inline int context_size() const;
  inline void clear_context();
  static const int kContextFieldNumber = 1;
  inline const ::CSStyle& context(int index) const;
  inline ::CSStyle* mutable_context(int index);
  inline ::CSStyle* add_context();
  inline const ::google::protobuf::RepeatedPtrField< ::CSStyle >&
      context() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSStyle >*
      mutable_context();
  
  // optional uint32 from = 2;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 2;
  inline ::google::protobuf::uint32 from() const;
  inline void set_from(::google::protobuf::uint32 value);
  
  // optional uint32 to = 3;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 3;
  inline ::google::protobuf::uint32 to() const;
  inline void set_to(::google::protobuf::uint32 value);
  
  // optional uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // required bytes title = 5;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 5;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // @@protoc_insertion_point(class_scope:Announcement)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_title();
  inline void clear_has_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSStyle > context_;
  ::google::protobuf::uint32 from_;
  ::google::protobuf::uint32 to_;
  ::std::string* title_;
  ::google::protobuf::uint32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static Announcement* default_instance_;
};
// -------------------------------------------------------------------

class CSLoginAnnouncementPreRsp : public ::google::protobuf::Message {
 public:
  CSLoginAnnouncementPreRsp();
  virtual ~CSLoginAnnouncementPreRsp();
  
  CSLoginAnnouncementPreRsp(const CSLoginAnnouncementPreRsp& from);
  
  inline CSLoginAnnouncementPreRsp& operator=(const CSLoginAnnouncementPreRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLoginAnnouncementPreRsp& default_instance();
  
  void Swap(CSLoginAnnouncementPreRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLoginAnnouncementPreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLoginAnnouncementPreRsp& from);
  void MergeFrom(const CSLoginAnnouncementPreRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSLoginAnnouncementPreRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLoginAnnouncementPreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSLoginAnnouncementRsp : public ::google::protobuf::Message {
 public:
  CSLoginAnnouncementRsp();
  virtual ~CSLoginAnnouncementRsp();
  
  CSLoginAnnouncementRsp(const CSLoginAnnouncementRsp& from);
  
  inline CSLoginAnnouncementRsp& operator=(const CSLoginAnnouncementRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSLoginAnnouncementRsp& default_instance();
  
  void Swap(CSLoginAnnouncementRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSLoginAnnouncementRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSLoginAnnouncementRsp& from);
  void MergeFrom(const CSLoginAnnouncementRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .Announcement content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::Announcement& content() const;
  inline ::Announcement* mutable_content();
  inline ::Announcement* release_content();
  
  // @@protoc_insertion_point(class_scope:CSLoginAnnouncementRsp)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::Announcement* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSLoginAnnouncementRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementPreRsp : public ::google::protobuf::Message {
 public:
  CSAnnouncementPreRsp();
  virtual ~CSAnnouncementPreRsp();
  
  CSAnnouncementPreRsp(const CSAnnouncementPreRsp& from);
  
  inline CSAnnouncementPreRsp& operator=(const CSAnnouncementPreRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementPreRsp& default_instance();
  
  void Swap(CSAnnouncementPreRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementPreRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementPreRsp& from);
  void MergeFrom(const CSAnnouncementPreRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementPreRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementPreRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementReq : public ::google::protobuf::Message {
 public:
  CSAnnouncementReq();
  virtual ~CSAnnouncementReq();
  
  CSAnnouncementReq(const CSAnnouncementReq& from);
  
  inline CSAnnouncementReq& operator=(const CSAnnouncementReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementReq& default_instance();
  
  void Swap(CSAnnouncementReq* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementReq& from);
  void MergeFrom(const CSAnnouncementReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementReq)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementReq* default_instance_;
};
// -------------------------------------------------------------------

class CSAnnouncementRsp : public ::google::protobuf::Message {
 public:
  CSAnnouncementRsp();
  virtual ~CSAnnouncementRsp();
  
  CSAnnouncementRsp(const CSAnnouncementRsp& from);
  
  inline CSAnnouncementRsp& operator=(const CSAnnouncementRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSAnnouncementRsp& default_instance();
  
  void Swap(CSAnnouncementRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSAnnouncementRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSAnnouncementRsp& from);
  void MergeFrom(const CSAnnouncementRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .Announcement content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::Announcement& content(int index) const;
  inline ::Announcement* mutable_content(int index);
  inline ::Announcement* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::Announcement >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::Announcement >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:CSAnnouncementRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::Announcement > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSAnnouncementRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMaAdvertisingRsp : public ::google::protobuf::Message {
 public:
  CSMaAdvertisingRsp();
  virtual ~CSMaAdvertisingRsp();
  
  CSMaAdvertisingRsp(const CSMaAdvertisingRsp& from);
  
  inline CSMaAdvertisingRsp& operator=(const CSMaAdvertisingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMaAdvertisingRsp& default_instance();
  
  void Swap(CSMaAdvertisingRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSMaAdvertisingRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMaAdvertisingRsp& from);
  void MergeFrom(const CSMaAdvertisingRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .CSMaStyle content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::CSMaStyle& content(int index) const;
  inline ::CSMaStyle* mutable_content(int index);
  inline ::CSMaStyle* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMaStyle >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMaStyle >*
      mutable_content();
  
  // required uint32 opt = 2;
  inline bool has_opt() const;
  inline void clear_opt();
  static const int kOptFieldNumber = 2;
  inline ::google::protobuf::uint32 opt() const;
  inline void set_opt(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMaAdvertisingRsp)
 private:
  inline void set_has_opt();
  inline void clear_has_opt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSMaStyle > content_;
  ::google::protobuf::uint32 opt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMaAdvertisingRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSStyle : public ::google::protobuf::Message {
 public:
  CSStyle();
  virtual ~CSStyle();
  
  CSStyle(const CSStyle& from);
  
  inline CSStyle& operator=(const CSStyle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSStyle& default_instance();
  
  void Swap(CSStyle* other);
  
  // implements Message ----------------------------------------------
  
  CSStyle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSStyle& from);
  void MergeFrom(const CSStyle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::uint32 red() const;
  inline void set_red(::google::protobuf::uint32 value);
  
  // required uint32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::uint32 green() const;
  inline void set_green(::google::protobuf::uint32 value);
  
  // required uint32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::uint32 blue() const;
  inline void set_blue(::google::protobuf::uint32 value);
  
  // required bytes text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // required uint32 fontsize = 5;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontsizeFieldNumber = 5;
  inline ::google::protobuf::uint32 fontsize() const;
  inline void set_fontsize(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSStyle)
 private:
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_green();
  inline void clear_has_green();
  inline void set_has_blue();
  inline void clear_has_blue();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::std::string* text_;
  ::google::protobuf::uint32 blue_;
  ::google::protobuf::uint32 fontsize_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSStyle* default_instance_;
};
// -------------------------------------------------------------------

class CSMaStyle : public ::google::protobuf::Message {
 public:
  CSMaStyle();
  virtual ~CSMaStyle();
  
  CSMaStyle(const CSMaStyle& from);
  
  inline CSMaStyle& operator=(const CSMaStyle& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMaStyle& default_instance();
  
  void Swap(CSMaStyle* other);
  
  // implements Message ----------------------------------------------
  
  CSMaStyle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMaStyle& from);
  void MergeFrom(const CSMaStyle& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 red = 1;
  inline bool has_red() const;
  inline void clear_red();
  static const int kRedFieldNumber = 1;
  inline ::google::protobuf::uint32 red() const;
  inline void set_red(::google::protobuf::uint32 value);
  
  // required uint32 green = 2;
  inline bool has_green() const;
  inline void clear_green();
  static const int kGreenFieldNumber = 2;
  inline ::google::protobuf::uint32 green() const;
  inline void set_green(::google::protobuf::uint32 value);
  
  // required uint32 blue = 3;
  inline bool has_blue() const;
  inline void clear_blue();
  static const int kBlueFieldNumber = 3;
  inline ::google::protobuf::uint32 blue() const;
  inline void set_blue(::google::protobuf::uint32 value);
  
  // required bytes text = 4;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 4;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const void* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:CSMaStyle)
 private:
  inline void set_has_red();
  inline void clear_has_red();
  inline void set_has_green();
  inline void clear_has_green();
  inline void set_has_blue();
  inline void clear_has_blue();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 red_;
  ::google::protobuf::uint32 green_;
  ::std::string* text_;
  ::google::protobuf::uint32 blue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMaStyle* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyRewardToOtherRsp : public ::google::protobuf::Message {
 public:
  CSNotifyRewardToOtherRsp();
  virtual ~CSNotifyRewardToOtherRsp();
  
  CSNotifyRewardToOtherRsp(const CSNotifyRewardToOtherRsp& from);
  
  inline CSNotifyRewardToOtherRsp& operator=(const CSNotifyRewardToOtherRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyRewardToOtherRsp& default_instance();
  
  void Swap(CSNotifyRewardToOtherRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyRewardToOtherRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyRewardToOtherRsp& from);
  void MergeFrom(const CSNotifyRewardToOtherRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes player_name = 1;
  inline bool has_player_name() const;
  inline void clear_player_name();
  static const int kPlayerNameFieldNumber = 1;
  inline const ::std::string& player_name() const;
  inline void set_player_name(const ::std::string& value);
  inline void set_player_name(const char* value);
  inline void set_player_name(const void* value, size_t size);
  inline ::std::string* mutable_player_name();
  inline ::std::string* release_player_name();
  
  // required .CSReward reward = 2;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 2;
  inline const ::CSReward& reward() const;
  inline ::CSReward* mutable_reward();
  inline ::CSReward* release_reward();
  
  // @@protoc_insertion_point(class_scope:CSNotifyRewardToOtherRsp)
 private:
  inline void set_has_player_name();
  inline void clear_has_player_name();
  inline void set_has_reward();
  inline void clear_has_reward();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* player_name_;
  ::CSReward* reward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyRewardToOtherRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSMailInfo_Item_AM_t : public ::google::protobuf::Message {
 public:
  CSMailInfo_Item_AM_t();
  virtual ~CSMailInfo_Item_AM_t();
  
  CSMailInfo_Item_AM_t(const CSMailInfo_Item_AM_t& from);
  
  inline CSMailInfo_Item_AM_t& operator=(const CSMailInfo_Item_AM_t& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailInfo_Item_AM_t& default_instance();
  
  void Swap(CSMailInfo_Item_AM_t* other);
  
  // implements Message ----------------------------------------------
  
  CSMailInfo_Item_AM_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailInfo_Item_AM_t& from);
  void MergeFrom(const CSMailInfo_Item_AM_t& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 item_id() const;
  inline void set_item_id(::google::protobuf::uint32 value);
  
  // required uint32 item_num = 2;
  inline bool has_item_num() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  inline ::google::protobuf::uint32 item_num() const;
  inline void set_item_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMailInfo.Item_AM_t)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_num();
  inline void clear_has_item_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailInfo_Item_AM_t* default_instance_;
};
// -------------------------------------------------------------------

class CSMailInfo : public ::google::protobuf::Message {
 public:
  CSMailInfo();
  virtual ~CSMailInfo();
  
  CSMailInfo(const CSMailInfo& from);
  
  inline CSMailInfo& operator=(const CSMailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMailInfo& default_instance();
  
  void Swap(CSMailInfo* other);
  
  // implements Message ----------------------------------------------
  
  CSMailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMailInfo& from);
  void MergeFrom(const CSMailInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CSMailInfo_Item_AM_t Item_AM_t;
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required bytes title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // required bytes from = 4;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 4;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const void* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // required bytes content = 5;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 5;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // repeated .CSMailInfo.Item_AM_t items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::CSMailInfo_Item_AM_t& items(int index) const;
  inline ::CSMailInfo_Item_AM_t* mutable_items(int index);
  inline ::CSMailInfo_Item_AM_t* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo_Item_AM_t >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo_Item_AM_t >*
      mutable_items();
  
  // required uint32 mail_status = 7;
  inline bool has_mail_status() const;
  inline void clear_mail_status();
  static const int kMailStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 mail_status() const;
  inline void set_mail_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSMailInfo)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_mail_status();
  inline void clear_has_mail_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::std::string* title_;
  ::std::string* from_;
  ::std::string* content_;
  ::google::protobuf::RepeatedPtrField< ::CSMailInfo_Item_AM_t > items_;
  ::google::protobuf::uint32 mail_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSMailInfo* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailListReq : public ::google::protobuf::Message {
 public:
  CSGetMailListReq();
  virtual ~CSGetMailListReq();
  
  CSGetMailListReq(const CSGetMailListReq& from);
  
  inline CSGetMailListReq& operator=(const CSGetMailListReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailListReq& default_instance();
  
  void Swap(CSGetMailListReq* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailListReq& from);
  void MergeFrom(const CSGetMailListReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 page_num = 1;
  inline bool has_page_num() const;
  inline void clear_page_num();
  static const int kPageNumFieldNumber = 1;
  inline ::google::protobuf::uint32 page_num() const;
  inline void set_page_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSGetMailListReq)
 private:
  inline void set_has_page_num();
  inline void clear_has_page_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 page_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailListReq* default_instance_;
};
// -------------------------------------------------------------------

class CSGetMailListRsp : public ::google::protobuf::Message {
 public:
  CSGetMailListRsp();
  virtual ~CSGetMailListRsp();
  
  CSGetMailListRsp(const CSGetMailListRsp& from);
  
  inline CSGetMailListRsp& operator=(const CSGetMailListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSGetMailListRsp& default_instance();
  
  void Swap(CSGetMailListRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSGetMailListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSGetMailListRsp& from);
  void MergeFrom(const CSGetMailListRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 page_num = 1;
  inline bool has_page_num() const;
  inline void clear_page_num();
  static const int kPageNumFieldNumber = 1;
  inline ::google::protobuf::uint32 page_num() const;
  inline void set_page_num(::google::protobuf::uint32 value);
  
  // repeated .CSMailInfo mails = 2;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 2;
  inline const ::CSMailInfo& mails(int index) const;
  inline ::CSMailInfo* mutable_mails(int index);
  inline ::CSMailInfo* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo >*
      mutable_mails();
  
  // @@protoc_insertion_point(class_scope:CSGetMailListRsp)
 private:
  inline void set_has_page_num();
  inline void clear_has_page_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::CSMailInfo > mails_;
  ::google::protobuf::uint32 page_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSGetMailListRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMailStatusReq : public ::google::protobuf::Message {
 public:
  CSSetMailStatusReq();
  virtual ~CSSetMailStatusReq();
  
  CSSetMailStatusReq(const CSSetMailStatusReq& from);
  
  inline CSSetMailStatusReq& operator=(const CSSetMailStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMailStatusReq& default_instance();
  
  void Swap(CSSetMailStatusReq* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMailStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMailStatusReq& from);
  void MergeFrom(const CSSetMailStatusReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required uint32 new_status = 3;
  inline bool has_new_status() const;
  inline void clear_new_status();
  static const int kNewStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 new_status() const;
  inline void set_new_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMailStatusReq)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_new_status();
  inline void clear_has_new_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::google::protobuf::uint32 new_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMailStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class CSSetMailStatusRsp : public ::google::protobuf::Message {
 public:
  CSSetMailStatusRsp();
  virtual ~CSSetMailStatusRsp();
  
  CSSetMailStatusRsp(const CSSetMailStatusRsp& from);
  
  inline CSSetMailStatusRsp& operator=(const CSSetMailStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSSetMailStatusRsp& default_instance();
  
  void Swap(CSSetMailStatusRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSSetMailStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSSetMailStatusRsp& from);
  void MergeFrom(const CSSetMailStatusRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mail_id_high = 1;
  inline bool has_mail_id_high() const;
  inline void clear_mail_id_high();
  static const int kMailIdHighFieldNumber = 1;
  inline ::google::protobuf::uint32 mail_id_high() const;
  inline void set_mail_id_high(::google::protobuf::uint32 value);
  
  // required uint32 mail_id_low = 2;
  inline bool has_mail_id_low() const;
  inline void clear_mail_id_low();
  static const int kMailIdLowFieldNumber = 2;
  inline ::google::protobuf::uint32 mail_id_low() const;
  inline void set_mail_id_low(::google::protobuf::uint32 value);
  
  // required uint32 mail_status = 3;
  inline bool has_mail_status() const;
  inline void clear_mail_status();
  static const int kMailStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 mail_status() const;
  inline void set_mail_status(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:CSSetMailStatusRsp)
 private:
  inline void set_has_mail_id_high();
  inline void clear_has_mail_id_high();
  inline void set_has_mail_id_low();
  inline void clear_has_mail_id_low();
  inline void set_has_mail_status();
  inline void clear_has_mail_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 mail_id_high_;
  ::google::protobuf::uint32 mail_id_low_;
  ::google::protobuf::uint32 mail_status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSSetMailStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class CSNotifyHasNewMailRsp : public ::google::protobuf::Message {
 public:
  CSNotifyHasNewMailRsp();
  virtual ~CSNotifyHasNewMailRsp();
  
  CSNotifyHasNewMailRsp(const CSNotifyHasNewMailRsp& from);
  
  inline CSNotifyHasNewMailRsp& operator=(const CSNotifyHasNewMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CSNotifyHasNewMailRsp& default_instance();
  
  void Swap(CSNotifyHasNewMailRsp* other);
  
  // implements Message ----------------------------------------------
  
  CSNotifyHasNewMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSNotifyHasNewMailRsp& from);
  void MergeFrom(const CSNotifyHasNewMailRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:CSNotifyHasNewMailRsp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_cs_5fcore_2eproto();
  friend void protobuf_AssignDesc_cs_5fcore_2eproto();
  friend void protobuf_ShutdownFile_cs_5fcore_2eproto();
  
  void InitAsDefaultInstance();
  static CSNotifyHasNewMailRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// BasicUserBattleInfo

// required uint32 physical_attack = 1;
inline bool BasicUserBattleInfo::has_physical_attack() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_attack() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserBattleInfo::clear_has_physical_attack() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserBattleInfo::clear_physical_attack() {
  physical_attack_ = 0u;
  clear_has_physical_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_attack() const {
  return physical_attack_;
}
inline void BasicUserBattleInfo::set_physical_attack(::google::protobuf::uint32 value) {
  set_has_physical_attack();
  physical_attack_ = value;
}

// required uint32 magic_attack = 2;
inline bool BasicUserBattleInfo::has_magic_attack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_attack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserBattleInfo::clear_has_magic_attack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserBattleInfo::clear_magic_attack() {
  magic_attack_ = 0u;
  clear_has_magic_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_attack() const {
  return magic_attack_;
}
inline void BasicUserBattleInfo::set_magic_attack(::google::protobuf::uint32 value) {
  set_has_magic_attack();
  magic_attack_ = value;
}

// required uint32 skill_attack = 3;
inline bool BasicUserBattleInfo::has_skill_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserBattleInfo::clear_has_skill_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserBattleInfo::clear_skill_attack() {
  skill_attack_ = 0u;
  clear_has_skill_attack();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_attack() const {
  return skill_attack_;
}
inline void BasicUserBattleInfo::set_skill_attack(::google::protobuf::uint32 value) {
  set_has_skill_attack();
  skill_attack_ = value;
}

// required uint32 physical_defence = 4;
inline bool BasicUserBattleInfo::has_physical_defence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserBattleInfo::set_has_physical_defence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserBattleInfo::clear_has_physical_defence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserBattleInfo::clear_physical_defence() {
  physical_defence_ = 0u;
  clear_has_physical_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::physical_defence() const {
  return physical_defence_;
}
inline void BasicUserBattleInfo::set_physical_defence(::google::protobuf::uint32 value) {
  set_has_physical_defence();
  physical_defence_ = value;
}

// required uint32 magic_defence = 5;
inline bool BasicUserBattleInfo::has_magic_defence() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserBattleInfo::set_has_magic_defence() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserBattleInfo::clear_has_magic_defence() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserBattleInfo::clear_magic_defence() {
  magic_defence_ = 0u;
  clear_has_magic_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::magic_defence() const {
  return magic_defence_;
}
inline void BasicUserBattleInfo::set_magic_defence(::google::protobuf::uint32 value) {
  set_has_magic_defence();
  magic_defence_ = value;
}

// required uint32 skill_defence = 6;
inline bool BasicUserBattleInfo::has_skill_defence() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserBattleInfo::set_has_skill_defence() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserBattleInfo::clear_has_skill_defence() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserBattleInfo::clear_skill_defence() {
  skill_defence_ = 0u;
  clear_has_skill_defence();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::skill_defence() const {
  return skill_defence_;
}
inline void BasicUserBattleInfo::set_skill_defence(::google::protobuf::uint32 value) {
  set_has_skill_defence();
  skill_defence_ = value;
}

// required uint32 health_point = 7;
inline bool BasicUserBattleInfo::has_health_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserBattleInfo::set_has_health_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserBattleInfo::clear_has_health_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserBattleInfo::clear_health_point() {
  health_point_ = 0u;
  clear_has_health_point();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::health_point() const {
  return health_point_;
}
inline void BasicUserBattleInfo::set_health_point(::google::protobuf::uint32 value) {
  set_has_health_point();
  health_point_ = value;
}

// required uint32 accurate = 8;
inline bool BasicUserBattleInfo::has_accurate() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserBattleInfo::set_has_accurate() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserBattleInfo::clear_has_accurate() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserBattleInfo::clear_accurate() {
  accurate_ = 0u;
  clear_has_accurate();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::accurate() const {
  return accurate_;
}
inline void BasicUserBattleInfo::set_accurate(::google::protobuf::uint32 value) {
  set_has_accurate();
  accurate_ = value;
}

// required uint32 dodge = 9;
inline bool BasicUserBattleInfo::has_dodge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserBattleInfo::set_has_dodge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserBattleInfo::clear_has_dodge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserBattleInfo::clear_dodge() {
  dodge_ = 0u;
  clear_has_dodge();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::dodge() const {
  return dodge_;
}
inline void BasicUserBattleInfo::set_dodge(::google::protobuf::uint32 value) {
  set_has_dodge();
  dodge_ = value;
}

// required uint32 wreck = 10;
inline bool BasicUserBattleInfo::has_wreck() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserBattleInfo::set_has_wreck() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserBattleInfo::clear_has_wreck() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserBattleInfo::clear_wreck() {
  wreck_ = 0u;
  clear_has_wreck();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::wreck() const {
  return wreck_;
}
inline void BasicUserBattleInfo::set_wreck(::google::protobuf::uint32 value) {
  set_has_wreck();
  wreck_ = value;
}

// required uint32 parry = 11;
inline bool BasicUserBattleInfo::has_parry() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserBattleInfo::set_has_parry() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserBattleInfo::clear_has_parry() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserBattleInfo::clear_parry() {
  parry_ = 0u;
  clear_has_parry();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::parry() const {
  return parry_;
}
inline void BasicUserBattleInfo::set_parry(::google::protobuf::uint32 value) {
  set_has_parry();
  parry_ = value;
}

// required uint32 critical_strike = 12;
inline bool BasicUserBattleInfo::has_critical_strike() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicUserBattleInfo::set_has_critical_strike() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicUserBattleInfo::clear_has_critical_strike() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicUserBattleInfo::clear_critical_strike() {
  critical_strike_ = 0u;
  clear_has_critical_strike();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::critical_strike() const {
  return critical_strike_;
}
inline void BasicUserBattleInfo::set_critical_strike(::google::protobuf::uint32 value) {
  set_has_critical_strike();
  critical_strike_ = value;
}

// required uint32 tenacity = 13;
inline bool BasicUserBattleInfo::has_tenacity() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicUserBattleInfo::set_has_tenacity() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicUserBattleInfo::clear_has_tenacity() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicUserBattleInfo::clear_tenacity() {
  tenacity_ = 0u;
  clear_has_tenacity();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::tenacity() const {
  return tenacity_;
}
inline void BasicUserBattleInfo::set_tenacity(::google::protobuf::uint32 value) {
  set_has_tenacity();
  tenacity_ = value;
}

// required uint32 slay = 14;
inline bool BasicUserBattleInfo::has_slay() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BasicUserBattleInfo::set_has_slay() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BasicUserBattleInfo::clear_has_slay() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BasicUserBattleInfo::clear_slay() {
  slay_ = 0u;
  clear_has_slay();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::slay() const {
  return slay_;
}
inline void BasicUserBattleInfo::set_slay(::google::protobuf::uint32 value) {
  set_has_slay();
  slay_ = value;
}

// required uint32 courage = 15;
inline bool BasicUserBattleInfo::has_courage() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BasicUserBattleInfo::set_has_courage() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BasicUserBattleInfo::clear_has_courage() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BasicUserBattleInfo::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::courage() const {
  return courage_;
}
inline void BasicUserBattleInfo::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 16;
inline bool BasicUserBattleInfo::has_charm() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BasicUserBattleInfo::set_has_charm() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BasicUserBattleInfo::clear_has_charm() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BasicUserBattleInfo::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::charm() const {
  return charm_;
}
inline void BasicUserBattleInfo::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 17;
inline bool BasicUserBattleInfo::has_trick() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BasicUserBattleInfo::set_has_trick() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BasicUserBattleInfo::clear_has_trick() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BasicUserBattleInfo::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::trick() const {
  return trick_;
}
inline void BasicUserBattleInfo::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// required uint32 speed = 18;
inline bool BasicUserBattleInfo::has_speed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BasicUserBattleInfo::set_has_speed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BasicUserBattleInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BasicUserBattleInfo::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::speed() const {
  return speed_;
}
inline void BasicUserBattleInfo::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
}

// required uint32 proficiency = 19;
inline bool BasicUserBattleInfo::has_proficiency() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BasicUserBattleInfo::set_has_proficiency() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BasicUserBattleInfo::clear_has_proficiency() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BasicUserBattleInfo::clear_proficiency() {
  proficiency_ = 0u;
  clear_has_proficiency();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::proficiency() const {
  return proficiency_;
}
inline void BasicUserBattleInfo::set_proficiency(::google::protobuf::uint32 value) {
  set_has_proficiency();
  proficiency_ = value;
}

// optional uint32 current_hp = 20;
inline bool BasicUserBattleInfo::has_current_hp() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BasicUserBattleInfo::set_has_current_hp() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BasicUserBattleInfo::clear_has_current_hp() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BasicUserBattleInfo::clear_current_hp() {
  current_hp_ = 0u;
  clear_has_current_hp();
}
inline ::google::protobuf::uint32 BasicUserBattleInfo::current_hp() const {
  return current_hp_;
}
inline void BasicUserBattleInfo::set_current_hp(::google::protobuf::uint32 value) {
  set_has_current_hp();
  current_hp_ = value;
}

// -------------------------------------------------------------------

// UserSkillPart

// required uint32 part = 1;
inline bool UserSkillPart::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillPart::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillPart::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillPart::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 UserSkillPart::part() const {
  return part_;
}
inline void UserSkillPart::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required .BasicUserBattleInfo exp_battle_info = 2;
inline bool UserSkillPart::has_exp_battle_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillPart::set_has_exp_battle_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillPart::clear_has_exp_battle_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillPart::clear_exp_battle_info() {
  if (exp_battle_info_ != NULL) exp_battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_exp_battle_info();
}
inline const ::BasicUserBattleInfo& UserSkillPart::exp_battle_info() const {
  return exp_battle_info_ != NULL ? *exp_battle_info_ : *default_instance_->exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::mutable_exp_battle_info() {
  set_has_exp_battle_info();
  if (exp_battle_info_ == NULL) exp_battle_info_ = new ::BasicUserBattleInfo;
  return exp_battle_info_;
}
inline ::BasicUserBattleInfo* UserSkillPart::release_exp_battle_info() {
  clear_has_exp_battle_info();
  ::BasicUserBattleInfo* temp = exp_battle_info_;
  exp_battle_info_ = NULL;
  return temp;
}

// required float continue_time = 5;
inline bool UserSkillPart::has_continue_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillPart::set_has_continue_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillPart::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillPart::clear_continue_time() {
  continue_time_ = 0;
  clear_has_continue_time();
}
inline float UserSkillPart::continue_time() const {
  return continue_time_;
}
inline void UserSkillPart::set_continue_time(float value) {
  set_has_continue_time();
  continue_time_ = value;
}

// required uint32 can_attack_number = 6;
inline bool UserSkillPart::has_can_attack_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillPart::set_has_can_attack_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillPart::clear_has_can_attack_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillPart::clear_can_attack_number() {
  can_attack_number_ = 0u;
  clear_has_can_attack_number();
}
inline ::google::protobuf::uint32 UserSkillPart::can_attack_number() const {
  return can_attack_number_;
}
inline void UserSkillPart::set_can_attack_number(::google::protobuf::uint32 value) {
  set_has_can_attack_number();
  can_attack_number_ = value;
}

// required uint32 hurt = 7;
inline bool UserSkillPart::has_hurt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillPart::set_has_hurt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillPart::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillPart::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 UserSkillPart::hurt() const {
  return hurt_;
}
inline void UserSkillPart::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
}

// -------------------------------------------------------------------

// UserSkillInfo

// required uint32 skill_id = 1;
inline bool UserSkillInfo::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSkillInfo::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSkillInfo::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSkillInfo::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_id() const {
  return skill_id_;
}
inline void UserSkillInfo::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 level = 2;
inline bool UserSkillInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSkillInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSkillInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSkillInfo::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::level() const {
  return level_;
}
inline void UserSkillInfo::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 part = 3;
inline bool UserSkillInfo::has_part() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserSkillInfo::set_has_part() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserSkillInfo::clear_has_part() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserSkillInfo::clear_part() {
  part_ = 0u;
  clear_has_part();
}
inline ::google::protobuf::uint32 UserSkillInfo::part() const {
  return part_;
}
inline void UserSkillInfo::set_part(::google::protobuf::uint32 value) {
  set_has_part();
  part_ = value;
}

// required uint32 skill_level = 4;
inline bool UserSkillInfo::has_skill_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserSkillInfo::set_has_skill_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserSkillInfo::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserSkillInfo::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::skill_level() const {
  return skill_level_;
}
inline void UserSkillInfo::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// required uint32 money = 5;
inline bool UserSkillInfo::has_money() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UserSkillInfo::set_has_money() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UserSkillInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UserSkillInfo::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 UserSkillInfo::money() const {
  return money_;
}
inline void UserSkillInfo::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// required uint32 exploit = 6;
inline bool UserSkillInfo::has_exploit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UserSkillInfo::set_has_exploit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UserSkillInfo::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UserSkillInfo::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 UserSkillInfo::exploit() const {
  return exploit_;
}
inline void UserSkillInfo::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// required float own_cd = 7;
inline bool UserSkillInfo::has_own_cd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void UserSkillInfo::set_has_own_cd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void UserSkillInfo::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void UserSkillInfo::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline float UserSkillInfo::own_cd() const {
  return own_cd_;
}
inline void UserSkillInfo::set_own_cd(float value) {
  set_has_own_cd();
  own_cd_ = value;
}

// required float share_cd = 8;
inline bool UserSkillInfo::has_share_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void UserSkillInfo::set_has_share_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void UserSkillInfo::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void UserSkillInfo::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline float UserSkillInfo::share_cd() const {
  return share_cd_;
}
inline void UserSkillInfo::set_share_cd(float value) {
  set_has_share_cd();
  share_cd_ = value;
}

// repeated .UserSkillPart parts = 9;
inline int UserSkillInfo::parts_size() const {
  return parts_.size();
}
inline void UserSkillInfo::clear_parts() {
  parts_.Clear();
}
inline const ::UserSkillPart& UserSkillInfo::parts(int index) const {
  return parts_.Get(index);
}
inline ::UserSkillPart* UserSkillInfo::mutable_parts(int index) {
  return parts_.Mutable(index);
}
inline ::UserSkillPart* UserSkillInfo::add_parts() {
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillPart >&
UserSkillInfo::parts() const {
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillPart >*
UserSkillInfo::mutable_parts() {
  return &parts_;
}

// required uint32 max_level = 10;
inline bool UserSkillInfo::has_max_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void UserSkillInfo::set_has_max_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void UserSkillInfo::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void UserSkillInfo::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 UserSkillInfo::max_level() const {
  return max_level_;
}
inline void UserSkillInfo::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// -------------------------------------------------------------------

// BasicUserInfo

// required uint32 uid = 1;
inline bool BasicUserInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicUserInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicUserInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicUserInfo::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 BasicUserInfo::uid() const {
  return uid_;
}
inline void BasicUserInfo::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool BasicUserInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicUserInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicUserInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicUserInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 BasicUserInfo::reg_time() const {
  return reg_time_;
}
inline void BasicUserInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool BasicUserInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicUserInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicUserInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicUserInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 BasicUserInfo::channel_id() const {
  return channel_id_;
}
inline void BasicUserInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool BasicUserInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicUserInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicUserInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicUserInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BasicUserInfo::name() const {
  return *name_;
}
inline void BasicUserInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BasicUserInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BasicUserInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BasicUserInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 type = 5;
inline bool BasicUserInfo::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicUserInfo::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicUserInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicUserInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BasicUserInfo::type() const {
  return type_;
}
inline void BasicUserInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 gender = 6;
inline bool BasicUserInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicUserInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicUserInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicUserInfo::clear_gender() {
  gender_ = 0u;
  clear_has_gender();
}
inline ::google::protobuf::uint32 BasicUserInfo::gender() const {
  return gender_;
}
inline void BasicUserInfo::set_gender(::google::protobuf::uint32 value) {
  set_has_gender();
  gender_ = value;
}

// required uint32 lv = 7;
inline bool BasicUserInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicUserInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicUserInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicUserInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::lv() const {
  return lv_;
}
inline void BasicUserInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 xpos = 8;
inline bool BasicUserInfo::has_xpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicUserInfo::set_has_xpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicUserInfo::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicUserInfo::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 BasicUserInfo::xpos() const {
  return xpos_;
}
inline void BasicUserInfo::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 9;
inline bool BasicUserInfo::has_ypos() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BasicUserInfo::set_has_ypos() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BasicUserInfo::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BasicUserInfo::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 BasicUserInfo::ypos() const {
  return ypos_;
}
inline void BasicUserInfo::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 10;
inline bool BasicUserInfo::has_orient() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BasicUserInfo::set_has_orient() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BasicUserInfo::clear_has_orient() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BasicUserInfo::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 BasicUserInfo::orient() const {
  return orient_;
}
inline void BasicUserInfo::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// optional uint32 battle_side = 11;
inline bool BasicUserInfo::has_battle_side() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BasicUserInfo::set_has_battle_side() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BasicUserInfo::clear_has_battle_side() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BasicUserInfo::clear_battle_side() {
  battle_side_ = 0u;
  clear_has_battle_side();
}
inline ::google::protobuf::uint32 BasicUserInfo::battle_side() const {
  return battle_side_;
}
inline void BasicUserInfo::set_battle_side(::google::protobuf::uint32 value) {
  set_has_battle_side();
  battle_side_ = value;
}

// optional .BasicUserBattleInfo battle_info = 12;
inline bool BasicUserInfo::has_battle_info() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BasicUserInfo::set_has_battle_info() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BasicUserInfo::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BasicUserInfo::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& BasicUserInfo::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* BasicUserInfo::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// required uint32 next_lv = 13;
inline bool BasicUserInfo::has_next_lv() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BasicUserInfo::set_has_next_lv() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BasicUserInfo::clear_has_next_lv() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BasicUserInfo::clear_next_lv() {
  next_lv_ = 0u;
  clear_has_next_lv();
}
inline ::google::protobuf::uint32 BasicUserInfo::next_lv() const {
  return next_lv_;
}
inline void BasicUserInfo::set_next_lv(::google::protobuf::uint32 value) {
  set_has_next_lv();
  next_lv_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapReq

// required uint32 mapid = 1;
inline bool CSEnterMapReq::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapReq::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapReq::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapReq::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapReq::mapid() const {
  return mapid_;
}
inline void CSEnterMapReq::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required uint32 xpos = 2;
inline bool CSEnterMapReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::xpos() const {
  return xpos_;
}
inline void CSEnterMapReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 3;
inline bool CSEnterMapReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEnterMapReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEnterMapReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEnterMapReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSEnterMapReq::ypos() const {
  return ypos_;
}
inline void CSEnterMapReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 orient = 4;
inline bool CSEnterMapReq::has_orient() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEnterMapReq::set_has_orient() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEnterMapReq::clear_has_orient() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEnterMapReq::clear_orient() {
  orient_ = 0u;
  clear_has_orient();
}
inline ::google::protobuf::uint32 CSEnterMapReq::orient() const {
  return orient_;
}
inline void CSEnterMapReq::set_orient(::google::protobuf::uint32 value) {
  set_has_orient();
  orient_ = value;
}

// -------------------------------------------------------------------

// CSEnterMapRsp

// required uint32 mapid = 1;
inline bool CSEnterMapRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEnterMapRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEnterMapRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEnterMapRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSEnterMapRsp::mapid() const {
  return mapid_;
}
inline void CSEnterMapRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// required .BasicUserInfo userinfo = 2;
inline bool CSEnterMapRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEnterMapRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEnterMapRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEnterMapRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSEnterMapRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSEnterMapRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSLeaveMapRsp

// required uint32 uid = 1;
inline bool CSLeaveMapRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLeaveMapRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLeaveMapRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLeaveMapRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::uid() const {
  return uid_;
}
inline void CSLeaveMapRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSLeaveMapRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSLeaveMapRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSLeaveMapRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSLeaveMapRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::reg_time() const {
  return reg_time_;
}
inline void CSLeaveMapRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSLeaveMapRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSLeaveMapRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSLeaveMapRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSLeaveMapRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSLeaveMapRsp::channel_id() const {
  return channel_id_;
}
inline void CSLeaveMapRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetMapUsersReq

// -------------------------------------------------------------------

// CSGetMapUsersRsp

// repeated .BasicUserInfo userinfo = 1;
inline int CSGetMapUsersRsp::userinfo_size() const {
  return userinfo_.size();
}
inline void CSGetMapUsersRsp::clear_userinfo() {
  userinfo_.Clear();
}
inline const ::BasicUserInfo& CSGetMapUsersRsp::userinfo(int index) const {
  return userinfo_.Get(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::mutable_userinfo(int index) {
  return userinfo_.Mutable(index);
}
inline ::BasicUserInfo* CSGetMapUsersRsp::add_userinfo() {
  return userinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >&
CSGetMapUsersRsp::userinfo() const {
  return userinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::BasicUserInfo >*
CSGetMapUsersRsp::mutable_userinfo() {
  return &userinfo_;
}

// -------------------------------------------------------------------

// CSGetUserSkillReq

// required uint32 userid = 1;
inline bool CSGetUserSkillReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::userid() const {
  return userid_;
}
inline void CSGetUserSkillReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserSkillReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserSkillReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserSkillReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserSkillReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserSkillReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserSkillReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserSkillReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserSkillReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserSkillReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserSkillReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserSkillReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserSkillRsp

// required uint32 userid = 1;
inline bool CSGetUserSkillRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserSkillRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserSkillRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserSkillRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::userid() const {
  return userid_;
}
inline void CSGetUserSkillRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserSkillRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserSkillRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserSkillRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserSkillRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserSkillRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserSkillRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserSkillRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserSkillRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserSkillRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserSkillRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .UserSkillInfo userskills = 4;
inline int CSGetUserSkillRsp::userskills_size() const {
  return userskills_.size();
}
inline void CSGetUserSkillRsp::clear_userskills() {
  userskills_.Clear();
}
inline const ::UserSkillInfo& CSGetUserSkillRsp::userskills(int index) const {
  return userskills_.Get(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::mutable_userskills(int index) {
  return userskills_.Mutable(index);
}
inline ::UserSkillInfo* CSGetUserSkillRsp::add_userskills() {
  return userskills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >&
CSGetUserSkillRsp::userskills() const {
  return userskills_;
}
inline ::google::protobuf::RepeatedPtrField< ::UserSkillInfo >*
CSGetUserSkillRsp::mutable_userskills() {
  return &userskills_;
}

// repeated uint32 ready = 5;
inline int CSGetUserSkillRsp::ready_size() const {
  return ready_.size();
}
inline void CSGetUserSkillRsp::clear_ready() {
  ready_.Clear();
}
inline ::google::protobuf::uint32 CSGetUserSkillRsp::ready(int index) const {
  return ready_.Get(index);
}
inline void CSGetUserSkillRsp::set_ready(int index, ::google::protobuf::uint32 value) {
  ready_.Set(index, value);
}
inline void CSGetUserSkillRsp::add_ready(::google::protobuf::uint32 value) {
  ready_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetUserSkillRsp::ready() const {
  return ready_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetUserSkillRsp::mutable_ready() {
  return &ready_;
}

// -------------------------------------------------------------------

// CSGetUserInfoReq

// required uint32 userid = 1;
inline bool CSGetUserInfoReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::userid() const {
  return userid_;
}
inline void CSGetUserInfoReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserInfoReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserInfoReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserInfoReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserInfoReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserInfoReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserInfoReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserInfoReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserInfoReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserInfoReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserInfoReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserInfoReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserInfoRsp

// required uint32 userid = 1;
inline bool CSGetUserInfoRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserInfoRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserInfoRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::userid() const {
  return userid_;
}
inline void CSGetUserInfoRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserInfoRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserInfoRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserInfoRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserInfoRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserInfoRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserInfoRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserInfoRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserInfoRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserInfoRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserInfoRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserInfoRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .BasicUserInfo userinfo = 4;
inline bool CSGetUserInfoRsp::has_userinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetUserInfoRsp::set_has_userinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetUserInfoRsp::clear_has_userinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetUserInfoRsp::clear_userinfo() {
  if (userinfo_ != NULL) userinfo_->::BasicUserInfo::Clear();
  clear_has_userinfo();
}
inline const ::BasicUserInfo& CSGetUserInfoRsp::userinfo() const {
  return userinfo_ != NULL ? *userinfo_ : *default_instance_->userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::mutable_userinfo() {
  set_has_userinfo();
  if (userinfo_ == NULL) userinfo_ = new ::BasicUserInfo;
  return userinfo_;
}
inline ::BasicUserInfo* CSGetUserInfoRsp::release_userinfo() {
  clear_has_userinfo();
  ::BasicUserInfo* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAddUserSkillReq

// required uint32 skill_id = 1;
inline bool CSAddUserSkillReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillReq::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSAddUserSkillRsp

// required uint32 skill_id = 1;
inline bool CSAddUserSkillRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddUserSkillRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddUserSkillRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_id() const {
  return skill_id_;
}
inline void CSAddUserSkillRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSAddUserSkillRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddUserSkillRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddUserSkillRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddUserSkillRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSAddUserSkillRsp::skill_level() const {
  return skill_level_;
}
inline void CSAddUserSkillRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffReq

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffReq::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffReq::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffReq::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffReq::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffReq::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffReq::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffReq::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffReq::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffReq::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffReq::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// -------------------------------------------------------------------

// CSUserSkillDiffRsp

// required uint32 skill_id = 1;
inline bool CSUserSkillDiffRsp::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSUserSkillDiffRsp::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_id() const {
  return skill_id_;
}
inline void CSUserSkillDiffRsp::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
}

// required uint32 skill_level = 2;
inline bool CSUserSkillDiffRsp::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSUserSkillDiffRsp::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::skill_level() const {
  return skill_level_;
}
inline void CSUserSkillDiffRsp::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
}

// optional uint32 money = 3;
inline bool CSUserSkillDiffRsp::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSUserSkillDiffRsp::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::money() const {
  return money_;
}
inline void CSUserSkillDiffRsp::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// optional uint32 exploit = 4;
inline bool CSUserSkillDiffRsp::has_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSUserSkillDiffRsp::clear_exploit() {
  exploit_ = 0u;
  clear_has_exploit();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::exploit() const {
  return exploit_;
}
inline void CSUserSkillDiffRsp::set_exploit(::google::protobuf::uint32 value) {
  set_has_exploit();
  exploit_ = value;
}

// optional uint32 lv = 5;
inline bool CSUserSkillDiffRsp::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSUserSkillDiffRsp::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::lv() const {
  return lv_;
}
inline void CSUserSkillDiffRsp::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// optional .BasicUserBattleInfo battle_info = 6;
inline bool CSUserSkillDiffRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSUserSkillDiffRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSUserSkillDiffRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSUserSkillDiffRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// optional int32 own_cd = 7;
inline bool CSUserSkillDiffRsp::has_own_cd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_own_cd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_has_own_cd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSUserSkillDiffRsp::clear_own_cd() {
  own_cd_ = 0;
  clear_has_own_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::own_cd() const {
  return own_cd_;
}
inline void CSUserSkillDiffRsp::set_own_cd(::google::protobuf::int32 value) {
  set_has_own_cd();
  own_cd_ = value;
}

// optional int32 share_cd = 8;
inline bool CSUserSkillDiffRsp::has_share_cd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_share_cd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_has_share_cd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSUserSkillDiffRsp::clear_share_cd() {
  share_cd_ = 0;
  clear_has_share_cd();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::share_cd() const {
  return share_cd_;
}
inline void CSUserSkillDiffRsp::set_share_cd(::google::protobuf::int32 value) {
  set_has_share_cd();
  share_cd_ = value;
}

// optional int32 hurt = 9;
inline bool CSUserSkillDiffRsp::has_hurt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_hurt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSUserSkillDiffRsp::clear_hurt() {
  hurt_ = 0;
  clear_has_hurt();
}
inline ::google::protobuf::int32 CSUserSkillDiffRsp::hurt() const {
  return hurt_;
}
inline void CSUserSkillDiffRsp::set_hurt(::google::protobuf::int32 value) {
  set_has_hurt();
  hurt_ = value;
}

// optional uint32 continue_time = 10;
inline bool CSUserSkillDiffRsp::has_continue_time() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSUserSkillDiffRsp::set_has_continue_time() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_has_continue_time() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSUserSkillDiffRsp::clear_continue_time() {
  continue_time_ = 0u;
  clear_has_continue_time();
}
inline ::google::protobuf::uint32 CSUserSkillDiffRsp::continue_time() const {
  return continue_time_;
}
inline void CSUserSkillDiffRsp::set_continue_time(::google::protobuf::uint32 value) {
  set_has_continue_time();
  continue_time_ = value;
}

// -------------------------------------------------------------------

// CSSkillUpdateValidRsq

// required bool valid = 1;
inline bool CSSkillUpdateValidRsq::has_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSkillUpdateValidRsq::set_has_valid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSkillUpdateValidRsq::clear_has_valid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSkillUpdateValidRsq::clear_valid() {
  valid_ = false;
  clear_has_valid();
}
inline bool CSSkillUpdateValidRsq::valid() const {
  return valid_;
}
inline void CSSkillUpdateValidRsq::set_valid(bool value) {
  set_has_valid();
  valid_ = value;
}

// -------------------------------------------------------------------

// CSWalkReq

// required uint32 xpos = 1;
inline bool CSWalkReq::has_xpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkReq::set_has_xpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkReq::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkReq::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkReq::xpos() const {
  return xpos_;
}
inline void CSWalkReq::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 2;
inline bool CSWalkReq::has_ypos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkReq::set_has_ypos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkReq::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkReq::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkReq::ypos() const {
  return ypos_;
}
inline void CSWalkReq::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 3;
inline bool CSWalkReq::has_animid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkReq::set_has_animid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkReq::clear_has_animid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkReq::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkReq::animid() const {
  return animid_;
}
inline void CSWalkReq::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 4;
inline bool CSWalkReq::has_flip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkReq::set_has_flip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkReq::clear_has_flip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkReq::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkReq::flip() const {
  return flip_;
}
inline void CSWalkReq::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSWalkRsp

// required uint32 uid = 1;
inline bool CSWalkRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWalkRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWalkRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWalkRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSWalkRsp::uid() const {
  return uid_;
}
inline void CSWalkRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSWalkRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWalkRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWalkRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWalkRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSWalkRsp::reg_time() const {
  return reg_time_;
}
inline void CSWalkRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSWalkRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSWalkRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSWalkRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSWalkRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSWalkRsp::channel_id() const {
  return channel_id_;
}
inline void CSWalkRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 xpos = 4;
inline bool CSWalkRsp::has_xpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSWalkRsp::set_has_xpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSWalkRsp::clear_has_xpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSWalkRsp::clear_xpos() {
  xpos_ = 0u;
  clear_has_xpos();
}
inline ::google::protobuf::uint32 CSWalkRsp::xpos() const {
  return xpos_;
}
inline void CSWalkRsp::set_xpos(::google::protobuf::uint32 value) {
  set_has_xpos();
  xpos_ = value;
}

// required uint32 ypos = 5;
inline bool CSWalkRsp::has_ypos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSWalkRsp::set_has_ypos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSWalkRsp::clear_has_ypos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSWalkRsp::clear_ypos() {
  ypos_ = 0u;
  clear_has_ypos();
}
inline ::google::protobuf::uint32 CSWalkRsp::ypos() const {
  return ypos_;
}
inline void CSWalkRsp::set_ypos(::google::protobuf::uint32 value) {
  set_has_ypos();
  ypos_ = value;
}

// required uint32 animid = 6;
inline bool CSWalkRsp::has_animid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSWalkRsp::set_has_animid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSWalkRsp::clear_has_animid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSWalkRsp::clear_animid() {
  animid_ = 0u;
  clear_has_animid();
}
inline ::google::protobuf::uint32 CSWalkRsp::animid() const {
  return animid_;
}
inline void CSWalkRsp::set_animid(::google::protobuf::uint32 value) {
  set_has_animid();
  animid_ = value;
}

// required bool flip = 7;
inline bool CSWalkRsp::has_flip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSWalkRsp::set_has_flip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSWalkRsp::clear_has_flip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSWalkRsp::clear_flip() {
  flip_ = false;
  clear_has_flip();
}
inline bool CSWalkRsp::flip() const {
  return flip_;
}
inline void CSWalkRsp::set_flip(bool value) {
  set_has_flip();
  flip_ = value;
}

// -------------------------------------------------------------------

// CSItemAttr

// required uint32 attr_key = 1;
inline bool CSItemAttr::has_attr_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemAttr::set_has_attr_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemAttr::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemAttr::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_key() const {
  return attr_key_;
}
inline void CSItemAttr::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_basic_value = 2;
inline bool CSItemAttr::has_attr_basic_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemAttr::set_has_attr_basic_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemAttr::clear_has_attr_basic_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemAttr::clear_attr_basic_value() {
  attr_basic_value_ = 0u;
  clear_has_attr_basic_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_basic_value() const {
  return attr_basic_value_;
}
inline void CSItemAttr::set_attr_basic_value(::google::protobuf::uint32 value) {
  set_has_attr_basic_value();
  attr_basic_value_ = value;
}

// optional uint32 attr_intensify_value = 3;
inline bool CSItemAttr::has_attr_intensify_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemAttr::set_has_attr_intensify_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemAttr::clear_has_attr_intensify_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemAttr::clear_attr_intensify_value() {
  attr_intensify_value_ = 0u;
  clear_has_attr_intensify_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_intensify_value() const {
  return attr_intensify_value_;
}
inline void CSItemAttr::set_attr_intensify_value(::google::protobuf::uint32 value) {
  set_has_attr_intensify_value();
  attr_intensify_value_ = value;
}

// optional uint32 attr_gem_value = 4;
inline bool CSItemAttr::has_attr_gem_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemAttr::set_has_attr_gem_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemAttr::clear_has_attr_gem_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemAttr::clear_attr_gem_value() {
  attr_gem_value_ = 0u;
  clear_has_attr_gem_value();
}
inline ::google::protobuf::uint32 CSItemAttr::attr_gem_value() const {
  return attr_gem_value_;
}
inline void CSItemAttr::set_attr_gem_value(::google::protobuf::uint32 value) {
  set_has_attr_gem_value();
  attr_gem_value_ = value;
}

// -------------------------------------------------------------------

// CSEquipHole

// required uint32 hole_index = 1;
inline bool CSEquipHole::has_hole_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipHole::set_has_hole_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipHole::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipHole::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipHole::hole_index() const {
  return hole_index_;
}
inline void CSEquipHole::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// required uint32 item_gem_id = 2;
inline bool CSEquipHole::has_item_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipHole::set_has_item_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipHole::clear_has_item_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipHole::clear_item_gem_id() {
  item_gem_id_ = 0u;
  clear_has_item_gem_id();
}
inline ::google::protobuf::uint32 CSEquipHole::item_gem_id() const {
  return item_gem_id_;
}
inline void CSEquipHole::set_item_gem_id(::google::protobuf::uint32 value) {
  set_has_item_gem_id();
  item_gem_id_ = value;
}

// required uint32 attr_key = 3;
inline bool CSEquipHole::has_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipHole::set_has_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipHole::clear_has_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipHole::clear_attr_key() {
  attr_key_ = 0u;
  clear_has_attr_key();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_key() const {
  return attr_key_;
}
inline void CSEquipHole::set_attr_key(::google::protobuf::uint32 value) {
  set_has_attr_key();
  attr_key_ = value;
}

// required uint32 attr_value = 4;
inline bool CSEquipHole::has_attr_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSEquipHole::set_has_attr_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSEquipHole::clear_has_attr_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSEquipHole::clear_attr_value() {
  attr_value_ = 0u;
  clear_has_attr_value();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_value() const {
  return attr_value_;
}
inline void CSEquipHole::set_attr_value(::google::protobuf::uint32 value) {
  set_has_attr_value();
  attr_value_ = value;
}

// optional uint32 attr_min_v = 5;
inline bool CSEquipHole::has_attr_min_v() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSEquipHole::set_has_attr_min_v() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSEquipHole::clear_has_attr_min_v() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSEquipHole::clear_attr_min_v() {
  attr_min_v_ = 0u;
  clear_has_attr_min_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_min_v() const {
  return attr_min_v_;
}
inline void CSEquipHole::set_attr_min_v(::google::protobuf::uint32 value) {
  set_has_attr_min_v();
  attr_min_v_ = value;
}

// optional uint32 attr_max_v = 6;
inline bool CSEquipHole::has_attr_max_v() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSEquipHole::set_has_attr_max_v() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSEquipHole::clear_has_attr_max_v() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSEquipHole::clear_attr_max_v() {
  attr_max_v_ = 0u;
  clear_has_attr_max_v();
}
inline ::google::protobuf::uint32 CSEquipHole::attr_max_v() const {
  return attr_max_v_;
}
inline void CSEquipHole::set_attr_max_v(::google::protobuf::uint32 value) {
  set_has_attr_max_v();
  attr_max_v_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase_Item_Attr

// required uint32 key = 1;
inline bool EquipmentBase_Item_Attr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase_Item_Attr::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::key() const {
  return key_;
}
inline void EquipmentBase_Item_Attr::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool EquipmentBase_Item_Attr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentBase_Item_Attr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentBase_Item_Attr::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 EquipmentBase_Item_Attr::value() const {
  return value_;
}
inline void EquipmentBase_Item_Attr::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// EquipmentBase

// required uint32 cost_levelup = 1;
inline bool EquipmentBase::has_cost_levelup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBase::set_has_cost_levelup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBase::clear_has_cost_levelup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBase::clear_cost_levelup() {
  cost_levelup_ = 0u;
  clear_has_cost_levelup();
}
inline ::google::protobuf::uint32 EquipmentBase::cost_levelup() const {
  return cost_levelup_;
}
inline void EquipmentBase::set_cost_levelup(::google::protobuf::uint32 value) {
  set_has_cost_levelup();
  cost_levelup_ = value;
}

// repeated .EquipmentBase.Item_Attr incr_attr_next_lv = 2;
inline int EquipmentBase::incr_attr_next_lv_size() const {
  return incr_attr_next_lv_.size();
}
inline void EquipmentBase::clear_incr_attr_next_lv() {
  incr_attr_next_lv_.Clear();
}
inline const ::EquipmentBase_Item_Attr& EquipmentBase::incr_attr_next_lv(int index) const {
  return incr_attr_next_lv_.Get(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::mutable_incr_attr_next_lv(int index) {
  return incr_attr_next_lv_.Mutable(index);
}
inline ::EquipmentBase_Item_Attr* EquipmentBase::add_incr_attr_next_lv() {
  return incr_attr_next_lv_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >&
EquipmentBase::incr_attr_next_lv() const {
  return incr_attr_next_lv_;
}
inline ::google::protobuf::RepeatedPtrField< ::EquipmentBase_Item_Attr >*
EquipmentBase::mutable_incr_attr_next_lv() {
  return &incr_attr_next_lv_;
}

// repeated .CSEquipHole equip_holes = 3;
inline int EquipmentBase::equip_holes_size() const {
  return equip_holes_.size();
}
inline void EquipmentBase::clear_equip_holes() {
  equip_holes_.Clear();
}
inline const ::CSEquipHole& EquipmentBase::equip_holes(int index) const {
  return equip_holes_.Get(index);
}
inline ::CSEquipHole* EquipmentBase::mutable_equip_holes(int index) {
  return equip_holes_.Mutable(index);
}
inline ::CSEquipHole* EquipmentBase::add_equip_holes() {
  return equip_holes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSEquipHole >&
EquipmentBase::equip_holes() const {
  return equip_holes_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSEquipHole >*
EquipmentBase::mutable_equip_holes() {
  return &equip_holes_;
}

// -------------------------------------------------------------------

// SpiritStoneBase

// required uint32 consume = 1;
inline bool SpiritStoneBase::has_consume() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpiritStoneBase::set_has_consume() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpiritStoneBase::clear_has_consume() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpiritStoneBase::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 SpiritStoneBase::consume() const {
  return consume_;
}
inline void SpiritStoneBase::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 2;
inline bool SpiritStoneBase::has_convert() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpiritStoneBase::set_has_convert() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpiritStoneBase::clear_has_convert() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpiritStoneBase::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 SpiritStoneBase::convert() const {
  return convert_;
}
inline void SpiritStoneBase::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// -------------------------------------------------------------------

// ManorBase

// required uint32 hunt_gain_coin = 1;
inline bool ManorBase::has_hunt_gain_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorBase::set_has_hunt_gain_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorBase::clear_has_hunt_gain_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorBase::clear_hunt_gain_coin() {
  hunt_gain_coin_ = 0u;
  clear_has_hunt_gain_coin();
}
inline ::google::protobuf::uint32 ManorBase::hunt_gain_coin() const {
  return hunt_gain_coin_;
}
inline void ManorBase::set_hunt_gain_coin(::google::protobuf::uint32 value) {
  set_has_hunt_gain_coin();
  hunt_gain_coin_ = value;
}

// required uint32 pick_gain_exp = 2;
inline bool ManorBase::has_pick_gain_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorBase::set_has_pick_gain_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorBase::clear_has_pick_gain_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorBase::clear_pick_gain_exp() {
  pick_gain_exp_ = 0u;
  clear_has_pick_gain_exp();
}
inline ::google::protobuf::uint32 ManorBase::pick_gain_exp() const {
  return pick_gain_exp_;
}
inline void ManorBase::set_pick_gain_exp(::google::protobuf::uint32 value) {
  set_has_pick_gain_exp();
  pick_gain_exp_ = value;
}

// -------------------------------------------------------------------

// CSItemInfo

// required uint32 pos = 1;
inline bool CSItemInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemInfo::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemInfo::pos() const {
  return pos_;
}
inline void CSItemInfo::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemInfo::item_id() const {
  return item_id_;
}
inline void CSItemInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 3;
inline bool CSItemInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSItemInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSItemInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSItemInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSItemInfo::item_num() const {
  return item_num_;
}
inline void CSItemInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// optional uint32 item_level = 4;
inline bool CSItemInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSItemInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSItemInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSItemInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSItemInfo::item_level() const {
  return item_level_;
}
inline void CSItemInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// repeated .CSItemAttr item_attrs = 5;
inline int CSItemInfo::item_attrs_size() const {
  return item_attrs_.size();
}
inline void CSItemInfo::clear_item_attrs() {
  item_attrs_.Clear();
}
inline const ::CSItemAttr& CSItemInfo::item_attrs(int index) const {
  return item_attrs_.Get(index);
}
inline ::CSItemAttr* CSItemInfo::mutable_item_attrs(int index) {
  return item_attrs_.Mutable(index);
}
inline ::CSItemAttr* CSItemInfo::add_item_attrs() {
  return item_attrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemAttr >&
CSItemInfo::item_attrs() const {
  return item_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemAttr >*
CSItemInfo::mutable_item_attrs() {
  return &item_attrs_;
}

// optional .EquipmentBase equip_info = 6;
inline bool CSItemInfo::has_equip_info() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSItemInfo::set_has_equip_info() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSItemInfo::clear_has_equip_info() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSItemInfo::clear_equip_info() {
  if (equip_info_ != NULL) equip_info_->::EquipmentBase::Clear();
  clear_has_equip_info();
}
inline const ::EquipmentBase& CSItemInfo::equip_info() const {
  return equip_info_ != NULL ? *equip_info_ : *default_instance_->equip_info_;
}
inline ::EquipmentBase* CSItemInfo::mutable_equip_info() {
  set_has_equip_info();
  if (equip_info_ == NULL) equip_info_ = new ::EquipmentBase;
  return equip_info_;
}
inline ::EquipmentBase* CSItemInfo::release_equip_info() {
  clear_has_equip_info();
  ::EquipmentBase* temp = equip_info_;
  equip_info_ = NULL;
  return temp;
}

// optional .SpiritStoneBase ss_info = 7;
inline bool CSItemInfo::has_ss_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSItemInfo::set_has_ss_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSItemInfo::clear_has_ss_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSItemInfo::clear_ss_info() {
  if (ss_info_ != NULL) ss_info_->::SpiritStoneBase::Clear();
  clear_has_ss_info();
}
inline const ::SpiritStoneBase& CSItemInfo::ss_info() const {
  return ss_info_ != NULL ? *ss_info_ : *default_instance_->ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::mutable_ss_info() {
  set_has_ss_info();
  if (ss_info_ == NULL) ss_info_ = new ::SpiritStoneBase;
  return ss_info_;
}
inline ::SpiritStoneBase* CSItemInfo::release_ss_info() {
  clear_has_ss_info();
  ::SpiritStoneBase* temp = ss_info_;
  ss_info_ = NULL;
  return temp;
}

// optional .ManorBase manor_info = 8;
inline bool CSItemInfo::has_manor_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSItemInfo::set_has_manor_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSItemInfo::clear_has_manor_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSItemInfo::clear_manor_info() {
  if (manor_info_ != NULL) manor_info_->::ManorBase::Clear();
  clear_has_manor_info();
}
inline const ::ManorBase& CSItemInfo::manor_info() const {
  return manor_info_ != NULL ? *manor_info_ : *default_instance_->manor_info_;
}
inline ::ManorBase* CSItemInfo::mutable_manor_info() {
  set_has_manor_info();
  if (manor_info_ == NULL) manor_info_ = new ::ManorBase;
  return manor_info_;
}
inline ::ManorBase* CSItemInfo::release_manor_info() {
  clear_has_manor_info();
  ::ManorBase* temp = manor_info_;
  manor_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAllItemsReq

// -------------------------------------------------------------------

// CSAllItemsRsp

// required uint32 def_bag_size = 1;
inline bool CSAllItemsRsp::has_def_bag_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAllItemsRsp::set_has_def_bag_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAllItemsRsp::clear_has_def_bag_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAllItemsRsp::clear_def_bag_size() {
  def_bag_size_ = 0u;
  clear_has_def_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_bag_size() const {
  return def_bag_size_;
}
inline void CSAllItemsRsp::set_def_bag_size(::google::protobuf::uint32 value) {
  set_has_def_bag_size();
  def_bag_size_ = value;
}

// required uint32 def_store_size = 2;
inline bool CSAllItemsRsp::has_def_store_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAllItemsRsp::set_has_def_store_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAllItemsRsp::clear_has_def_store_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAllItemsRsp::clear_def_store_size() {
  def_store_size_ = 0u;
  clear_has_def_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_store_size() const {
  return def_store_size_;
}
inline void CSAllItemsRsp::set_def_store_size(::google::protobuf::uint32 value) {
  set_has_def_store_size();
  def_store_size_ = value;
}

// required uint32 def_ss_bag_size = 3;
inline bool CSAllItemsRsp::has_def_ss_bag_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_bag_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAllItemsRsp::clear_has_def_ss_bag_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAllItemsRsp::clear_def_ss_bag_size() {
  def_ss_bag_size_ = 0u;
  clear_has_def_ss_bag_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_bag_size() const {
  return def_ss_bag_size_;
}
inline void CSAllItemsRsp::set_def_ss_bag_size(::google::protobuf::uint32 value) {
  set_has_def_ss_bag_size();
  def_ss_bag_size_ = value;
}

// required uint32 def_ss_store_size = 4;
inline bool CSAllItemsRsp::has_def_ss_store_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSAllItemsRsp::set_has_def_ss_store_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSAllItemsRsp::clear_has_def_ss_store_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSAllItemsRsp::clear_def_ss_store_size() {
  def_ss_store_size_ = 0u;
  clear_has_def_ss_store_size();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_ss_store_size() const {
  return def_ss_store_size_;
}
inline void CSAllItemsRsp::set_def_ss_store_size(::google::protobuf::uint32 value) {
  set_has_def_ss_store_size();
  def_ss_store_size_ = value;
}

// required uint32 def_equip_lvup_max_cd_time = 5;
inline bool CSAllItemsRsp::has_def_equip_lvup_max_cd_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSAllItemsRsp::set_has_def_equip_lvup_max_cd_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSAllItemsRsp::clear_has_def_equip_lvup_max_cd_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSAllItemsRsp::clear_def_equip_lvup_max_cd_time() {
  def_equip_lvup_max_cd_time_ = 0u;
  clear_has_def_equip_lvup_max_cd_time();
}
inline ::google::protobuf::uint32 CSAllItemsRsp::def_equip_lvup_max_cd_time() const {
  return def_equip_lvup_max_cd_time_;
}
inline void CSAllItemsRsp::set_def_equip_lvup_max_cd_time(::google::protobuf::uint32 value) {
  set_has_def_equip_lvup_max_cd_time();
  def_equip_lvup_max_cd_time_ = value;
}

// repeated .CSItemInfo items = 15;
inline int CSAllItemsRsp::items_size() const {
  return items_.size();
}
inline void CSAllItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSAllItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSAllItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSAllItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSAllItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSAllItemsRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemAddRsp

// repeated .CSItemInfo items = 1;
inline int CSItemAddRsp::items_size() const {
  return items_.size();
}
inline void CSItemAddRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSItemAddRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSItemAddRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSItemAddRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemAddRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemAddRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSItemRemoveReq

// required uint32 pos = 1;
inline bool CSItemRemoveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::pos() const {
  return pos_;
}
inline void CSItemRemoveReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveReq::item_id() const {
  return item_id_;
}
inline void CSItemRemoveReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemRemoveRsp

// required uint32 pos = 1;
inline bool CSItemRemoveRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemRemoveRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemRemoveRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemRemoveRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::pos() const {
  return pos_;
}
inline void CSItemRemoveRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemRemoveRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemRemoveRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemRemoveRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemRemoveRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemRemoveRsp::item_id() const {
  return item_id_;
}
inline void CSItemRemoveRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemUseReq

// required uint32 pos = 1;
inline bool CSItemUseReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemUseReq::pos() const {
  return pos_;
}
inline void CSItemUseReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 item_id = 2;
inline bool CSItemUseReq::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemUseReq::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemUseReq::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemUseReq::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemUseReq::item_id() const {
  return item_id_;
}
inline void CSItemUseReq::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemUseRsp

// required uint32 item_id = 1;
inline bool CSItemUseRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemUseRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemUseRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemUseRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSItemUseRsp::item_id() const {
  return item_id_;
}
inline void CSItemUseRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveReq

// required uint32 pos_from = 1;
inline bool CSItemMoveReq::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveReq::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveReq::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveReq::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveReq::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveReq::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveReq::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveReq::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveReq::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveReq::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveReq::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveRsp

// required uint32 pos_from = 1;
inline bool CSItemMoveRsp::has_pos_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveRsp::clear_has_pos_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveRsp::clear_pos_from() {
  pos_from_ = 0u;
  clear_has_pos_from();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_from() const {
  return pos_from_;
}
inline void CSItemMoveRsp::set_pos_from(::google::protobuf::uint32 value) {
  set_has_pos_from();
  pos_from_ = value;
}

// required uint32 pos_to = 2;
inline bool CSItemMoveRsp::has_pos_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSItemMoveRsp::set_has_pos_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSItemMoveRsp::clear_has_pos_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSItemMoveRsp::clear_pos_to() {
  pos_to_ = 0u;
  clear_has_pos_to();
}
inline ::google::protobuf::uint32 CSItemMoveRsp::pos_to() const {
  return pos_to_;
}
inline void CSItemMoveRsp::set_pos_to(::google::protobuf::uint32 value) {
  set_has_pos_to();
  pos_to_ = value;
}

// -------------------------------------------------------------------

// CSItemUpdateRsp

// repeated .CSItemInfo item = 1;
inline int CSItemUpdateRsp::item_size() const {
  return item_.size();
}
inline void CSItemUpdateRsp::clear_item() {
  item_.Clear();
}
inline const ::CSItemInfo& CSItemUpdateRsp::item(int index) const {
  return item_.Get(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::mutable_item(int index) {
  return item_.Mutable(index);
}
inline ::CSItemInfo* CSItemUpdateRsp::add_item() {
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSItemUpdateRsp::item() const {
  return item_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSItemUpdateRsp::mutable_item() {
  return &item_;
}

// -------------------------------------------------------------------

// CSItemOrderReq

// required uint32 target = 1;
inline bool CSItemOrderReq::has_target() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemOrderReq::set_has_target() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemOrderReq::clear_has_target() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemOrderReq::clear_target() {
  target_ = 0u;
  clear_has_target();
}
inline ::google::protobuf::uint32 CSItemOrderReq::target() const {
  return target_;
}
inline void CSItemOrderReq::set_target(::google::protobuf::uint32 value) {
  set_has_target();
  target_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveToRecycleBinReq

// required uint32 pos = 1;
inline bool CSItemMoveToRecycleBinReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveToRecycleBinReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveToRecycleBinReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveToRecycleBinReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSItemMoveToRecycleBinReq::pos() const {
  return pos_;
}
inline void CSItemMoveToRecycleBinReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSItemMoveToRecycleBinRsp

// required uint32 coin = 1;
inline bool CSItemMoveToRecycleBinRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSItemMoveToRecycleBinRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSItemMoveToRecycleBinRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSItemMoveToRecycleBinRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSItemMoveToRecycleBinRsp::coin() const {
  return coin_;
}
inline void CSItemMoveToRecycleBinRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// CSRepoRecycleBinItemReq

// required uint32 pos = 1;
inline bool CSRepoRecycleBinItemReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRepoRecycleBinItemReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRepoRecycleBinItemReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRepoRecycleBinItemReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSRepoRecycleBinItemReq::pos() const {
  return pos_;
}
inline void CSRepoRecycleBinItemReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSRepoRecycleBinItemRsp

// required uint32 coin = 1;
inline bool CSRepoRecycleBinItemRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSRepoRecycleBinItemRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSRepoRecycleBinItemRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSRepoRecycleBinItemRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSRepoRecycleBinItemRsp::coin() const {
  return coin_;
}
inline void CSRepoRecycleBinItemRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// CSInstanceInfo

// required uint32 instance_id = 1;
inline bool CSInstanceInfo::has_instance_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceInfo::set_has_instance_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceInfo::clear_has_instance_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceInfo::clear_instance_id() {
  instance_id_ = 0u;
  clear_has_instance_id();
}
inline ::google::protobuf::uint32 CSInstanceInfo::instance_id() const {
  return instance_id_;
}
inline void CSInstanceInfo::set_instance_id(::google::protobuf::uint32 value) {
  set_has_instance_id();
  instance_id_ = value;
}

// required uint32 star = 2;
inline bool CSInstanceInfo::has_star() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceInfo::set_has_star() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceInfo::clear_has_star() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceInfo::clear_star() {
  star_ = 0u;
  clear_has_star();
}
inline ::google::protobuf::uint32 CSInstanceInfo::star() const {
  return star_;
}
inline void CSInstanceInfo::set_star(::google::protobuf::uint32 value) {
  set_has_star();
  star_ = value;
}

// required bool can_enter_flag = 3;
inline bool CSInstanceInfo::has_can_enter_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSInstanceInfo::set_has_can_enter_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSInstanceInfo::clear_has_can_enter_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSInstanceInfo::clear_can_enter_flag() {
  can_enter_flag_ = false;
  clear_has_can_enter_flag();
}
inline bool CSInstanceInfo::can_enter_flag() const {
  return can_enter_flag_;
}
inline void CSInstanceInfo::set_can_enter_flag(bool value) {
  set_has_can_enter_flag();
  can_enter_flag_ = value;
}

// required uint32 refresh_times = 4;
inline bool CSInstanceInfo::has_refresh_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSInstanceInfo::set_has_refresh_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSInstanceInfo::clear_has_refresh_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSInstanceInfo::clear_refresh_times() {
  refresh_times_ = 0u;
  clear_has_refresh_times();
}
inline ::google::protobuf::uint32 CSInstanceInfo::refresh_times() const {
  return refresh_times_;
}
inline void CSInstanceInfo::set_refresh_times(::google::protobuf::uint32 value) {
  set_has_refresh_times();
  refresh_times_ = value;
}

// -------------------------------------------------------------------

// CSInstanceReq

// required uint32 start = 1;
inline bool CSInstanceReq::has_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSInstanceReq::set_has_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSInstanceReq::clear_has_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSInstanceReq::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 CSInstanceReq::start() const {
  return start_;
}
inline void CSInstanceReq::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
}

// required uint32 end = 2;
inline bool CSInstanceReq::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSInstanceReq::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSInstanceReq::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSInstanceReq::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 CSInstanceReq::end() const {
  return end_;
}
inline void CSInstanceReq::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
}

// -------------------------------------------------------------------

// CSInstanceRsp

// repeated .CSInstanceInfo new_instances = 1;
inline int CSInstanceRsp::new_instances_size() const {
  return new_instances_.size();
}
inline void CSInstanceRsp::clear_new_instances() {
  new_instances_.Clear();
}
inline const ::CSInstanceInfo& CSInstanceRsp::new_instances(int index) const {
  return new_instances_.Get(index);
}
inline ::CSInstanceInfo* CSInstanceRsp::mutable_new_instances(int index) {
  return new_instances_.Mutable(index);
}
inline ::CSInstanceInfo* CSInstanceRsp::add_new_instances() {
  return new_instances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >&
CSInstanceRsp::new_instances() const {
  return new_instances_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSInstanceInfo >*
CSInstanceRsp::mutable_new_instances() {
  return &new_instances_;
}

// -------------------------------------------------------------------

// CSGetUGCityBoxRewardReq

// required uint32 index = 1;
inline bool CSGetUGCityBoxRewardReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUGCityBoxRewardReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUGCityBoxRewardReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUGCityBoxRewardReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSGetUGCityBoxRewardReq::index() const {
  return index_;
}
inline void CSGetUGCityBoxRewardReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSGetUGCityBoxRewardRsp

// required bool succ = 1;
inline bool CSGetUGCityBoxRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUGCityBoxRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetUGCityBoxRewardRsp::succ() const {
  return succ_;
}
inline void CSGetUGCityBoxRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 index = 2;
inline bool CSGetUGCityBoxRewardRsp::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUGCityBoxRewardRsp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSGetUGCityBoxRewardRsp::index() const {
  return index_;
}
inline void CSGetUGCityBoxRewardRsp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// optional .CSReward reward = 3;
inline bool CSGetUGCityBoxRewardRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUGCityBoxRewardRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUGCityBoxRewardRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUGCityBoxRewardRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSGetUGCityBoxRewardRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSGetUGCityBoxRewardRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSGetUGCityBoxRewardRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSReward_RewardInfo

// required uint32 item_id = 1;
inline bool CSReward_RewardInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSReward_RewardInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSReward_RewardInfo::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_id() const {
  return item_id_;
}
inline void CSReward_RewardInfo::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_level = 2;
inline bool CSReward_RewardInfo::has_item_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward_RewardInfo::clear_has_item_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward_RewardInfo::clear_item_level() {
  item_level_ = 0u;
  clear_has_item_level();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_level() const {
  return item_level_;
}
inline void CSReward_RewardInfo::set_item_level(::google::protobuf::uint32 value) {
  set_has_item_level();
  item_level_ = value;
}

// required uint32 item_num = 3;
inline bool CSReward_RewardInfo::has_item_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward_RewardInfo::set_has_item_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward_RewardInfo::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward_RewardInfo::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSReward_RewardInfo::item_num() const {
  return item_num_;
}
inline void CSReward_RewardInfo::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSReward

// repeated .CSReward.RewardInfo rewards = 1;
inline int CSReward::rewards_size() const {
  return rewards_.size();
}
inline void CSReward::clear_rewards() {
  rewards_.Clear();
}
inline const ::CSReward_RewardInfo& CSReward::rewards(int index) const {
  return rewards_.Get(index);
}
inline ::CSReward_RewardInfo* CSReward::mutable_rewards(int index) {
  return rewards_.Mutable(index);
}
inline ::CSReward_RewardInfo* CSReward::add_rewards() {
  return rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >&
CSReward::rewards() const {
  return rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSReward_RewardInfo >*
CSReward::mutable_rewards() {
  return &rewards_;
}

// optional uint32 add_coin = 2;
inline bool CSReward::has_add_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSReward::set_has_add_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSReward::clear_has_add_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSReward::clear_add_coin() {
  add_coin_ = 0u;
  clear_has_add_coin();
}
inline ::google::protobuf::uint32 CSReward::add_coin() const {
  return add_coin_;
}
inline void CSReward::set_add_coin(::google::protobuf::uint32 value) {
  set_has_add_coin();
  add_coin_ = value;
}

// optional uint32 add_exp = 3;
inline bool CSReward::has_add_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSReward::set_has_add_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSReward::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSReward::clear_add_exp() {
  add_exp_ = 0u;
  clear_has_add_exp();
}
inline ::google::protobuf::uint32 CSReward::add_exp() const {
  return add_exp_;
}
inline void CSReward::set_add_exp(::google::protobuf::uint32 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// optional uint32 add_exploit = 4;
inline bool CSReward::has_add_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSReward::set_has_add_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSReward::clear_has_add_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSReward::clear_add_exploit() {
  add_exploit_ = 0u;
  clear_has_add_exploit();
}
inline ::google::protobuf::uint32 CSReward::add_exploit() const {
  return add_exploit_;
}
inline void CSReward::set_add_exploit(::google::protobuf::uint32 value) {
  set_has_add_exploit();
  add_exploit_ = value;
}

// optional uint32 add_diamond = 5;
inline bool CSReward::has_add_diamond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSReward::set_has_add_diamond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSReward::clear_has_add_diamond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSReward::clear_add_diamond() {
  add_diamond_ = 0u;
  clear_has_add_diamond();
}
inline ::google::protobuf::uint32 CSReward::add_diamond() const {
  return add_diamond_;
}
inline void CSReward::set_add_diamond(::google::protobuf::uint32 value) {
  set_has_add_diamond();
  add_diamond_ = value;
}

// -------------------------------------------------------------------

// CSLevelUpRsp

// required uint32 level = 1;
inline bool CSLevelUpRsp::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLevelUpRsp::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLevelUpRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLevelUpRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSLevelUpRsp::level() const {
  return level_;
}
inline void CSLevelUpRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSBasicUserBattleInfoRsp

// required uint32 id = 1;
inline bool CSBasicUserBattleInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBasicUserBattleInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::id() const {
  return id_;
}
inline void CSBasicUserBattleInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 reg_time = 2;
inline bool CSBasicUserBattleInfoRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBasicUserBattleInfoRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::reg_time() const {
  return reg_time_;
}
inline void CSBasicUserBattleInfoRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSBasicUserBattleInfoRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSBasicUserBattleInfoRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSBasicUserBattleInfoRsp::channel_id() const {
  return channel_id_;
}
inline void CSBasicUserBattleInfoRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .BasicUserBattleInfo battle_info = 4;
inline bool CSBasicUserBattleInfoRsp::has_battle_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSBasicUserBattleInfoRsp::set_has_battle_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSBasicUserBattleInfoRsp::clear_has_battle_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSBasicUserBattleInfoRsp::clear_battle_info() {
  if (battle_info_ != NULL) battle_info_->::BasicUserBattleInfo::Clear();
  clear_has_battle_info();
}
inline const ::BasicUserBattleInfo& CSBasicUserBattleInfoRsp::battle_info() const {
  return battle_info_ != NULL ? *battle_info_ : *default_instance_->battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::mutable_battle_info() {
  set_has_battle_info();
  if (battle_info_ == NULL) battle_info_ = new ::BasicUserBattleInfo;
  return battle_info_;
}
inline ::BasicUserBattleInfo* CSBasicUserBattleInfoRsp::release_battle_info() {
  clear_has_battle_info();
  ::BasicUserBattleInfo* temp = battle_info_;
  battle_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSSearchSpiritStoneReq

// -------------------------------------------------------------------

// CSSearchSpiritStoneRsp

// required uint32 ret = 1;
inline bool CSSearchSpiritStoneRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSearchSpiritStoneRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::ret() const {
  return ret_;
}
inline void CSSearchSpiritStoneRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 cost_coin = 2;
inline bool CSSearchSpiritStoneRsp::has_cost_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_cost_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_has_cost_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSearchSpiritStoneRsp::clear_cost_coin() {
  cost_coin_ = 0u;
  clear_has_cost_coin();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::cost_coin() const {
  return cost_coin_;
}
inline void CSSearchSpiritStoneRsp::set_cost_coin(::google::protobuf::uint32 value) {
  set_has_cost_coin();
  cost_coin_ = value;
}

// optional uint32 mon_id = 3;
inline bool CSSearchSpiritStoneRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSearchSpiritStoneRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::mon_id() const {
  return mon_id_;
}
inline void CSSearchSpiritStoneRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 item_id = 4;
inline bool CSSearchSpiritStoneRsp::has_item_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSearchSpiritStoneRsp::set_has_item_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSearchSpiritStoneRsp::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSSearchSpiritStoneRsp::item_id() const {
  return item_id_;
}
inline void CSSearchSpiritStoneRsp::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagReq

// required uint32 pos = 1;
inline bool CSSpiritStoneMoveBagReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneMoveBagReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneMoveBagRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneMoveBagRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneMoveBagRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneMoveBagRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneMoveBagRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneMoveBagRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpReq

// required uint32 pos = 1;
inline bool CSSpiritStoneLevelUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneLevelUpRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneLevelUpRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneLevelUpRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneLevelUpRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint32 pos = 2;
inline bool CSSpiritStoneLevelUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneLevelUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::pos() const {
  return pos_;
}
inline void CSSpiritStoneLevelUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 cost_sp = 3;
inline bool CSSpiritStoneLevelUpRsp::has_cost_sp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneLevelUpRsp::set_has_cost_sp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_has_cost_sp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneLevelUpRsp::clear_cost_sp() {
  cost_sp_ = 0u;
  clear_has_cost_sp();
}
inline ::google::protobuf::uint32 CSSpiritStoneLevelUpRsp::cost_sp() const {
  return cost_sp_;
}
inline void CSSpiritStoneLevelUpRsp::set_cost_sp(::google::protobuf::uint32 value) {
  set_has_cost_sp();
  cost_sp_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPReq

// required uint32 pos = 1;
inline bool CSSpiritStoneToSPReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPReq::pos() const {
  return pos_;
}
inline void CSSpiritStoneToSPReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSSpiritStoneToSPRsp

// required uint32 ret = 1;
inline bool CSSpiritStoneToSPRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSpiritStoneToSPRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::ret() const {
  return ret_;
}
inline void CSSpiritStoneToSPRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 sp_key = 2;
inline bool CSSpiritStoneToSPRsp::has_sp_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_key() {
  sp_key_ = 0u;
  clear_has_sp_key();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_key() const {
  return sp_key_;
}
inline void CSSpiritStoneToSPRsp::set_sp_key(::google::protobuf::uint32 value) {
  set_has_sp_key();
  sp_key_ = value;
}

// optional uint32 sp_value = 3;
inline bool CSSpiritStoneToSPRsp::has_sp_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSpiritStoneToSPRsp::set_has_sp_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_has_sp_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSpiritStoneToSPRsp::clear_sp_value() {
  sp_value_ = 0u;
  clear_has_sp_value();
}
inline ::google::protobuf::uint32 CSSpiritStoneToSPRsp::sp_value() const {
  return sp_value_;
}
inline void CSSpiritStoneToSPRsp::set_sp_value(::google::protobuf::uint32 value) {
  set_has_sp_value();
  sp_value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoReq

// -------------------------------------------------------------------

// ExchangeSSInfo

// required uint32 ss_id = 1;
inline bool ExchangeSSInfo::has_ss_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeSSInfo::set_has_ss_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeSSInfo::clear_has_ss_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeSSInfo::clear_ss_id() {
  ss_id_ = 0u;
  clear_has_ss_id();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::ss_id() const {
  return ss_id_;
}
inline void ExchangeSSInfo::set_ss_id(::google::protobuf::uint32 value) {
  set_has_ss_id();
  ss_id_ = value;
}

// required uint32 consume = 2;
inline bool ExchangeSSInfo::has_consume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeSSInfo::set_has_consume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeSSInfo::clear_has_consume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeSSInfo::clear_consume() {
  consume_ = 0u;
  clear_has_consume();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::consume() const {
  return consume_;
}
inline void ExchangeSSInfo::set_consume(::google::protobuf::uint32 value) {
  set_has_consume();
  consume_ = value;
}

// required uint32 convert = 3;
inline bool ExchangeSSInfo::has_convert() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeSSInfo::set_has_convert() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeSSInfo::clear_has_convert() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeSSInfo::clear_convert() {
  convert_ = 0u;
  clear_has_convert();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::convert() const {
  return convert_;
}
inline void ExchangeSSInfo::set_convert(::google::protobuf::uint32 value) {
  set_has_convert();
  convert_ = value;
}

// required uint32 need_chip = 4;
inline bool ExchangeSSInfo::has_need_chip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeSSInfo::set_has_need_chip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeSSInfo::clear_has_need_chip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeSSInfo::clear_need_chip() {
  need_chip_ = 0u;
  clear_has_need_chip();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::need_chip() const {
  return need_chip_;
}
inline void ExchangeSSInfo::set_need_chip(::google::protobuf::uint32 value) {
  set_has_need_chip();
  need_chip_ = value;
}

// required uint32 key = 5;
inline bool ExchangeSSInfo::has_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeSSInfo::set_has_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeSSInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeSSInfo::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::key() const {
  return key_;
}
inline void ExchangeSSInfo::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 6;
inline bool ExchangeSSInfo::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ExchangeSSInfo::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ExchangeSSInfo::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ExchangeSSInfo::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ExchangeSSInfo::value() const {
  return value_;
}
inline void ExchangeSSInfo::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSGetExchangeSSInfoRsp

// repeated .ExchangeSSInfo ss_list = 1;
inline int CSGetExchangeSSInfoRsp::ss_list_size() const {
  return ss_list_.size();
}
inline void CSGetExchangeSSInfoRsp::clear_ss_list() {
  ss_list_.Clear();
}
inline const ::ExchangeSSInfo& CSGetExchangeSSInfoRsp::ss_list(int index) const {
  return ss_list_.Get(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::mutable_ss_list(int index) {
  return ss_list_.Mutable(index);
}
inline ::ExchangeSSInfo* CSGetExchangeSSInfoRsp::add_ss_list() {
  return ss_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >&
CSGetExchangeSSInfoRsp::ss_list() const {
  return ss_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeSSInfo >*
CSGetExchangeSSInfoRsp::mutable_ss_list() {
  return &ss_list_;
}

// -------------------------------------------------------------------

// CSAddManorReq

// required uint32 manor_id = 1;
inline bool CSAddManorReq::has_manor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorReq::set_has_manor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorReq::clear_has_manor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorReq::clear_manor_id() {
  manor_id_ = 0u;
  clear_has_manor_id();
}
inline ::google::protobuf::uint32 CSAddManorReq::manor_id() const {
  return manor_id_;
}
inline void CSAddManorReq::set_manor_id(::google::protobuf::uint32 value) {
  set_has_manor_id();
  manor_id_ = value;
}

// -------------------------------------------------------------------

// CSAddManorRsp

// required uint32 pos = 1;
inline bool CSAddManorRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddManorRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddManorRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddManorRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSAddManorRsp::pos() const {
  return pos_;
}
inline void CSAddManorRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpReq

// required uint32 pos = 1;
inline bool CSWarmSportLvUpReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpReq::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// optional bool to_max_lv = 2 [default = false];
inline bool CSWarmSportLvUpReq::has_to_max_lv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSWarmSportLvUpReq::set_has_to_max_lv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_has_to_max_lv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSWarmSportLvUpReq::clear_to_max_lv() {
  to_max_lv_ = false;
  clear_has_to_max_lv();
}
inline bool CSWarmSportLvUpReq::to_max_lv() const {
  return to_max_lv_;
}
inline void CSWarmSportLvUpReq::set_to_max_lv(bool value) {
  set_has_to_max_lv();
  to_max_lv_ = value;
}

// -------------------------------------------------------------------

// CSWarmSportLvUpRsp

// required uint32 pos = 1;
inline bool CSWarmSportLvUpRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSWarmSportLvUpRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSWarmSportLvUpRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSWarmSportLvUpRsp::pos() const {
  return pos_;
}
inline void CSWarmSportLvUpRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSManorOptReq

// required uint32 pos = 1;
inline bool CSManorOptReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptReq::pos() const {
  return pos_;
}
inline void CSManorOptReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptReq::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptReq::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptReq::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptReq::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptReq::opt() const {
  return opt_;
}
inline void CSManorOptReq::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSManorOptRsp

// required uint32 pos = 1;
inline bool CSManorOptRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSManorOptRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSManorOptRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSManorOptRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSManorOptRsp::pos() const {
  return pos_;
}
inline void CSManorOptRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 opt = 2;
inline bool CSManorOptRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSManorOptRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSManorOptRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSManorOptRsp::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSManorOptRsp::opt() const {
  return opt_;
}
inline void CSManorOptRsp::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSMonListReq

// required uint32 uid = 1;
inline bool CSMonListReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListReq::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListReq::uid() const {
  return uid_;
}
inline void CSMonListReq::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSMonListReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSMonListReq::reg_time() const {
  return reg_time_;
}
inline void CSMonListReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSMonListReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMonListReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMonListReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMonListReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSMonListReq::channel_id() const {
  return channel_id_;
}
inline void CSMonListReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// MonInfo

// required uint32 mon_id = 1;
inline bool MonInfo::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonInfo::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonInfo::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonInfo::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 MonInfo::mon_id() const {
  return mon_id_;
}
inline void MonInfo::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool MonInfo::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonInfo::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonInfo::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonInfo::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 MonInfo::mon_status() const {
  return mon_status_;
}
inline void MonInfo::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSMonListRsp

// required uint32 uid = 1;
inline bool CSMonListRsp::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMonListRsp::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMonListRsp::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMonListRsp::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 CSMonListRsp::uid() const {
  return uid_;
}
inline void CSMonListRsp::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSMonListRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMonListRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMonListRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMonListRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSMonListRsp::reg_time() const {
  return reg_time_;
}
inline void CSMonListRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSMonListRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMonListRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMonListRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMonListRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSMonListRsp::channel_id() const {
  return channel_id_;
}
inline void CSMonListRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .MonInfo mon_info = 4;
inline int CSMonListRsp::mon_info_size() const {
  return mon_info_.size();
}
inline void CSMonListRsp::clear_mon_info() {
  mon_info_.Clear();
}
inline const ::MonInfo& CSMonListRsp::mon_info(int index) const {
  return mon_info_.Get(index);
}
inline ::MonInfo* CSMonListRsp::mutable_mon_info(int index) {
  return mon_info_.Mutable(index);
}
inline ::MonInfo* CSMonListRsp::add_mon_info() {
  return mon_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MonInfo >&
CSMonListRsp::mon_info() const {
  return mon_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::MonInfo >*
CSMonListRsp::mutable_mon_info() {
  return &mon_info_;
}

// -------------------------------------------------------------------

// CSSetMonStatusReq

// required uint32 mon_id = 1;
inline bool CSSetMonStatusReq::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusReq::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusReq::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusReq::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_status = 2;
inline bool CSSetMonStatusReq::has_mon_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusReq::set_has_mon_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusReq::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusReq::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusReq::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusReq::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSSetMonStatusRsp

// required uint32 ret = 1;
inline bool CSSetMonStatusRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMonStatusRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMonStatusRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMonStatusRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::ret() const {
  return ret_;
}
inline void CSSetMonStatusRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint32 mon_id = 2;
inline bool CSSetMonStatusRsp::has_mon_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMonStatusRsp::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMonStatusRsp::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_id() const {
  return mon_id_;
}
inline void CSSetMonStatusRsp::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// optional uint32 mon_status = 3;
inline bool CSSetMonStatusRsp::has_mon_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetMonStatusRsp::set_has_mon_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetMonStatusRsp::clear_has_mon_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetMonStatusRsp::clear_mon_status() {
  mon_status_ = 0u;
  clear_has_mon_status();
}
inline ::google::protobuf::uint32 CSSetMonStatusRsp::mon_status() const {
  return mon_status_;
}
inline void CSSetMonStatusRsp::set_mon_status(::google::protobuf::uint32 value) {
  set_has_mon_status();
  mon_status_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomReq

// -------------------------------------------------------------------

// PVPRoomBase

// required uint32 room_id = 1;
inline bool PVPRoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPRoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPRoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPRoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVPRoomBase::room_id() const {
  return room_id_;
}
inline void PVPRoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVPRoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPRoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPRoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPRoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVPRoomBase::top_level() const {
  return top_level_;
}
inline void PVPRoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVPRoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPRoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPRoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPRoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::current_online() const {
  return current_online_;
}
inline void PVPRoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVPRoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPRoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPRoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPRoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVPRoomBase::max_online() const {
  return max_online_;
}
inline void PVPRoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVPQueryRoomRsp

// repeated .PVPRoomBase rooms = 1;
inline int CSPVPQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVPQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVPRoomBase& CSPVPQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVPRoomBase* CSPVPQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >&
CSPVPQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPRoomBase >*
CSPVPQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVPBaseInfoRsp

// required uint32 winning = 1;
inline bool CSPVPBaseInfoRsp::has_winning() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_winning() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_has_winning() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPBaseInfoRsp::clear_winning() {
  winning_ = 0u;
  clear_has_winning();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::winning() const {
  return winning_;
}
inline void CSPVPBaseInfoRsp::set_winning(::google::protobuf::uint32 value) {
  set_has_winning();
  winning_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVPBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVPBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVPBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVPCreateRoomReq

// required uint32 type = 1;
inline bool CSPVPCreateRoomReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPCreateRoomReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::type() const {
  return type_;
}
inline void CSPVPCreateRoomReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVPCreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPCreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPCreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPCreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVPCreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// PVPSeatBase

// required uint32 id = 1;
inline bool PVPSeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPSeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPSeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPSeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVPSeatBase::id() const {
  return id_;
}
inline void PVPSeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVPSeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPSeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPSeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPSeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVPSeatBase::avatar() const {
  return avatar_;
}
inline void PVPSeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool PVPSeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPSeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPSeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPSeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVPSeatBase::name() const {
  return *name_;
}
inline void PVPSeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVPSeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPSeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVPSeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool PVPSeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPSeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPSeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPSeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVPSeatBase::level() const {
  return level_;
}
inline void PVPSeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVPSeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVPSeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVPSeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVPSeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVPSeatBase::ready() const {
  return ready_;
}
inline void PVPSeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSPVPJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVPJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVPJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 type = 2;
inline bool CSPVPJoinRoomRsp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVPJoinRoomRsp::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::type() const {
  return type_;
}
inline void CSPVPJoinRoomRsp::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 top_level = 3;
inline bool CSPVPJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVPJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVPJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVPJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVPJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVPSeatBase seats = 4;
inline int CSPVPJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVPJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVPSeatBase& CSPVPJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVPSeatBase* CSPVPJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >&
CSPVPJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVPSeatBase >*
CSPVPJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVPExitRoomReq

// -------------------------------------------------------------------

// CSPVPExitRoomRsp

// -------------------------------------------------------------------

// CSPVPCloseRoomRsp

// -------------------------------------------------------------------

// CSPVPChangeSeatReq

// required uint32 seat = 1;
inline bool CSPVPChangeSeatReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPChangeSeatReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPChangeSeatReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPChangeSeatReq::seat() const {
  return seat_;
}
inline void CSPVPChangeSeatReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPReadyReq

// -------------------------------------------------------------------

// CSPVPCancelReadyReq

// -------------------------------------------------------------------

// CSPVPKickoffReq

// required uint32 seat = 1;
inline bool CSPVPKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVPKickoffReq::seat() const {
  return seat_;
}
inline void CSPVPKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVPKickoffRsp

// -------------------------------------------------------------------

// CSPVPStartReq

// -------------------------------------------------------------------

// CSPVPStartRsp

// required uint32 mapid = 1;
inline bool CSPVPStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVPStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVPStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVPStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVPStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVPStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPPVEBattleReq

// -------------------------------------------------------------------

// CSPPVEBattleRsp

// repeated uint32 ids = 1;
inline int CSPPVEBattleRsp::ids_size() const {
  return ids_.size();
}
inline void CSPPVEBattleRsp::clear_ids() {
  ids_.Clear();
}
inline ::google::protobuf::uint32 CSPPVEBattleRsp::ids(int index) const {
  return ids_.Get(index);
}
inline void CSPPVEBattleRsp::set_ids(int index, ::google::protobuf::uint32 value) {
  ids_.Set(index, value);
}
inline void CSPPVEBattleRsp::add_ids(::google::protobuf::uint32 value) {
  ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSPPVEBattleRsp::ids() const {
  return ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSPPVEBattleRsp::mutable_ids() {
  return &ids_;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomReq

// -------------------------------------------------------------------

// PVERoomBase

// required uint32 room_id = 1;
inline bool PVERoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVERoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVERoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVERoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 PVERoomBase::room_id() const {
  return room_id_;
}
inline void PVERoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool PVERoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVERoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVERoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVERoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 PVERoomBase::top_level() const {
  return top_level_;
}
inline void PVERoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool PVERoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVERoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVERoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVERoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 PVERoomBase::current_online() const {
  return current_online_;
}
inline void PVERoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool PVERoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVERoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVERoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVERoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 PVERoomBase::max_online() const {
  return max_online_;
}
inline void PVERoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSPVEQueryRoomRsp

// repeated .PVERoomBase rooms = 1;
inline int CSPVEQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSPVEQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::PVERoomBase& CSPVEQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::PVERoomBase* CSPVEQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVERoomBase >&
CSPVEQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVERoomBase >*
CSPVEQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSPVEBaseInfoRsp

// required uint32 countdown = 1;
inline bool CSPVEBaseInfoRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEBaseInfoRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::countdown() const {
  return countdown_;
}
inline void CSPVEBaseInfoRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// required uint32 remain_times = 2;
inline bool CSPVEBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSPVEBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSPVEBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSPVECreateRoomReq

// required uint32 top_level = 1;
inline bool CSPVECreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVECreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVECreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVECreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSPVECreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 battle_id = 2;
inline bool CSPVECreateRoomReq::has_battle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVECreateRoomReq::set_has_battle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVECreateRoomReq::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVECreateRoomReq::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 CSPVECreateRoomReq::battle_id() const {
  return battle_id_;
}
inline void CSPVECreateRoomReq::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomReq

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomFailureRsp

// required uint32 errcode = 1;
inline bool CSPVEJoinRoomFailureRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomFailureRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomFailureRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomFailureRsp::errcode() const {
  return errcode_;
}
inline void CSPVEJoinRoomFailureRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// PVESeatBase

// required uint32 id = 1;
inline bool PVESeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVESeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVESeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVESeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PVESeatBase::id() const {
  return id_;
}
inline void PVESeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool PVESeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVESeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVESeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVESeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 PVESeatBase::avatar() const {
  return avatar_;
}
inline void PVESeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool PVESeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVESeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVESeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVESeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PVESeatBase::name() const {
  return *name_;
}
inline void PVESeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PVESeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVESeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PVESeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool PVESeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVESeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVESeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVESeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 PVESeatBase::level() const {
  return level_;
}
inline void PVESeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool PVESeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVESeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVESeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVESeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool PVESeatBase::ready() const {
  return ready_;
}
inline void PVESeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSPVEJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSPVEJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSPVEJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CSPVEJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVEJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVEJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSPVEJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSPVEJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .PVESeatBase seats = 3;
inline int CSPVEJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSPVEJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::PVESeatBase& CSPVEJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::PVESeatBase* CSPVEJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PVESeatBase >&
CSPVEJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::PVESeatBase >*
CSPVEJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSPVEExitRoomReq

// -------------------------------------------------------------------

// CSPVEExitRoomRsp

// -------------------------------------------------------------------

// CSPVECloseRoomRsp

// -------------------------------------------------------------------

// CSPVEReadyReq

// -------------------------------------------------------------------

// CSPVECancelReadyReq

// -------------------------------------------------------------------

// CSPVEKickoffReq

// required uint32 seat = 1;
inline bool CSPVEKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSPVEKickoffReq::seat() const {
  return seat_;
}
inline void CSPVEKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSPVEKickoffRsp

// -------------------------------------------------------------------

// CSPVEStartReq

// -------------------------------------------------------------------

// CSPVEStartRsp

// required uint32 mapid = 1;
inline bool CSPVEStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVEStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVEStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVEStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSPVEStartRsp::mapid() const {
  return mapid_;
}
inline void CSPVEStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// CSPVAIReq

// required uint32 userid = 1;
inline bool CSPVAIReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIReq::userid() const {
  return userid_;
}
inline void CSPVAIReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVAIReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVAIReq::reg_time() const {
  return reg_time_;
}
inline void CSPVAIReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVAIReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVAIReq::channel_id() const {
  return channel_id_;
}
inline void CSPVAIReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional .PB_INSTANCE_TYPE_T type = 4 [default = PB_INSTANCE_TYPE_PVAI];
inline bool CSPVAIReq::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVAIReq::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVAIReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVAIReq::clear_type() {
  type_ = 4;
  clear_has_type();
}
inline PB_INSTANCE_TYPE_T CSPVAIReq::type() const {
  return static_cast< PB_INSTANCE_TYPE_T >(type_);
}
inline void CSPVAIReq::set_type(PB_INSTANCE_TYPE_T value) {
  GOOGLE_DCHECK(PB_INSTANCE_TYPE_T_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoReq

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAIInfo

// required uint32 userid = 1;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::userid() const {
  return userid_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::reg_time() const {
  return reg_time_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::channel_id() const {
  return channel_id_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required uint32 rank = 4;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// required bytes name = 5;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAIInfo::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAIInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 type = 6;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::type() const {
  return type_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 lv = 7;
inline bool CSPVAIInfoRsq_CSPVAIInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq_CSPVAIInfo::lv() const {
  return lv_;
}
inline void CSPVAIInfoRsq_CSPVAIInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq_CSPVAILog

// required bytes name = 1;
inline bool CSPVAIInfoRsq_CSPVAILog::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSPVAIInfoRsq_CSPVAILog::name() const {
  return *name_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSPVAIInfoRsq_CSPVAILog::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSPVAIInfoRsq_CSPVAILog::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool direct = 2;
inline bool CSPVAIInfoRsq_CSPVAILog::has_direct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_direct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_direct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_direct() {
  direct_ = false;
  clear_has_direct();
}
inline bool CSPVAIInfoRsq_CSPVAILog::direct() const {
  return direct_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_direct(bool value) {
  set_has_direct();
  direct_ = value;
}

// required bool win = 3;
inline bool CSPVAIInfoRsq_CSPVAILog::has_win() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_has_win() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_has_win() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVAIInfoRsq_CSPVAILog::clear_win() {
  win_ = false;
  clear_has_win();
}
inline bool CSPVAIInfoRsq_CSPVAILog::win() const {
  return win_;
}
inline void CSPVAIInfoRsq_CSPVAILog::set_win(bool value) {
  set_has_win();
  win_ = value;
}

// -------------------------------------------------------------------

// CSPVAIInfoRsq

// required uint32 rank = 1;
inline bool CSPVAIInfoRsq::has_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVAIInfoRsq::set_has_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVAIInfoRsq::clear_has_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVAIInfoRsq::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CSPVAIInfoRsq::rank() const {
  return rank_;
}
inline void CSPVAIInfoRsq::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
}

// repeated .CSPVAIInfoRsq.CSPVAIInfo infos = 2;
inline int CSPVAIInfoRsq::infos_size() const {
  return infos_.size();
}
inline void CSPVAIInfoRsq::clear_infos() {
  infos_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAIInfo& CSPVAIInfoRsq::infos(int index) const {
  return infos_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::mutable_infos(int index) {
  return infos_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAIInfo* CSPVAIInfoRsq::add_infos() {
  return infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >&
CSPVAIInfoRsq::infos() const {
  return infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAIInfo >*
CSPVAIInfoRsq::mutable_infos() {
  return &infos_;
}

// repeated .CSPVAIInfoRsq.CSPVAILog logs = 3;
inline int CSPVAIInfoRsq::logs_size() const {
  return logs_.size();
}
inline void CSPVAIInfoRsq::clear_logs() {
  logs_.Clear();
}
inline const ::CSPVAIInfoRsq_CSPVAILog& CSPVAIInfoRsq::logs(int index) const {
  return logs_.Get(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::CSPVAIInfoRsq_CSPVAILog* CSPVAIInfoRsq::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >&
CSPVAIInfoRsq::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSPVAIInfoRsq_CSPVAILog >*
CSPVAIInfoRsq::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// CSPVP2Req

// -------------------------------------------------------------------

// CSPVP2CancelReq

// -------------------------------------------------------------------

// CSPVXRewardRsp

// required bool is_win = 1;
inline bool CSPVXRewardRsp::has_is_win() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSPVXRewardRsp::set_has_is_win() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSPVXRewardRsp::clear_has_is_win() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSPVXRewardRsp::clear_is_win() {
  is_win_ = false;
  clear_has_is_win();
}
inline bool CSPVXRewardRsp::is_win() const {
  return is_win_;
}
inline void CSPVXRewardRsp::set_is_win(bool value) {
  set_has_is_win();
  is_win_ = value;
}

// required uint32 pvx_type = 2;
inline bool CSPVXRewardRsp::has_pvx_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSPVXRewardRsp::set_has_pvx_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSPVXRewardRsp::clear_has_pvx_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSPVXRewardRsp::clear_pvx_type() {
  pvx_type_ = 0u;
  clear_has_pvx_type();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::pvx_type() const {
  return pvx_type_;
}
inline void CSPVXRewardRsp::set_pvx_type(::google::protobuf::uint32 value) {
  set_has_pvx_type();
  pvx_type_ = value;
}

// required uint32 coin = 3;
inline bool CSPVXRewardRsp::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSPVXRewardRsp::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSPVXRewardRsp::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSPVXRewardRsp::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::coin() const {
  return coin_;
}
inline void CSPVXRewardRsp::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
}

// required uint32 reputation = 4;
inline bool CSPVXRewardRsp::has_reputation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSPVXRewardRsp::set_has_reputation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSPVXRewardRsp::clear_has_reputation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSPVXRewardRsp::clear_reputation() {
  reputation_ = 0u;
  clear_has_reputation();
}
inline ::google::protobuf::uint32 CSPVXRewardRsp::reputation() const {
  return reputation_;
}
inline void CSPVXRewardRsp::set_reputation(::google::protobuf::uint32 value) {
  set_has_reputation();
  reputation_ = value;
}

// -------------------------------------------------------------------

// CSEquipInlayGemReq

// required uint32 equip_pos = 1;
inline bool CSEquipInlayGemReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::equip_pos() const {
  return equip_pos_;
}
inline void CSEquipInlayGemReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// required uint32 gem_id = 2;
inline bool CSEquipInlayGemReq::has_gem_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipInlayGemReq::set_has_gem_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipInlayGemReq::clear_has_gem_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipInlayGemReq::clear_gem_id() {
  gem_id_ = 0u;
  clear_has_gem_id();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::gem_id() const {
  return gem_id_;
}
inline void CSEquipInlayGemReq::set_gem_id(::google::protobuf::uint32 value) {
  set_has_gem_id();
  gem_id_ = value;
}

// required uint32 hole_index = 3;
inline bool CSEquipInlayGemReq::has_hole_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipInlayGemReq::set_has_hole_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipInlayGemReq::clear_has_hole_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipInlayGemReq::clear_hole_index() {
  hole_index_ = 0u;
  clear_has_hole_index();
}
inline ::google::protobuf::uint32 CSEquipInlayGemReq::hole_index() const {
  return hole_index_;
}
inline void CSEquipInlayGemReq::set_hole_index(::google::protobuf::uint32 value) {
  set_has_hole_index();
  hole_index_ = value;
}

// -------------------------------------------------------------------

// CSEquipInlayGemRsp

// required uint32 ret = 1;
inline bool CSEquipInlayGemRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipInlayGemRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipInlayGemRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSEquipInlayGemRsp::ret() const {
  return ret_;
}
inline void CSEquipInlayGemRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrReq

// required uint32 equip_pos = 1;
inline bool CSResetGemAttrReq::has_equip_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrReq::set_has_equip_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrReq::clear_has_equip_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrReq::clear_equip_pos() {
  equip_pos_ = 0u;
  clear_has_equip_pos();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::equip_pos() const {
  return equip_pos_;
}
inline void CSResetGemAttrReq::set_equip_pos(::google::protobuf::uint32 value) {
  set_has_equip_pos();
  equip_pos_ = value;
}

// repeated uint32 holes_index = 2;
inline int CSResetGemAttrReq::holes_index_size() const {
  return holes_index_.size();
}
inline void CSResetGemAttrReq::clear_holes_index() {
  holes_index_.Clear();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::holes_index(int index) const {
  return holes_index_.Get(index);
}
inline void CSResetGemAttrReq::set_holes_index(int index, ::google::protobuf::uint32 value) {
  holes_index_.Set(index, value);
}
inline void CSResetGemAttrReq::add_holes_index(::google::protobuf::uint32 value) {
  holes_index_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSResetGemAttrReq::holes_index() const {
  return holes_index_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSResetGemAttrReq::mutable_holes_index() {
  return &holes_index_;
}

// optional uint32 cost_attr_key = 3;
inline bool CSResetGemAttrReq::has_cost_attr_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSResetGemAttrReq::set_has_cost_attr_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSResetGemAttrReq::clear_has_cost_attr_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSResetGemAttrReq::clear_cost_attr_key() {
  cost_attr_key_ = 0u;
  clear_has_cost_attr_key();
}
inline ::google::protobuf::uint32 CSResetGemAttrReq::cost_attr_key() const {
  return cost_attr_key_;
}
inline void CSResetGemAttrReq::set_cost_attr_key(::google::protobuf::uint32 value) {
  set_has_cost_attr_key();
  cost_attr_key_ = value;
}

// -------------------------------------------------------------------

// CSResetGemAttrRsp

// required uint32 ret = 1;
inline bool CSResetGemAttrRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSResetGemAttrRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSResetGemAttrRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSResetGemAttrRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSResetGemAttrRsp::ret() const {
  return ret_;
}
inline void CSResetGemAttrRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthReq

// required uint32 pos = 1;
inline bool CSEquipmentStrengthReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthReq::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthReq::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthReq::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentStrengthRsp

// required uint32 result = 1;
inline bool CSEquipmentStrengthRsp::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentStrengthRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::result() const {
  return result_;
}
inline void CSEquipmentStrengthRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// required uint32 pos = 2;
inline bool CSEquipmentStrengthRsp::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentStrengthRsp::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentStrengthRsp::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 CSEquipmentStrengthRsp::pos() const {
  return pos_;
}
inline void CSEquipmentStrengthRsp::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeReq

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeReq::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeReq::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeReq::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeReq::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeReq::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// repeated uint32 from_item_pos = 2;
inline int CSEquipmentComposeReq::from_item_pos_size() const {
  return from_item_pos_.size();
}
inline void CSEquipmentComposeReq::clear_from_item_pos() {
  from_item_pos_.Clear();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::from_item_pos(int index) const {
  return from_item_pos_.Get(index);
}
inline void CSEquipmentComposeReq::set_from_item_pos(int index, ::google::protobuf::uint32 value) {
  from_item_pos_.Set(index, value);
}
inline void CSEquipmentComposeReq::add_from_item_pos(::google::protobuf::uint32 value) {
  from_item_pos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSEquipmentComposeReq::from_item_pos() const {
  return from_item_pos_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSEquipmentComposeReq::mutable_from_item_pos() {
  return &from_item_pos_;
}

// optional uint32 multi = 3 [default = 1];
inline bool CSEquipmentComposeReq::has_multi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSEquipmentComposeReq::set_has_multi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSEquipmentComposeReq::clear_has_multi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSEquipmentComposeReq::clear_multi() {
  multi_ = 1u;
  clear_has_multi();
}
inline ::google::protobuf::uint32 CSEquipmentComposeReq::multi() const {
  return multi_;
}
inline void CSEquipmentComposeReq::set_multi(::google::protobuf::uint32 value) {
  set_has_multi();
  multi_ = value;
}

// -------------------------------------------------------------------

// CSEquipmentComposeRsp

// required uint32 exchange_item_id = 1;
inline bool CSEquipmentComposeRsp::has_exchange_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_exchange_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_has_exchange_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSEquipmentComposeRsp::clear_exchange_item_id() {
  exchange_item_id_ = 0u;
  clear_has_exchange_item_id();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::exchange_item_id() const {
  return exchange_item_id_;
}
inline void CSEquipmentComposeRsp::set_exchange_item_id(::google::protobuf::uint32 value) {
  set_has_exchange_item_id();
  exchange_item_id_ = value;
}

// required uint32 result = 2;
inline bool CSEquipmentComposeRsp::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSEquipmentComposeRsp::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSEquipmentComposeRsp::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CSEquipmentComposeRsp::result() const {
  return result_;
}
inline void CSEquipmentComposeRsp::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// CSTaskInfoReq

// -------------------------------------------------------------------

// TaskInfo

// required uint32 task_id = 1;
inline bool TaskInfo::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskInfo::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskInfo::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskInfo::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 TaskInfo::task_id() const {
  return task_id_;
}
inline void TaskInfo::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool TaskInfo::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskInfo::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskInfo::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskInfo::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 TaskInfo::step_id() const {
  return step_id_;
}
inline void TaskInfo::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool TaskInfo::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskInfo::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskInfo::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskInfo::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 TaskInfo::step_value() const {
  return step_value_;
}
inline void TaskInfo::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskInfoRsp

// repeated uint32 acceptable_tasks = 1;
inline int CSTaskInfoRsp::acceptable_tasks_size() const {
  return acceptable_tasks_.size();
}
inline void CSTaskInfoRsp::clear_acceptable_tasks() {
  acceptable_tasks_.Clear();
}
inline ::google::protobuf::uint32 CSTaskInfoRsp::acceptable_tasks(int index) const {
  return acceptable_tasks_.Get(index);
}
inline void CSTaskInfoRsp::set_acceptable_tasks(int index, ::google::protobuf::uint32 value) {
  acceptable_tasks_.Set(index, value);
}
inline void CSTaskInfoRsp::add_acceptable_tasks(::google::protobuf::uint32 value) {
  acceptable_tasks_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSTaskInfoRsp::acceptable_tasks() const {
  return acceptable_tasks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSTaskInfoRsp::mutable_acceptable_tasks() {
  return &acceptable_tasks_;
}

// repeated .TaskInfo accept_tasks = 2;
inline int CSTaskInfoRsp::accept_tasks_size() const {
  return accept_tasks_.size();
}
inline void CSTaskInfoRsp::clear_accept_tasks() {
  accept_tasks_.Clear();
}
inline const ::TaskInfo& CSTaskInfoRsp::accept_tasks(int index) const {
  return accept_tasks_.Get(index);
}
inline ::TaskInfo* CSTaskInfoRsp::mutable_accept_tasks(int index) {
  return accept_tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskInfoRsp::add_accept_tasks() {
  return accept_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskInfoRsp::accept_tasks() const {
  return accept_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskInfoRsp::mutable_accept_tasks() {
  return &accept_tasks_;
}

// -------------------------------------------------------------------

// CSTaskDoStepReq

// required uint32 task_id = 1;
inline bool CSTaskDoStepReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepReq::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepReq::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepReq::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepReq::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepReq::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepReq::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepReq::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepReq::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepReq::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepReq::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepReq::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepReq::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskDoStepRsp

// required uint32 task_id = 1;
inline bool CSTaskDoStepRsp::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskDoStepRsp::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskDoStepRsp::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskDoStepRsp::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::task_id() const {
  return task_id_;
}
inline void CSTaskDoStepRsp::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required uint32 step_id = 2;
inline bool CSTaskDoStepRsp::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskDoStepRsp::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskDoStepRsp::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_id() const {
  return step_id_;
}
inline void CSTaskDoStepRsp::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool CSTaskDoStepRsp::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTaskDoStepRsp::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTaskDoStepRsp::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTaskDoStepRsp::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 CSTaskDoStepRsp::step_value() const {
  return step_value_;
}
inline void CSTaskDoStepRsp::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// -------------------------------------------------------------------

// CSTaskLogReq

// -------------------------------------------------------------------

// CSTaskLogRsp

// repeated .TaskInfo tasks = 1;
inline int CSTaskLogRsp::tasks_size() const {
  return tasks_.size();
}
inline void CSTaskLogRsp::clear_tasks() {
  tasks_.Clear();
}
inline const ::TaskInfo& CSTaskLogRsp::tasks(int index) const {
  return tasks_.Get(index);
}
inline ::TaskInfo* CSTaskLogRsp::mutable_tasks(int index) {
  return tasks_.Mutable(index);
}
inline ::TaskInfo* CSTaskLogRsp::add_tasks() {
  return tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TaskInfo >&
CSTaskLogRsp::tasks() const {
  return tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::TaskInfo >*
CSTaskLogRsp::mutable_tasks() {
  return &tasks_;
}

// -------------------------------------------------------------------

// CSTaskStatusReq

// required uint32 task_id = 1;
inline bool CSTaskStatusReq::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskStatusReq::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskStatusReq::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskStatusReq::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskStatusReq::task_id() const {
  return task_id_;
}
inline void CSTaskStatusReq::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// CSTaskStatusRsp

// required uint32 task_id = 1;
inline bool CSTaskStatusRsp::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTaskStatusRsp::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTaskStatusRsp::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTaskStatusRsp::clear_task_id() {
  task_id_ = 0u;
  clear_has_task_id();
}
inline ::google::protobuf::uint32 CSTaskStatusRsp::task_id() const {
  return task_id_;
}
inline void CSTaskStatusRsp::set_task_id(::google::protobuf::uint32 value) {
  set_has_task_id();
  task_id_ = value;
}

// required .PB_TASK_STATUS_T status = 2;
inline bool CSTaskStatusRsp::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTaskStatusRsp::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTaskStatusRsp::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTaskStatusRsp::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline PB_TASK_STATUS_T CSTaskStatusRsp::status() const {
  return static_cast< PB_TASK_STATUS_T >(status_);
}
inline void CSTaskStatusRsp::set_status(PB_TASK_STATUS_T value) {
  GOOGLE_DCHECK(PB_TASK_STATUS_T_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// DailyTaskInfo

// required uint32 daily_task_id = 1;
inline bool DailyTaskInfo::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyTaskInfo::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyTaskInfo::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  return daily_task_id_;
}
inline void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// required int32 daily_task_status = 2;
inline bool DailyTaskInfo::has_daily_task_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyTaskInfo::set_has_daily_task_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyTaskInfo::clear_has_daily_task_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyTaskInfo::clear_daily_task_status() {
  daily_task_status_ = 0;
  clear_has_daily_task_status();
}
inline ::google::protobuf::int32 DailyTaskInfo::daily_task_status() const {
  return daily_task_status_;
}
inline void DailyTaskInfo::set_daily_task_status(::google::protobuf::int32 value) {
  set_has_daily_task_status();
  daily_task_status_ = value;
}

// -------------------------------------------------------------------

// CSDailyTaskInfoReq

// -------------------------------------------------------------------

// CSDailyTaskInfoRsp

// repeated .DailyTaskInfo daily_tasks = 1;
inline int CSDailyTaskInfoRsp::daily_tasks_size() const {
  return daily_tasks_.size();
}
inline void CSDailyTaskInfoRsp::clear_daily_tasks() {
  daily_tasks_.Clear();
}
inline const ::DailyTaskInfo& CSDailyTaskInfoRsp::daily_tasks(int index) const {
  return daily_tasks_.Get(index);
}
inline ::DailyTaskInfo* CSDailyTaskInfoRsp::mutable_daily_tasks(int index) {
  return daily_tasks_.Mutable(index);
}
inline ::DailyTaskInfo* CSDailyTaskInfoRsp::add_daily_tasks() {
  return daily_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
CSDailyTaskInfoRsp::daily_tasks() const {
  return daily_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
CSDailyTaskInfoRsp::mutable_daily_tasks() {
  return &daily_tasks_;
}

// -------------------------------------------------------------------

// CSAcceptDailyTaskReq

// required uint32 daily_task_id = 1;
inline bool CSAcceptDailyTaskReq::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAcceptDailyTaskReq::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAcceptDailyTaskReq::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAcceptDailyTaskReq::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSAcceptDailyTaskReq::daily_task_id() const {
  return daily_task_id_;
}
inline void CSAcceptDailyTaskReq::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSAcceptDailyTaskRsp

// required bool succ = 1;
inline bool CSAcceptDailyTaskRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAcceptDailyTaskRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAcceptDailyTaskRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAcceptDailyTaskRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSAcceptDailyTaskRsp::succ() const {
  return succ_;
}
inline void CSAcceptDailyTaskRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 daily_task_id = 2;
inline bool CSAcceptDailyTaskRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAcceptDailyTaskRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAcceptDailyTaskRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAcceptDailyTaskRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSAcceptDailyTaskRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSAcceptDailyTaskRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSGiveUpDailyTaskReq

// -------------------------------------------------------------------

// CSGiveUpDailyTaskRsp

// required bool succ = 1;
inline bool CSGiveUpDailyTaskRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGiveUpDailyTaskRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGiveUpDailyTaskRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGiveUpDailyTaskRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGiveUpDailyTaskRsp::succ() const {
  return succ_;
}
inline void CSGiveUpDailyTaskRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional uint32 daily_task_id = 2;
inline bool CSGiveUpDailyTaskRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGiveUpDailyTaskRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGiveUpDailyTaskRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGiveUpDailyTaskRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSGiveUpDailyTaskRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSGiveUpDailyTaskRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyTaskRewardReq

// -------------------------------------------------------------------

// CSGetDailyTaskRewardRsp

// required bool succ = 1;
inline bool CSGetDailyTaskRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyTaskRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyTaskRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyTaskRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyTaskRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyTaskRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// optional uint32 daily_task_id = 2;
inline bool CSGetDailyTaskRewardRsp::has_daily_task_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetDailyTaskRewardRsp::set_has_daily_task_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetDailyTaskRewardRsp::clear_has_daily_task_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetDailyTaskRewardRsp::clear_daily_task_id() {
  daily_task_id_ = 0u;
  clear_has_daily_task_id();
}
inline ::google::protobuf::uint32 CSGetDailyTaskRewardRsp::daily_task_id() const {
  return daily_task_id_;
}
inline void CSGetDailyTaskRewardRsp::set_daily_task_id(::google::protobuf::uint32 value) {
  set_has_daily_task_id();
  daily_task_id_ = value;
}

// -------------------------------------------------------------------

// CSNotifyUpdateDailyTaskInfoRsp

// repeated .DailyTaskInfo update_daily_tasks = 1;
inline int CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks_size() const {
  return update_daily_tasks_.size();
}
inline void CSNotifyUpdateDailyTaskInfoRsp::clear_update_daily_tasks() {
  update_daily_tasks_.Clear();
}
inline const ::DailyTaskInfo& CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks(int index) const {
  return update_daily_tasks_.Get(index);
}
inline ::DailyTaskInfo* CSNotifyUpdateDailyTaskInfoRsp::mutable_update_daily_tasks(int index) {
  return update_daily_tasks_.Mutable(index);
}
inline ::DailyTaskInfo* CSNotifyUpdateDailyTaskInfoRsp::add_update_daily_tasks() {
  return update_daily_tasks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >&
CSNotifyUpdateDailyTaskInfoRsp::update_daily_tasks() const {
  return update_daily_tasks_;
}
inline ::google::protobuf::RepeatedPtrField< ::DailyTaskInfo >*
CSNotifyUpdateDailyTaskInfoRsp::mutable_update_daily_tasks() {
  return &update_daily_tasks_;
}

// -------------------------------------------------------------------

// CSGetDailyGoalRewardReq

// -------------------------------------------------------------------

// CSGetDailyGoalRewardRsp

// required bool succ = 1;
inline bool CSGetDailyGoalRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyGoalRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyGoalRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyGoalRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyGoalRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyGoalRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyRewardReq

// required uint32 key = 1;
inline bool CSGetDailyRewardReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyRewardReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyRewardReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyRewardReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSGetDailyRewardReq::key() const {
  return key_;
}
inline void CSGetDailyRewardReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// CSGetDailyRewardRsp

// required bool succ = 1;
inline bool CSGetDailyRewardRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetDailyRewardRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetDailyRewardRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetDailyRewardRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSGetDailyRewardRsp::succ() const {
  return succ_;
}
inline void CSGetDailyRewardRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 key = 2;
inline bool CSGetDailyRewardRsp::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetDailyRewardRsp::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetDailyRewardRsp::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetDailyRewardRsp::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSGetDailyRewardRsp::key() const {
  return key_;
}
inline void CSGetDailyRewardRsp::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// -------------------------------------------------------------------

// CSSelectPVAIACCURewardReq

// -------------------------------------------------------------------

// CSSelectPVAIACCURewardRsp

// required uint32 accu_coin = 1;
inline bool CSSelectPVAIACCURewardRsp::has_accu_coin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_accu_coin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_accu_coin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSelectPVAIACCURewardRsp::clear_accu_coin() {
  accu_coin_ = 0u;
  clear_has_accu_coin();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::accu_coin() const {
  return accu_coin_;
}
inline void CSSelectPVAIACCURewardRsp::set_accu_coin(::google::protobuf::uint32 value) {
  set_has_accu_coin();
  accu_coin_ = value;
}

// required uint32 accu_reputation = 2;
inline bool CSSelectPVAIACCURewardRsp::has_accu_reputation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_accu_reputation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_accu_reputation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSelectPVAIACCURewardRsp::clear_accu_reputation() {
  accu_reputation_ = 0u;
  clear_has_accu_reputation();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::accu_reputation() const {
  return accu_reputation_;
}
inline void CSSelectPVAIACCURewardRsp::set_accu_reputation(::google::protobuf::uint32 value) {
  set_has_accu_reputation();
  accu_reputation_ = value;
}

// required uint32 one_hour_coin = 3;
inline bool CSSelectPVAIACCURewardRsp::has_one_hour_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_one_hour_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_one_hour_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSelectPVAIACCURewardRsp::clear_one_hour_coin() {
  one_hour_coin_ = 0u;
  clear_has_one_hour_coin();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::one_hour_coin() const {
  return one_hour_coin_;
}
inline void CSSelectPVAIACCURewardRsp::set_one_hour_coin(::google::protobuf::uint32 value) {
  set_has_one_hour_coin();
  one_hour_coin_ = value;
}

// required uint32 one_hour_reputation = 4;
inline bool CSSelectPVAIACCURewardRsp::has_one_hour_reputation() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSSelectPVAIACCURewardRsp::set_has_one_hour_reputation() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSSelectPVAIACCURewardRsp::clear_has_one_hour_reputation() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSSelectPVAIACCURewardRsp::clear_one_hour_reputation() {
  one_hour_reputation_ = 0u;
  clear_has_one_hour_reputation();
}
inline ::google::protobuf::uint32 CSSelectPVAIACCURewardRsp::one_hour_reputation() const {
  return one_hour_reputation_;
}
inline void CSSelectPVAIACCURewardRsp::set_one_hour_reputation(::google::protobuf::uint32 value) {
  set_has_one_hour_reputation();
  one_hour_reputation_ = value;
}

// -------------------------------------------------------------------

// CSAttributesSetReq

// required uint32 key = 1;
inline bool CSAttributesSetReq::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesSetReq::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesSetReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesSetReq::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::key() const {
  return key_;
}
inline void CSAttributesSetReq::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesSetReq::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesSetReq::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesSetReq::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesSetReq::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesSetReq::value() const {
  return value_;
}
inline void CSAttributesSetReq::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesReq

// repeated uint32 keys = 1;
inline int CSAttributesReq::keys_size() const {
  return keys_.size();
}
inline void CSAttributesReq::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::uint32 CSAttributesReq::keys(int index) const {
  return keys_.Get(index);
}
inline void CSAttributesReq::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
}
inline void CSAttributesReq::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSAttributesReq::keys() const {
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSAttributesReq::mutable_keys() {
  return &keys_;
}

// -------------------------------------------------------------------

// CSAttributesRsp_KeyValue

// required uint32 key = 1;
inline bool CSAttributesRsp_KeyValue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAttributesRsp_KeyValue::clear_key() {
  key_ = 0u;
  clear_has_key();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::key() const {
  return key_;
}
inline void CSAttributesRsp_KeyValue::set_key(::google::protobuf::uint32 value) {
  set_has_key();
  key_ = value;
}

// required uint32 value = 2;
inline bool CSAttributesRsp_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAttributesRsp_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAttributesRsp_KeyValue::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CSAttributesRsp_KeyValue::value() const {
  return value_;
}
inline void CSAttributesRsp_KeyValue::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// CSAttributesRsp

// repeated .CSAttributesRsp.KeyValue values = 1;
inline int CSAttributesRsp::values_size() const {
  return values_.size();
}
inline void CSAttributesRsp::clear_values() {
  values_.Clear();
}
inline const ::CSAttributesRsp_KeyValue& CSAttributesRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSAttributesRsp_KeyValue* CSAttributesRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >&
CSAttributesRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSAttributesRsp_KeyValue >*
CSAttributesRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSOnceSetReq

// required uint32 index = 1;
inline bool CSOnceSetReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceSetReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceSetReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceSetReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceSetReq::index() const {
  return index_;
}
inline void CSOnceSetReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSOnceReq

// repeated uint32 indexs = 1;
inline int CSOnceReq::indexs_size() const {
  return indexs_.size();
}
inline void CSOnceReq::clear_indexs() {
  indexs_.Clear();
}
inline ::google::protobuf::uint32 CSOnceReq::indexs(int index) const {
  return indexs_.Get(index);
}
inline void CSOnceReq::set_indexs(int index, ::google::protobuf::uint32 value) {
  indexs_.Set(index, value);
}
inline void CSOnceReq::add_indexs(::google::protobuf::uint32 value) {
  indexs_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSOnceReq::indexs() const {
  return indexs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSOnceReq::mutable_indexs() {
  return &indexs_;
}

// -------------------------------------------------------------------

// CSOnceRsp_Once

// required uint32 index = 1;
inline bool CSOnceRsp_Once::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSOnceRsp_Once::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSOnceRsp_Once::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSOnceRsp_Once::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSOnceRsp_Once::index() const {
  return index_;
}
inline void CSOnceRsp_Once::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool is_set = 2;
inline bool CSOnceRsp_Once::has_is_set() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSOnceRsp_Once::set_has_is_set() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSOnceRsp_Once::clear_has_is_set() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSOnceRsp_Once::clear_is_set() {
  is_set_ = false;
  clear_has_is_set();
}
inline bool CSOnceRsp_Once::is_set() const {
  return is_set_;
}
inline void CSOnceRsp_Once::set_is_set(bool value) {
  set_has_is_set();
  is_set_ = value;
}

// -------------------------------------------------------------------

// CSOnceRsp

// repeated .CSOnceRsp.Once values = 1;
inline int CSOnceRsp::values_size() const {
  return values_.size();
}
inline void CSOnceRsp::clear_values() {
  values_.Clear();
}
inline const ::CSOnceRsp_Once& CSOnceRsp::values(int index) const {
  return values_.Get(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::mutable_values(int index) {
  return values_.Mutable(index);
}
inline ::CSOnceRsp_Once* CSOnceRsp::add_values() {
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >&
CSOnceRsp::values() const {
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSOnceRsp_Once >*
CSOnceRsp::mutable_values() {
  return &values_;
}

// -------------------------------------------------------------------

// CSTrainInfoReq

// -------------------------------------------------------------------

// CSTrainInfoRsp

// required uint32 potential = 1;
inline bool CSTrainInfoRsp::has_potential() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainInfoRsp::set_has_potential() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainInfoRsp::clear_has_potential() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainInfoRsp::clear_potential() {
  potential_ = 0u;
  clear_has_potential();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::potential() const {
  return potential_;
}
inline void CSTrainInfoRsp::set_potential(::google::protobuf::uint32 value) {
  set_has_potential();
  potential_ = value;
}

// required uint32 courage = 2;
inline bool CSTrainInfoRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainInfoRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainInfoRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainInfoRsp::clear_courage() {
  courage_ = 0u;
  clear_has_courage();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::courage() const {
  return courage_;
}
inline void CSTrainInfoRsp::set_courage(::google::protobuf::uint32 value) {
  set_has_courage();
  courage_ = value;
}

// required uint32 charm = 3;
inline bool CSTrainInfoRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainInfoRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainInfoRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainInfoRsp::clear_charm() {
  charm_ = 0u;
  clear_has_charm();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::charm() const {
  return charm_;
}
inline void CSTrainInfoRsp::set_charm(::google::protobuf::uint32 value) {
  set_has_charm();
  charm_ = value;
}

// required uint32 trick = 4;
inline bool CSTrainInfoRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainInfoRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainInfoRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainInfoRsp::clear_trick() {
  trick_ = 0u;
  clear_has_trick();
}
inline ::google::protobuf::uint32 CSTrainInfoRsp::trick() const {
  return trick_;
}
inline void CSTrainInfoRsp::set_trick(::google::protobuf::uint32 value) {
  set_has_trick();
  trick_ = value;
}

// -------------------------------------------------------------------

// CSTrainReq

// required uint32 type = 1;
inline bool CSTrainReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainReq::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CSTrainReq::type() const {
  return type_;
}
inline void CSTrainReq::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CSTrainRsp

// required int32 courage = 1;
inline bool CSTrainRsp::has_courage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSTrainRsp::set_has_courage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSTrainRsp::clear_has_courage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSTrainRsp::clear_courage() {
  courage_ = 0;
  clear_has_courage();
}
inline ::google::protobuf::int32 CSTrainRsp::courage() const {
  return courage_;
}
inline void CSTrainRsp::set_courage(::google::protobuf::int32 value) {
  set_has_courage();
  courage_ = value;
}

// required int32 charm = 2;
inline bool CSTrainRsp::has_charm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSTrainRsp::set_has_charm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSTrainRsp::clear_has_charm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSTrainRsp::clear_charm() {
  charm_ = 0;
  clear_has_charm();
}
inline ::google::protobuf::int32 CSTrainRsp::charm() const {
  return charm_;
}
inline void CSTrainRsp::set_charm(::google::protobuf::int32 value) {
  set_has_charm();
  charm_ = value;
}

// required int32 trick = 3;
inline bool CSTrainRsp::has_trick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSTrainRsp::set_has_trick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSTrainRsp::clear_has_trick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSTrainRsp::clear_trick() {
  trick_ = 0;
  clear_has_trick();
}
inline ::google::protobuf::int32 CSTrainRsp::trick() const {
  return trick_;
}
inline void CSTrainRsp::set_trick(::google::protobuf::int32 value) {
  set_has_trick();
  trick_ = value;
}

// required bool succ = 4;
inline bool CSTrainRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSTrainRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSTrainRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSTrainRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSTrainRsp::succ() const {
  return succ_;
}
inline void CSTrainRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSTrainDetermineReq

// -------------------------------------------------------------------

// CSTrainDetermineRsp

// -------------------------------------------------------------------

// CSExploreReq

// required uint32 option = 1;
inline bool CSExploreReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreReq::option() const {
  return option_;
}
inline void CSExploreReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreRsp

// required uint32 option = 1;
inline bool CSExploreRsp::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreRsp::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreRsp::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreRsp::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreRsp::option() const {
  return option_;
}
inline void CSExploreRsp::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// required uint32 map_id = 2;
inline bool CSExploreRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreRsp::map_id() const {
  return map_id_;
}
inline void CSExploreRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineReq

// required uint32 option = 1;
inline bool CSExploreDetermineReq::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineReq::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineReq::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineReq::clear_option() {
  option_ = 0u;
  clear_has_option();
}
inline ::google::protobuf::uint32 CSExploreDetermineReq::option() const {
  return option_;
}
inline void CSExploreDetermineReq::set_option(::google::protobuf::uint32 value) {
  set_has_option();
  option_ = value;
}

// -------------------------------------------------------------------

// CSExploreDetermineRsp

// required uint32 map_id = 1;
inline bool CSExploreDetermineRsp::has_map_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExploreDetermineRsp::set_has_map_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExploreDetermineRsp::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExploreDetermineRsp::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 CSExploreDetermineRsp::map_id() const {
  return map_id_;
}
inline void CSExploreDetermineRsp::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional .CSReward rewards = 2;
inline bool CSExploreDetermineRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExploreDetermineRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExploreDetermineRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExploreDetermineRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSExploreDetermineRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSExploreDetermineRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSQueryDowerReq

// -------------------------------------------------------------------

// CSQueryDowerRsp_Dower

// required uint32 id = 1;
inline bool CSQueryDowerRsp_Dower::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSQueryDowerRsp_Dower::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::id() const {
  return id_;
}
inline void CSQueryDowerRsp_Dower::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSQueryDowerRsp_Dower::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp_Dower::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::level() const {
  return level_;
}
inline void CSQueryDowerRsp_Dower::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 max_level = 3;
inline bool CSQueryDowerRsp_Dower::has_max_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_max_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_has_max_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSQueryDowerRsp_Dower::clear_max_level() {
  max_level_ = 0u;
  clear_has_max_level();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::max_level() const {
  return max_level_;
}
inline void CSQueryDowerRsp_Dower::set_max_level(::google::protobuf::uint32 value) {
  set_has_max_level();
  max_level_ = value;
}

// required uint32 plus = 4;
inline bool CSQueryDowerRsp_Dower::has_plus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_plus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_has_plus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSQueryDowerRsp_Dower::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::plus() const {
  return plus_;
}
inline void CSQueryDowerRsp_Dower::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 each_plus = 5;
inline bool CSQueryDowerRsp_Dower::has_each_plus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSQueryDowerRsp_Dower::set_has_each_plus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_has_each_plus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSQueryDowerRsp_Dower::clear_each_plus() {
  each_plus_ = 0u;
  clear_has_each_plus();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp_Dower::each_plus() const {
  return each_plus_;
}
inline void CSQueryDowerRsp_Dower::set_each_plus(::google::protobuf::uint32 value) {
  set_has_each_plus();
  each_plus_ = value;
}

// -------------------------------------------------------------------

// CSQueryDowerRsp

// repeated .CSQueryDowerRsp.Dower dower = 1;
inline int CSQueryDowerRsp::dower_size() const {
  return dower_.size();
}
inline void CSQueryDowerRsp::clear_dower() {
  dower_.Clear();
}
inline const ::CSQueryDowerRsp_Dower& CSQueryDowerRsp::dower(int index) const {
  return dower_.Get(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::mutable_dower(int index) {
  return dower_.Mutable(index);
}
inline ::CSQueryDowerRsp_Dower* CSQueryDowerRsp::add_dower() {
  return dower_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >&
CSQueryDowerRsp::dower() const {
  return dower_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSQueryDowerRsp_Dower >*
CSQueryDowerRsp::mutable_dower() {
  return &dower_;
}

// optional uint32 timeout = 2;
inline bool CSQueryDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSQueryDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSQueryDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSQueryDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSQueryDowerRsp::timeout() const {
  return timeout_;
}
inline void CSQueryDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoReq

// required uint32 id = 1;
inline bool CSDowerInfoReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::id() const {
  return id_;
}
inline void CSDowerInfoReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoReq::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoReq::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoReq::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoReq::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoReq::level() const {
  return level_;
}
inline void CSDowerInfoReq::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CSDowerInfoRsp

// required uint32 id = 1;
inline bool CSDowerInfoRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerInfoRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerInfoRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerInfoRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::id() const {
  return id_;
}
inline void CSDowerInfoRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 level = 2;
inline bool CSDowerInfoRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerInfoRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerInfoRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerInfoRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::level() const {
  return level_;
}
inline void CSDowerInfoRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 next_exploit = 3;
inline bool CSDowerInfoRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerInfoRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerInfoRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerInfoRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// required uint32 next_time = 4;
inline bool CSDowerInfoRsp::has_next_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerInfoRsp::set_has_next_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerInfoRsp::clear_has_next_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerInfoRsp::clear_next_time() {
  next_time_ = 0u;
  clear_has_next_time();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::next_time() const {
  return next_time_;
}
inline void CSDowerInfoRsp::set_next_time(::google::protobuf::uint32 value) {
  set_has_next_time();
  next_time_ = value;
}

// required uint32 diff_physical_attack = 5;
inline bool CSDowerInfoRsp::has_diff_physical_attack() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_attack() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_attack() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSDowerInfoRsp::clear_diff_physical_attack() {
  diff_physical_attack_ = 0u;
  clear_has_diff_physical_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_attack() const {
  return diff_physical_attack_;
}
inline void CSDowerInfoRsp::set_diff_physical_attack(::google::protobuf::uint32 value) {
  set_has_diff_physical_attack();
  diff_physical_attack_ = value;
}

// required uint32 diff_magic_attack = 6;
inline bool CSDowerInfoRsp::has_diff_magic_attack() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_attack() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_attack() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSDowerInfoRsp::clear_diff_magic_attack() {
  diff_magic_attack_ = 0u;
  clear_has_diff_magic_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_attack() const {
  return diff_magic_attack_;
}
inline void CSDowerInfoRsp::set_diff_magic_attack(::google::protobuf::uint32 value) {
  set_has_diff_magic_attack();
  diff_magic_attack_ = value;
}

// required uint32 diff_skill_attack = 7;
inline bool CSDowerInfoRsp::has_diff_skill_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSDowerInfoRsp::clear_diff_skill_attack() {
  diff_skill_attack_ = 0u;
  clear_has_diff_skill_attack();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_attack() const {
  return diff_skill_attack_;
}
inline void CSDowerInfoRsp::set_diff_skill_attack(::google::protobuf::uint32 value) {
  set_has_diff_skill_attack();
  diff_skill_attack_ = value;
}

// required uint32 diff_physical_defence = 8;
inline bool CSDowerInfoRsp::has_diff_physical_defence() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_physical_defence() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSDowerInfoRsp::clear_has_diff_physical_defence() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSDowerInfoRsp::clear_diff_physical_defence() {
  diff_physical_defence_ = 0u;
  clear_has_diff_physical_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_physical_defence() const {
  return diff_physical_defence_;
}
inline void CSDowerInfoRsp::set_diff_physical_defence(::google::protobuf::uint32 value) {
  set_has_diff_physical_defence();
  diff_physical_defence_ = value;
}

// required uint32 diff_magic_defence = 9;
inline bool CSDowerInfoRsp::has_diff_magic_defence() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_magic_defence() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CSDowerInfoRsp::clear_has_diff_magic_defence() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CSDowerInfoRsp::clear_diff_magic_defence() {
  diff_magic_defence_ = 0u;
  clear_has_diff_magic_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_magic_defence() const {
  return diff_magic_defence_;
}
inline void CSDowerInfoRsp::set_diff_magic_defence(::google::protobuf::uint32 value) {
  set_has_diff_magic_defence();
  diff_magic_defence_ = value;
}

// required uint32 diff_skill_defence = 10;
inline bool CSDowerInfoRsp::has_diff_skill_defence() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_skill_defence() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CSDowerInfoRsp::clear_has_diff_skill_defence() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CSDowerInfoRsp::clear_diff_skill_defence() {
  diff_skill_defence_ = 0u;
  clear_has_diff_skill_defence();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_skill_defence() const {
  return diff_skill_defence_;
}
inline void CSDowerInfoRsp::set_diff_skill_defence(::google::protobuf::uint32 value) {
  set_has_diff_skill_defence();
  diff_skill_defence_ = value;
}

// required uint32 diff_hp = 11;
inline bool CSDowerInfoRsp::has_diff_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CSDowerInfoRsp::set_has_diff_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CSDowerInfoRsp::clear_has_diff_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CSDowerInfoRsp::clear_diff_hp() {
  diff_hp_ = 0u;
  clear_has_diff_hp();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::diff_hp() const {
  return diff_hp_;
}
inline void CSDowerInfoRsp::set_diff_hp(::google::protobuf::uint32 value) {
  set_has_diff_hp();
  diff_hp_ = value;
}

// required uint32 plus = 12;
inline bool CSDowerInfoRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CSDowerInfoRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CSDowerInfoRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CSDowerInfoRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerInfoRsp::plus() const {
  return plus_;
}
inline void CSDowerInfoRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// -------------------------------------------------------------------

// CSDowerReq

// required uint32 id = 1;
inline bool CSDowerReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSDowerReq::id() const {
  return id_;
}
inline void CSDowerReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// CSDowerRsp

// required uint32 timeout = 1;
inline bool CSDowerRsp::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDowerRsp::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDowerRsp::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDowerRsp::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
inline ::google::protobuf::uint32 CSDowerRsp::timeout() const {
  return timeout_;
}
inline void CSDowerRsp::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
}

// required uint32 level = 2;
inline bool CSDowerRsp::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDowerRsp::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDowerRsp::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDowerRsp::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CSDowerRsp::level() const {
  return level_;
}
inline void CSDowerRsp::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 plus = 3;
inline bool CSDowerRsp::has_plus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDowerRsp::set_has_plus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDowerRsp::clear_has_plus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDowerRsp::clear_plus() {
  plus_ = 0u;
  clear_has_plus();
}
inline ::google::protobuf::uint32 CSDowerRsp::plus() const {
  return plus_;
}
inline void CSDowerRsp::set_plus(::google::protobuf::uint32 value) {
  set_has_plus();
  plus_ = value;
}

// required uint32 next_exploit = 4;
inline bool CSDowerRsp::has_next_exploit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSDowerRsp::set_has_next_exploit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSDowerRsp::clear_has_next_exploit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSDowerRsp::clear_next_exploit() {
  next_exploit_ = 0u;
  clear_has_next_exploit();
}
inline ::google::protobuf::uint32 CSDowerRsp::next_exploit() const {
  return next_exploit_;
}
inline void CSDowerRsp::set_next_exploit(::google::protobuf::uint32 value) {
  set_has_next_exploit();
  next_exploit_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterReq

// required uint32 id = 1;
inline bool CSABMonsterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABMonsterReq::id() const {
  return id_;
}
inline void CSABMonsterReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 instance_type = 2 [default = 1];
inline bool CSABMonsterReq::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterReq::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterReq::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterReq::clear_instance_type() {
  instance_type_ = 1u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABMonsterReq::instance_type() const {
  return instance_type_;
}
inline void CSABMonsterReq::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterRsp_MonInfo

// required uint32 mon_id = 1;
inline bool CSABMonsterRsp_MonInfo::has_mon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterRsp_MonInfo::set_has_mon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterRsp_MonInfo::clear_has_mon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterRsp_MonInfo::clear_mon_id() {
  mon_id_ = 0u;
  clear_has_mon_id();
}
inline ::google::protobuf::uint32 CSABMonsterRsp_MonInfo::mon_id() const {
  return mon_id_;
}
inline void CSABMonsterRsp_MonInfo::set_mon_id(::google::protobuf::uint32 value) {
  set_has_mon_id();
  mon_id_ = value;
}

// required uint32 mon_num = 2;
inline bool CSABMonsterRsp_MonInfo::has_mon_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterRsp_MonInfo::set_has_mon_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterRsp_MonInfo::clear_has_mon_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterRsp_MonInfo::clear_mon_num() {
  mon_num_ = 0u;
  clear_has_mon_num();
}
inline ::google::protobuf::uint32 CSABMonsterRsp_MonInfo::mon_num() const {
  return mon_num_;
}
inline void CSABMonsterRsp_MonInfo::set_mon_num(::google::protobuf::uint32 value) {
  set_has_mon_num();
  mon_num_ = value;
}

// -------------------------------------------------------------------

// CSABMonsterRsp

// required uint32 id = 1;
inline bool CSABMonsterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABMonsterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABMonsterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABMonsterRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABMonsterRsp::id() const {
  return id_;
}
inline void CSABMonsterRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// optional uint32 instance_type = 2;
inline bool CSABMonsterRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABMonsterRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABMonsterRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABMonsterRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABMonsterRsp::instance_type() const {
  return instance_type_;
}
inline void CSABMonsterRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// repeated .CSABMonsterRsp.MonInfo mon_infos = 3;
inline int CSABMonsterRsp::mon_infos_size() const {
  return mon_infos_.size();
}
inline void CSABMonsterRsp::clear_mon_infos() {
  mon_infos_.Clear();
}
inline const ::CSABMonsterRsp_MonInfo& CSABMonsterRsp::mon_infos(int index) const {
  return mon_infos_.Get(index);
}
inline ::CSABMonsterRsp_MonInfo* CSABMonsterRsp::mutable_mon_infos(int index) {
  return mon_infos_.Mutable(index);
}
inline ::CSABMonsterRsp_MonInfo* CSABMonsterRsp::add_mon_infos() {
  return mon_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >&
CSABMonsterRsp::mon_infos() const {
  return mon_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSABMonsterRsp_MonInfo >*
CSABMonsterRsp::mutable_mon_infos() {
  return &mon_infos_;
}

// -------------------------------------------------------------------

// CSAutoBattleReq

// required uint32 id = 1;
inline bool CSAutoBattleReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAutoBattleReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAutoBattleReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAutoBattleReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSAutoBattleReq::id() const {
  return id_;
}
inline void CSAutoBattleReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 param = 2;
inline bool CSAutoBattleReq::has_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAutoBattleReq::set_has_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAutoBattleReq::clear_has_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAutoBattleReq::clear_param() {
  param_ = 0u;
  clear_has_param();
}
inline ::google::protobuf::uint32 CSAutoBattleReq::param() const {
  return param_;
}
inline void CSAutoBattleReq::set_param(::google::protobuf::uint32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// CSAutoBattleRsp

// required uint32 ret = 1;
inline bool CSAutoBattleRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAutoBattleRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAutoBattleRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAutoBattleRsp::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::ret() const {
  return ret_;
}
inline void CSAutoBattleRsp::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
}

// required uint32 id = 2;
inline bool CSAutoBattleRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAutoBattleRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAutoBattleRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAutoBattleRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::id() const {
  return id_;
}
inline void CSAutoBattleRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 instance_type = 3;
inline bool CSAutoBattleRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAutoBattleRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAutoBattleRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAutoBattleRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSAutoBattleRsp::instance_type() const {
  return instance_type_;
}
inline void CSAutoBattleRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// -------------------------------------------------------------------

// CSABRewardRsp

// required uint32 id = 1;
inline bool CSABRewardRsp::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSABRewardRsp::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSABRewardRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSABRewardRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSABRewardRsp::id() const {
  return id_;
}
inline void CSABRewardRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 instance_type = 2;
inline bool CSABRewardRsp::has_instance_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSABRewardRsp::set_has_instance_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSABRewardRsp::clear_has_instance_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSABRewardRsp::clear_instance_type() {
  instance_type_ = 0u;
  clear_has_instance_type();
}
inline ::google::protobuf::uint32 CSABRewardRsp::instance_type() const {
  return instance_type_;
}
inline void CSABRewardRsp::set_instance_type(::google::protobuf::uint32 value) {
  set_has_instance_type();
  instance_type_ = value;
}

// required .CSReward rewards = 3;
inline bool CSABRewardRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSABRewardRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSABRewardRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSABRewardRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSABRewardRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSABRewardRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSABRewardRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSCancelAutoBattleReq

// -------------------------------------------------------------------

// CSCancelAutoBattleRsp

// -------------------------------------------------------------------

// CSExchangeParameterReq

// required uint32 id = 1;
inline bool CSExchangeParameterReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterReq::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::id() const {
  return id_;
}
inline void CSExchangeParameterReq::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 param = 2;
inline int CSExchangeParameterReq::param_size() const {
  return param_.size();
}
inline void CSExchangeParameterReq::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeParameterReq::param(int index) const {
  return param_.Get(index);
}
inline void CSExchangeParameterReq::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSExchangeParameterReq::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeParameterReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeParameterReq::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSExchangeParameterRsp

// required bool succ = 1;
inline bool CSExchangeParameterRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSExchangeParameterRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSExchangeParameterRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSExchangeParameterRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSExchangeParameterRsp::succ() const {
  return succ_;
}
inline void CSExchangeParameterRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// required uint32 id = 2;
inline bool CSExchangeParameterRsp::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSExchangeParameterRsp::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSExchangeParameterRsp::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSExchangeParameterRsp::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::id() const {
  return id_;
}
inline void CSExchangeParameterRsp::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// repeated uint32 param = 3;
inline int CSExchangeParameterRsp::param_size() const {
  return param_.size();
}
inline void CSExchangeParameterRsp::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSExchangeParameterRsp::param(int index) const {
  return param_.Get(index);
}
inline void CSExchangeParameterRsp::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSExchangeParameterRsp::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSExchangeParameterRsp::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSExchangeParameterRsp::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// ShopItemInfo_Item

// required uint32 item_id = 1;
inline bool ShopItemInfo_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo_Item::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_id() const {
  return item_id_;
}
inline void ShopItemInfo_Item::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool ShopItemInfo_Item::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo_Item::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo_Item::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo_Item::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 ShopItemInfo_Item::item_num() const {
  return item_num_;
}
inline void ShopItemInfo_Item::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// ShopItemInfo

// required uint32 index = 1;
inline bool ShopItemInfo::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShopItemInfo::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShopItemInfo::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShopItemInfo::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 ShopItemInfo::index() const {
  return index_;
}
inline void ShopItemInfo::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required .ShopItemInfo.Item from_item = 2;
inline bool ShopItemInfo::has_from_item() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShopItemInfo::set_has_from_item() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShopItemInfo::clear_has_from_item() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShopItemInfo::clear_from_item() {
  if (from_item_ != NULL) from_item_->::ShopItemInfo_Item::Clear();
  clear_has_from_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::from_item() const {
  return from_item_ != NULL ? *from_item_ : *default_instance_->from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_from_item() {
  set_has_from_item();
  if (from_item_ == NULL) from_item_ = new ::ShopItemInfo_Item;
  return from_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_from_item() {
  clear_has_from_item();
  ::ShopItemInfo_Item* temp = from_item_;
  from_item_ = NULL;
  return temp;
}

// required .ShopItemInfo.Item to_item = 3;
inline bool ShopItemInfo::has_to_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShopItemInfo::set_has_to_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShopItemInfo::clear_has_to_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShopItemInfo::clear_to_item() {
  if (to_item_ != NULL) to_item_->::ShopItemInfo_Item::Clear();
  clear_has_to_item();
}
inline const ::ShopItemInfo_Item& ShopItemInfo::to_item() const {
  return to_item_ != NULL ? *to_item_ : *default_instance_->to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::mutable_to_item() {
  set_has_to_item();
  if (to_item_ == NULL) to_item_ = new ::ShopItemInfo_Item;
  return to_item_;
}
inline ::ShopItemInfo_Item* ShopItemInfo::release_to_item() {
  clear_has_to_item();
  ::ShopItemInfo_Item* temp = to_item_;
  to_item_ = NULL;
  return temp;
}

// required bool is_buy = 4;
inline bool ShopItemInfo::has_is_buy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShopItemInfo::set_has_is_buy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShopItemInfo::clear_has_is_buy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShopItemInfo::clear_is_buy() {
  is_buy_ = false;
  clear_has_is_buy();
}
inline bool ShopItemInfo::is_buy() const {
  return is_buy_;
}
inline void ShopItemInfo::set_is_buy(bool value) {
  set_has_is_buy();
  is_buy_ = value;
}

// -------------------------------------------------------------------

// CSGetShopItemsReq

// -------------------------------------------------------------------

// CSGetShopItemsRsp

// repeated .ShopItemInfo items = 1;
inline int CSGetShopItemsRsp::items_size() const {
  return items_.size();
}
inline void CSGetShopItemsRsp::clear_items() {
  items_.Clear();
}
inline const ::ShopItemInfo& CSGetShopItemsRsp::items(int index) const {
  return items_.Get(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::ShopItemInfo* CSGetShopItemsRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >&
CSGetShopItemsRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::ShopItemInfo >*
CSGetShopItemsRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSBuyShopItemReq

// required uint32 index = 1;
inline bool CSBuyShopItemReq::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemReq::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemReq::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemReq::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemReq::index() const {
  return index_;
}
inline void CSBuyShopItemReq::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CSBuyShopItemRsp

// required uint32 index = 1;
inline bool CSBuyShopItemRsp::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSBuyShopItemRsp::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSBuyShopItemRsp::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSBuyShopItemRsp::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CSBuyShopItemRsp::index() const {
  return index_;
}
inline void CSBuyShopItemRsp::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
}

// required bool succ = 2;
inline bool CSBuyShopItemRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSBuyShopItemRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSBuyShopItemRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSBuyShopItemRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSBuyShopItemRsp::succ() const {
  return succ_;
}
inline void CSBuyShopItemRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemReq

// required uint32 userid = 1;
inline bool CSGetUserItemReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::userid() const {
  return userid_;
}
inline void CSGetUserItemReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserItemReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserItemReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserItemReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserItemReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserItemReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserItemReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserItemReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserItemReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserItemReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserItemReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserItemReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserItemRsp

// required uint32 userid = 1;
inline bool CSGetUserItemRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserItemRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserItemRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserItemRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::userid() const {
  return userid_;
}
inline void CSGetUserItemRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserItemRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserItemRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserItemRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserItemRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserItemRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserItemRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserItemRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserItemRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserItemRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserItemRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserItemRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// repeated .CSItemInfo items = 4;
inline int CSGetUserItemRsp::items_size() const {
  return items_.size();
}
inline void CSGetUserItemRsp::clear_items() {
  items_.Clear();
}
inline const ::CSItemInfo& CSGetUserItemRsp::items(int index) const {
  return items_.Get(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSItemInfo* CSGetUserItemRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSItemInfo >&
CSGetUserItemRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSItemInfo >*
CSGetUserItemRsp::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// CSGetUserAttributesReq

// required uint32 userid = 1;
inline bool CSGetUserAttributesReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::userid() const {
  return userid_;
}
inline void CSGetUserAttributesReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserAttributesReq::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserAttributesReq::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserAttributesReq::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserAttributesReq::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::reg_time() const {
  return reg_time_;
}
inline void CSGetUserAttributesReq::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserAttributesReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserAttributesReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserAttributesReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserAttributesReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserAttributesReq::channel_id() const {
  return channel_id_;
}
inline void CSGetUserAttributesReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSGetUserAttributesRsp

// required uint32 userid = 1;
inline bool CSGetUserAttributesRsp::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetUserAttributesRsp::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::userid() const {
  return userid_;
}
inline void CSGetUserAttributesRsp::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_time = 2;
inline bool CSGetUserAttributesRsp::has_reg_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_reg_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_has_reg_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetUserAttributesRsp::clear_reg_time() {
  reg_time_ = 0u;
  clear_has_reg_time();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::reg_time() const {
  return reg_time_;
}
inline void CSGetUserAttributesRsp::set_reg_time(::google::protobuf::uint32 value) {
  set_has_reg_time();
  reg_time_ = value;
}

// required uint32 channel_id = 3;
inline bool CSGetUserAttributesRsp::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetUserAttributesRsp::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetUserAttributesRsp::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSGetUserAttributesRsp::channel_id() const {
  return channel_id_;
}
inline void CSGetUserAttributesRsp::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required .CSAttributesRsp attributes = 4;
inline bool CSGetUserAttributesRsp::has_attributes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetUserAttributesRsp::set_has_attributes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetUserAttributesRsp::clear_has_attributes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetUserAttributesRsp::clear_attributes() {
  if (attributes_ != NULL) attributes_->::CSAttributesRsp::Clear();
  clear_has_attributes();
}
inline const ::CSAttributesRsp& CSGetUserAttributesRsp::attributes() const {
  return attributes_ != NULL ? *attributes_ : *default_instance_->attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::mutable_attributes() {
  set_has_attributes();
  if (attributes_ == NULL) attributes_ = new ::CSAttributesRsp;
  return attributes_;
}
inline ::CSAttributesRsp* CSGetUserAttributesRsp::release_attributes() {
  clear_has_attributes();
  ::CSAttributesRsp* temp = attributes_;
  attributes_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSNotifyMoneyConfInfoRsp

// required uint32 pay = 1;
inline bool CSNotifyMoneyConfInfoRsp::has_pay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_pay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_pay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_pay() {
  pay_ = 0u;
  clear_has_pay();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::pay() const {
  return pay_;
}
inline void CSNotifyMoneyConfInfoRsp::set_pay(::google::protobuf::uint32 value) {
  set_has_pay();
  pay_ = value;
}

// required uint32 diamond = 2;
inline bool CSNotifyMoneyConfInfoRsp::has_diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_diamond() {
  diamond_ = 0u;
  clear_has_diamond();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::diamond() const {
  return diamond_;
}
inline void CSNotifyMoneyConfInfoRsp::set_diamond(::google::protobuf::uint32 value) {
  set_has_diamond();
  diamond_ = value;
}

// required uint32 explore = 3;
inline bool CSNotifyMoneyConfInfoRsp::has_explore() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_explore() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_explore() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_explore() {
  explore_ = 0u;
  clear_has_explore();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::explore() const {
  return explore_;
}
inline void CSNotifyMoneyConfInfoRsp::set_explore(::google::protobuf::uint32 value) {
  set_has_explore();
  explore_ = value;
}

// required uint32 train = 4;
inline bool CSNotifyMoneyConfInfoRsp::has_train() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_train() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_train() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_train() {
  train_ = 0u;
  clear_has_train();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::train() const {
  return train_;
}
inline void CSNotifyMoneyConfInfoRsp::set_train(::google::protobuf::uint32 value) {
  set_has_train();
  train_ = value;
}

// required uint32 hold_on_line_max_exp = 20;
inline bool CSNotifyMoneyConfInfoRsp::has_hold_on_line_max_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNotifyMoneyConfInfoRsp::set_has_hold_on_line_max_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_has_hold_on_line_max_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNotifyMoneyConfInfoRsp::clear_hold_on_line_max_exp() {
  hold_on_line_max_exp_ = 0u;
  clear_has_hold_on_line_max_exp();
}
inline ::google::protobuf::uint32 CSNotifyMoneyConfInfoRsp::hold_on_line_max_exp() const {
  return hold_on_line_max_exp_;
}
inline void CSNotifyMoneyConfInfoRsp::set_hold_on_line_max_exp(::google::protobuf::uint32 value) {
  set_has_hold_on_line_max_exp();
  hold_on_line_max_exp_ = value;
}

// -------------------------------------------------------------------

// CSNotifyLevelConfInfoRsp

// required uint32 pay_money = 1;
inline bool CSNotifyLevelConfInfoRsp::has_pay_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_pay_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_pay_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyLevelConfInfoRsp::clear_pay_money() {
  pay_money_ = 0u;
  clear_has_pay_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::pay_money() const {
  return pay_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_pay_money(::google::protobuf::uint32 value) {
  set_has_pay_money();
  pay_money_ = value;
}

// required uint32 mine_money = 2;
inline bool CSNotifyLevelConfInfoRsp::has_mine_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_mine_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_mine_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyLevelConfInfoRsp::clear_mine_money() {
  mine_money_ = 0u;
  clear_has_mine_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::mine_money() const {
  return mine_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_mine_money(::google::protobuf::uint32 value) {
  set_has_mine_money();
  mine_money_ = value;
}

// required uint32 train_money = 3;
inline bool CSNotifyLevelConfInfoRsp::has_train_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_train_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_train_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNotifyLevelConfInfoRsp::clear_train_money() {
  train_money_ = 0u;
  clear_has_train_money();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::train_money() const {
  return train_money_;
}
inline void CSNotifyLevelConfInfoRsp::set_train_money(::google::protobuf::uint32 value) {
  set_has_train_money();
  train_money_ = value;
}

// required uint32 suspend_limit_exp = 4;
inline bool CSNotifyLevelConfInfoRsp::has_suspend_limit_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNotifyLevelConfInfoRsp::set_has_suspend_limit_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNotifyLevelConfInfoRsp::clear_has_suspend_limit_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNotifyLevelConfInfoRsp::clear_suspend_limit_exp() {
  suspend_limit_exp_ = 0u;
  clear_has_suspend_limit_exp();
}
inline ::google::protobuf::uint32 CSNotifyLevelConfInfoRsp::suspend_limit_exp() const {
  return suspend_limit_exp_;
}
inline void CSNotifyLevelConfInfoRsp::set_suspend_limit_exp(::google::protobuf::uint32 value) {
  set_has_suspend_limit_exp();
  suspend_limit_exp_ = value;
}

// -------------------------------------------------------------------

// CSNotifyVipConfInfoRsp

// required uint32 hold_on_line_max_time = 1;
inline bool CSNotifyVipConfInfoRsp::has_hold_on_line_max_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyVipConfInfoRsp::set_has_hold_on_line_max_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyVipConfInfoRsp::clear_has_hold_on_line_max_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyVipConfInfoRsp::clear_hold_on_line_max_time() {
  hold_on_line_max_time_ = 0u;
  clear_has_hold_on_line_max_time();
}
inline ::google::protobuf::uint32 CSNotifyVipConfInfoRsp::hold_on_line_max_time() const {
  return hold_on_line_max_time_;
}
inline void CSNotifyVipConfInfoRsp::set_hold_on_line_max_time(::google::protobuf::uint32 value) {
  set_has_hold_on_line_max_time();
  hold_on_line_max_time_ = value;
}

// -------------------------------------------------------------------

// CSNotifyCliSysFlagRsp_SysFlag

// required .CSNotifyCliSysFlagRsp.SysIndex sys_index = 1;
inline bool CSNotifyCliSysFlagRsp_SysFlag::has_sys_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_has_sys_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_has_sys_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_sys_index() {
  sys_index_ = 2;
  clear_has_sys_index();
}
inline ::CSNotifyCliSysFlagRsp_SysIndex CSNotifyCliSysFlagRsp_SysFlag::sys_index() const {
  return static_cast< ::CSNotifyCliSysFlagRsp_SysIndex >(sys_index_);
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_sys_index(::CSNotifyCliSysFlagRsp_SysIndex value) {
  GOOGLE_DCHECK(::CSNotifyCliSysFlagRsp_SysIndex_IsValid(value));
  set_has_sys_index();
  sys_index_ = value;
}

// required bool flag = 2;
inline bool CSNotifyCliSysFlagRsp_SysFlag::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool CSNotifyCliSysFlagRsp_SysFlag::flag() const {
  return flag_;
}
inline void CSNotifyCliSysFlagRsp_SysFlag::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// CSNotifyCliSysFlagRsp

// repeated .CSNotifyCliSysFlagRsp.SysFlag sys_flags = 1;
inline int CSNotifyCliSysFlagRsp::sys_flags_size() const {
  return sys_flags_.size();
}
inline void CSNotifyCliSysFlagRsp::clear_sys_flags() {
  sys_flags_.Clear();
}
inline const ::CSNotifyCliSysFlagRsp_SysFlag& CSNotifyCliSysFlagRsp::sys_flags(int index) const {
  return sys_flags_.Get(index);
}
inline ::CSNotifyCliSysFlagRsp_SysFlag* CSNotifyCliSysFlagRsp::mutable_sys_flags(int index) {
  return sys_flags_.Mutable(index);
}
inline ::CSNotifyCliSysFlagRsp_SysFlag* CSNotifyCliSysFlagRsp::add_sys_flags() {
  return sys_flags_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >&
CSNotifyCliSysFlagRsp::sys_flags() const {
  return sys_flags_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSNotifyCliSysFlagRsp_SysFlag >*
CSNotifyCliSysFlagRsp::mutable_sys_flags() {
  return &sys_flags_;
}

// -------------------------------------------------------------------

// PartnerInfo

// required uint32 userid = 1;
inline bool PartnerInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PartnerInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PartnerInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PartnerInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PartnerInfo::userid() const {
  return userid_;
}
inline void PartnerInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool PartnerInfo::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PartnerInfo::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PartnerInfo::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PartnerInfo::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 PartnerInfo::reg_tm() const {
  return reg_tm_;
}
inline void PartnerInfo::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool PartnerInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PartnerInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PartnerInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PartnerInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 PartnerInfo::channel_id() const {
  return channel_id_;
}
inline void PartnerInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool PartnerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PartnerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PartnerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PartnerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PartnerInfo::name() const {
  return *name_;
}
inline void PartnerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PartnerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PartnerInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PartnerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PartnerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 lv = 5;
inline bool PartnerInfo::has_lv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PartnerInfo::set_has_lv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PartnerInfo::clear_has_lv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PartnerInfo::clear_lv() {
  lv_ = 0u;
  clear_has_lv();
}
inline ::google::protobuf::uint32 PartnerInfo::lv() const {
  return lv_;
}
inline void PartnerInfo::set_lv(::google::protobuf::uint32 value) {
  set_has_lv();
  lv_ = value;
}

// required uint32 type = 6;
inline bool PartnerInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PartnerInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PartnerInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PartnerInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 PartnerInfo::type() const {
  return type_;
}
inline void PartnerInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 prestige = 7;
inline bool PartnerInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PartnerInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PartnerInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PartnerInfo::clear_prestige() {
  prestige_ = 0u;
  clear_has_prestige();
}
inline ::google::protobuf::uint32 PartnerInfo::prestige() const {
  return prestige_;
}
inline void PartnerInfo::set_prestige(::google::protobuf::uint32 value) {
  set_has_prestige();
  prestige_ = value;
}

// required uint32 pvai_rank = 8;
inline bool PartnerInfo::has_pvai_rank() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PartnerInfo::set_has_pvai_rank() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PartnerInfo::clear_has_pvai_rank() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PartnerInfo::clear_pvai_rank() {
  pvai_rank_ = 0u;
  clear_has_pvai_rank();
}
inline ::google::protobuf::uint32 PartnerInfo::pvai_rank() const {
  return pvai_rank_;
}
inline void PartnerInfo::set_pvai_rank(::google::protobuf::uint32 value) {
  set_has_pvai_rank();
  pvai_rank_ = value;
}

// -------------------------------------------------------------------

// CSNearByReq

// -------------------------------------------------------------------

// CSNearByRsp

// repeated .PartnerInfo nearby = 1;
inline int CSNearByRsp::nearby_size() const {
  return nearby_.size();
}
inline void CSNearByRsp::clear_nearby() {
  nearby_.Clear();
}
inline const ::PartnerInfo& CSNearByRsp::nearby(int index) const {
  return nearby_.Get(index);
}
inline ::PartnerInfo* CSNearByRsp::mutable_nearby(int index) {
  return nearby_.Mutable(index);
}
inline ::PartnerInfo* CSNearByRsp::add_nearby() {
  return nearby_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSNearByRsp::nearby() const {
  return nearby_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSNearByRsp::mutable_nearby() {
  return &nearby_;
}

// -------------------------------------------------------------------

// CSPartnerInfoReq

// -------------------------------------------------------------------

// CSAddPartnerReq

// required bytes name = 1;
inline bool CSAddPartnerReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddPartnerReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddPartnerReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddPartnerReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSAddPartnerReq::name() const {
  return *name_;
}
inline void CSAddPartnerReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSAddPartnerReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSAddPartnerReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSAddPartnerReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSAddPartnerReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSDelPartnerReq

// required uint32 userid = 1;
inline bool CSDelPartnerReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelPartnerReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelPartnerReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelPartnerReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::userid() const {
  return userid_;
}
inline void CSDelPartnerReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSDelPartnerReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDelPartnerReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDelPartnerReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDelPartnerReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::reg_tm() const {
  return reg_tm_;
}
inline void CSDelPartnerReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSDelPartnerReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDelPartnerReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDelPartnerReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDelPartnerReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSDelPartnerReq::channel_id() const {
  return channel_id_;
}
inline void CSDelPartnerReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSPartnerInfoRsp

// repeated .PartnerInfo partner = 1;
inline int CSPartnerInfoRsp::partner_size() const {
  return partner_.size();
}
inline void CSPartnerInfoRsp::clear_partner() {
  partner_.Clear();
}
inline const ::PartnerInfo& CSPartnerInfoRsp::partner(int index) const {
  return partner_.Get(index);
}
inline ::PartnerInfo* CSPartnerInfoRsp::mutable_partner(int index) {
  return partner_.Mutable(index);
}
inline ::PartnerInfo* CSPartnerInfoRsp::add_partner() {
  return partner_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PartnerInfo >&
CSPartnerInfoRsp::partner() const {
  return partner_;
}
inline ::google::protobuf::RepeatedPtrField< ::PartnerInfo >*
CSPartnerInfoRsp::mutable_partner() {
  return &partner_;
}

// -------------------------------------------------------------------

// CSAddPartnerRsp

// optional .CSAddPartnerRsp.AddPartnerType rsp = 1 [default = succ];
inline bool CSAddPartnerRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddPartnerRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddPartnerRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddPartnerRsp::clear_rsp() {
  rsp_ = 1;
  clear_has_rsp();
}
inline ::CSAddPartnerRsp_AddPartnerType CSAddPartnerRsp::rsp() const {
  return static_cast< ::CSAddPartnerRsp_AddPartnerType >(rsp_);
}
inline void CSAddPartnerRsp::set_rsp(::CSAddPartnerRsp_AddPartnerType value) {
  GOOGLE_DCHECK(::CSAddPartnerRsp_AddPartnerType_IsValid(value));
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSDelPartnerRsp

// required bool succ = 1;
inline bool CSDelPartnerRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelPartnerRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelPartnerRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelPartnerRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSDelPartnerRsp::succ() const {
  return succ_;
}
inline void CSDelPartnerRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// DndInfo

// required uint32 userid = 1;
inline bool DndInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DndInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DndInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DndInfo::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 DndInfo::userid() const {
  return userid_;
}
inline void DndInfo::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool DndInfo::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DndInfo::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DndInfo::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DndInfo::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 DndInfo::reg_tm() const {
  return reg_tm_;
}
inline void DndInfo::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool DndInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DndInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DndInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DndInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 DndInfo::channel_id() const {
  return channel_id_;
}
inline void DndInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// required bytes name = 4;
inline bool DndInfo::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DndInfo::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DndInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DndInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DndInfo::name() const {
  return *name_;
}
inline void DndInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DndInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DndInfo::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DndInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DndInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSAddDndReq

// required uint32 userid = 1;
inline bool CSAddDndReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddDndReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddDndReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddDndReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSAddDndReq::userid() const {
  return userid_;
}
inline void CSAddDndReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSAddDndReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSAddDndReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSAddDndReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSAddDndReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSAddDndReq::reg_tm() const {
  return reg_tm_;
}
inline void CSAddDndReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSAddDndReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSAddDndReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSAddDndReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSAddDndReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSAddDndReq::channel_id() const {
  return channel_id_;
}
inline void CSAddDndReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSDndInfoReq

// -------------------------------------------------------------------

// CSDelDndReq

// required uint32 userid = 1;
inline bool CSDelDndReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelDndReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelDndReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelDndReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSDelDndReq::userid() const {
  return userid_;
}
inline void CSDelDndReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// required uint32 reg_tm = 2;
inline bool CSDelDndReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSDelDndReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSDelDndReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSDelDndReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSDelDndReq::reg_tm() const {
  return reg_tm_;
}
inline void CSDelDndReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// required uint32 channel_id = 3;
inline bool CSDelDndReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSDelDndReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSDelDndReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSDelDndReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSDelDndReq::channel_id() const {
  return channel_id_;
}
inline void CSDelDndReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// -------------------------------------------------------------------

// CSDndInfoRsp

// repeated .DndInfo dnd = 1;
inline int CSDndInfoRsp::dnd_size() const {
  return dnd_.size();
}
inline void CSDndInfoRsp::clear_dnd() {
  dnd_.Clear();
}
inline const ::DndInfo& CSDndInfoRsp::dnd(int index) const {
  return dnd_.Get(index);
}
inline ::DndInfo* CSDndInfoRsp::mutable_dnd(int index) {
  return dnd_.Mutable(index);
}
inline ::DndInfo* CSDndInfoRsp::add_dnd() {
  return dnd_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DndInfo >&
CSDndInfoRsp::dnd() const {
  return dnd_;
}
inline ::google::protobuf::RepeatedPtrField< ::DndInfo >*
CSDndInfoRsp::mutable_dnd() {
  return &dnd_;
}

// -------------------------------------------------------------------

// CSAddDndRsp

// required bool succ = 1;
inline bool CSAddDndRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSAddDndRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSAddDndRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSAddDndRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSAddDndRsp::succ() const {
  return succ_;
}
inline void CSAddDndRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSDelDndRsp

// required bool succ = 1;
inline bool CSDelDndRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelDndRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelDndRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelDndRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSDelDndRsp::succ() const {
  return succ_;
}
inline void CSDelDndRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSNoteReq

// required .NoteType type = 1;
inline bool CSNoteReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteReq::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline NoteType CSNoteReq::type() const {
  return static_cast< NoteType >(type_);
}
inline void CSNoteReq::set_type(NoteType value) {
  GOOGLE_DCHECK(NoteType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required bytes content = 2;
inline bool CSNoteReq::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteReq::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteReq::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSNoteReq::content() const {
  return *content_;
}
inline void CSNoteReq::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteReq::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteReq::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteReq::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSNoteReq::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 seq = 3;
inline bool CSNoteReq::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNoteReq::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNoteReq::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNoteReq::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CSNoteReq::seq() const {
  return seq_;
}
inline void CSNoteReq::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// required bytes name = 4;
inline bool CSNoteReq::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNoteReq::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNoteReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNoteReq::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSNoteReq::name() const {
  return *name_;
}
inline void CSNoteReq::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteReq::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteReq::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteReq::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSNoteReq::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 userid = 5;
inline bool CSNoteReq::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNoteReq::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNoteReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNoteReq::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSNoteReq::userid() const {
  return userid_;
}
inline void CSNoteReq::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_tm = 6;
inline bool CSNoteReq::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSNoteReq::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSNoteReq::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSNoteReq::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSNoteReq::reg_tm() const {
  return reg_tm_;
}
inline void CSNoteReq::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// optional uint32 channel_id = 7;
inline bool CSNoteReq::has_channel_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSNoteReq::set_has_channel_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSNoteReq::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSNoteReq::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSNoteReq::channel_id() const {
  return channel_id_;
}
inline void CSNoteReq::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bool dnd = 8 [default = true];
inline bool CSNoteReq::has_dnd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CSNoteReq::set_has_dnd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CSNoteReq::clear_has_dnd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CSNoteReq::clear_dnd() {
  dnd_ = true;
  clear_has_dnd();
}
inline bool CSNoteReq::dnd() const {
  return dnd_;
}
inline void CSNoteReq::set_dnd(bool value) {
  set_has_dnd();
  dnd_ = value;
}

// -------------------------------------------------------------------

// CSNoteRsp

// required uint32 seq = 1;
inline bool CSNoteRsp::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteRsp::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteRsp::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteRsp::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 CSNoteRsp::seq() const {
  return seq_;
}
inline void CSNoteRsp::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
}

// required bool succ = 2;
inline bool CSNoteRsp::has_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteRsp::set_has_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteRsp::clear_has_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteRsp::clear_succ() {
  succ_ = false;
  clear_has_succ();
}
inline bool CSNoteRsp::succ() const {
  return succ_;
}
inline void CSNoteRsp::set_succ(bool value) {
  set_has_succ();
  succ_ = value;
}

// -------------------------------------------------------------------

// CSNoteShow

// required .NoteType type = 1;
inline bool CSNoteShow::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNoteShow::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNoteShow::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNoteShow::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline NoteType CSNoteShow::type() const {
  return static_cast< NoteType >(type_);
}
inline void CSNoteShow::set_type(NoteType value) {
  GOOGLE_DCHECK(NoteType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required bytes content = 2;
inline bool CSNoteShow::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNoteShow::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNoteShow::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNoteShow::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSNoteShow::content() const {
  return *content_;
}
inline void CSNoteShow::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteShow::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSNoteShow::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteShow::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSNoteShow::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes name = 3;
inline bool CSNoteShow::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSNoteShow::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSNoteShow::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSNoteShow::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CSNoteShow::name() const {
  return *name_;
}
inline void CSNoteShow::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteShow::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CSNoteShow::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNoteShow::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CSNoteShow::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 userid = 4;
inline bool CSNoteShow::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSNoteShow::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSNoteShow::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSNoteShow::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 CSNoteShow::userid() const {
  return userid_;
}
inline void CSNoteShow::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
}

// optional uint32 reg_tm = 5;
inline bool CSNoteShow::has_reg_tm() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSNoteShow::set_has_reg_tm() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSNoteShow::clear_has_reg_tm() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSNoteShow::clear_reg_tm() {
  reg_tm_ = 0u;
  clear_has_reg_tm();
}
inline ::google::protobuf::uint32 CSNoteShow::reg_tm() const {
  return reg_tm_;
}
inline void CSNoteShow::set_reg_tm(::google::protobuf::uint32 value) {
  set_has_reg_tm();
  reg_tm_ = value;
}

// optional uint32 channel_id = 6;
inline bool CSNoteShow::has_channel_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSNoteShow::set_has_channel_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSNoteShow::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSNoteShow::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CSNoteShow::channel_id() const {
  return channel_id_;
}
inline void CSNoteShow::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
}

// optional bool system = 7;
inline bool CSNoteShow::has_system() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSNoteShow::set_has_system() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSNoteShow::clear_has_system() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSNoteShow::clear_system() {
  system_ = false;
  clear_has_system();
}
inline bool CSNoteShow::system() const {
  return system_;
}
inline void CSNoteShow::set_system(bool value) {
  set_has_system();
  system_ = value;
}

// -------------------------------------------------------------------

// CSMailReq

// required uint32 mailid = 1;
inline bool CSMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSMailReq::mailid() const {
  return mailid_;
}
inline void CSMailReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// AttachItem

// required uint32 id = 1;
inline bool AttachItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttachItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttachItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttachItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 AttachItem::id() const {
  return id_;
}
inline void AttachItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 num = 2;
inline bool AttachItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttachItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttachItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttachItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 AttachItem::num() const {
  return num_;
}
inline void AttachItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// CSMailRsp

// required uint32 mailid = 1;
inline bool CSMailRsp::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailRsp::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailRsp::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailRsp::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSMailRsp::mailid() const {
  return mailid_;
}
inline void CSMailRsp::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional bytes title = 2;
inline bool CSMailRsp::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailRsp::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailRsp::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailRsp::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CSMailRsp::title() const {
  return *title_;
}
inline void CSMailRsp::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailRsp::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailRsp::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CSMailRsp::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes from = 3;
inline bool CSMailRsp::has_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMailRsp::set_has_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMailRsp::clear_has_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMailRsp::clear_from() {
  if (from_ != &::google::protobuf::internal::kEmptyString) {
    from_->clear();
  }
  clear_has_from();
}
inline const ::std::string& CSMailRsp::from() const {
  return *from_;
}
inline void CSMailRsp::set_from(const ::std::string& value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailRsp::set_from(const char* value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailRsp::set_from(const void* value, size_t size) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_from() {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  return from_;
}
inline ::std::string* CSMailRsp::release_from() {
  clear_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_;
    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes content = 4;
inline bool CSMailRsp::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMailRsp::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMailRsp::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMailRsp::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSMailRsp::content() const {
  return *content_;
}
inline void CSMailRsp::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailRsp::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailRsp::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSMailRsp::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .AttachItem items = 5;
inline int CSMailRsp::items_size() const {
  return items_.size();
}
inline void CSMailRsp::clear_items() {
  items_.Clear();
}
inline const ::AttachItem& CSMailRsp::items(int index) const {
  return items_.Get(index);
}
inline ::AttachItem* CSMailRsp::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::AttachItem* CSMailRsp::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AttachItem >&
CSMailRsp::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::AttachItem >*
CSMailRsp::mutable_items() {
  return &items_;
}

// required bool hasget = 6;
inline bool CSMailRsp::has_hasget() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMailRsp::set_has_hasget() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMailRsp::clear_has_hasget() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMailRsp::clear_hasget() {
  hasget_ = false;
  clear_has_hasget();
}
inline bool CSMailRsp::hasget() const {
  return hasget_;
}
inline void CSMailRsp::set_hasget(bool value) {
  set_has_hasget();
  hasget_ = value;
}

// required bytes from_tm = 7;
inline bool CSMailRsp::has_from_tm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMailRsp::set_has_from_tm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMailRsp::clear_has_from_tm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMailRsp::clear_from_tm() {
  if (from_tm_ != &::google::protobuf::internal::kEmptyString) {
    from_tm_->clear();
  }
  clear_has_from_tm();
}
inline const ::std::string& CSMailRsp::from_tm() const {
  return *from_tm_;
}
inline void CSMailRsp::set_from_tm(const ::std::string& value) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(value);
}
inline void CSMailRsp::set_from_tm(const char* value) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(value);
}
inline void CSMailRsp::set_from_tm(const void* value, size_t size) {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  from_tm_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailRsp::mutable_from_tm() {
  set_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    from_tm_ = new ::std::string;
  }
  return from_tm_;
}
inline ::std::string* CSMailRsp::release_from_tm() {
  clear_has_from_tm();
  if (from_tm_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_tm_;
    from_tm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MailList

// required uint32 mailid = 1;
inline bool MailList::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailList::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailList::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailList::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailList::mailid() const {
  return mailid_;
}
inline void MailList::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional bytes title = 2;
inline bool MailList::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailList::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailList::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailList::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailList::title() const {
  return *title_;
}
inline void MailList::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailList::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailList::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailList::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MailList::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool hasread = 3;
inline bool MailList::has_hasread() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailList::set_has_hasread() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailList::clear_has_hasread() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailList::clear_hasread() {
  hasread_ = false;
  clear_has_hasread();
}
inline bool MailList::hasread() const {
  return hasread_;
}
inline void MailList::set_hasread(bool value) {
  set_has_hasread();
  hasread_ = value;
}

// required bool hasattach = 4;
inline bool MailList::has_hasattach() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailList::set_has_hasattach() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailList::clear_has_hasattach() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailList::clear_hasattach() {
  hasattach_ = false;
  clear_has_hasattach();
}
inline bool MailList::hasattach() const {
  return hasattach_;
}
inline void MailList::set_hasattach(bool value) {
  set_has_hasattach();
  hasattach_ = value;
}

// -------------------------------------------------------------------

// CSMailListReq

// -------------------------------------------------------------------

// CSMailListRsp

// repeated .MailList maillist = 1;
inline int CSMailListRsp::maillist_size() const {
  return maillist_.size();
}
inline void CSMailListRsp::clear_maillist() {
  maillist_.Clear();
}
inline const ::MailList& CSMailListRsp::maillist(int index) const {
  return maillist_.Get(index);
}
inline ::MailList* CSMailListRsp::mutable_maillist(int index) {
  return maillist_.Mutable(index);
}
inline ::MailList* CSMailListRsp::add_maillist() {
  return maillist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailList >&
CSMailListRsp::maillist() const {
  return maillist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailList >*
CSMailListRsp::mutable_maillist() {
  return &maillist_;
}

// optional .CSMailRsp mail = 2;
inline bool CSMailListRsp::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailListRsp::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailListRsp::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailListRsp::clear_mail() {
  if (mail_ != NULL) mail_->::CSMailRsp::Clear();
  clear_has_mail();
}
inline const ::CSMailRsp& CSMailListRsp::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::CSMailRsp* CSMailListRsp::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::CSMailRsp;
  return mail_;
}
inline ::CSMailRsp* CSMailListRsp::release_mail() {
  clear_has_mail();
  ::CSMailRsp* temp = mail_;
  mail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSDelMailReq

// required uint32 mailid = 1;
inline bool CSDelMailReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelMailReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelMailReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelMailReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSDelMailReq::mailid() const {
  return mailid_;
}
inline void CSDelMailReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// CSDelMailRsp

// required bool rsp = 1;
inline bool CSDelMailRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSDelMailRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSDelMailRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSDelMailRsp::clear_rsp() {
  rsp_ = false;
  clear_has_rsp();
}
inline bool CSDelMailRsp::rsp() const {
  return rsp_;
}
inline void CSDelMailRsp::set_rsp(bool value) {
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSGetAttachReq

// required uint32 mailid = 1;
inline bool CSGetAttachReq::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetAttachReq::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetAttachReq::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetAttachReq::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 CSGetAttachReq::mailid() const {
  return mailid_;
}
inline void CSGetAttachReq::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// CSGetAttachRsp

// required uint32 rsp = 1;
inline bool CSGetAttachRsp::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetAttachRsp::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetAttachRsp::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetAttachRsp::clear_rsp() {
  rsp_ = 0u;
  clear_has_rsp();
}
inline ::google::protobuf::uint32 CSGetAttachRsp::rsp() const {
  return rsp_;
}
inline void CSGetAttachRsp::set_rsp(::google::protobuf::uint32 value) {
  set_has_rsp();
  rsp_ = value;
}

// -------------------------------------------------------------------

// CSNewMailRsp

// -------------------------------------------------------------------

// CSActivityListReq

// -------------------------------------------------------------------

// Activity_Step

// required uint32 step_type = 1;
inline bool Activity_Step::has_step_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity_Step::set_has_step_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity_Step::clear_has_step_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity_Step::clear_step_type() {
  step_type_ = 0u;
  clear_has_step_type();
}
inline ::google::protobuf::uint32 Activity_Step::step_type() const {
  return step_type_;
}
inline void Activity_Step::set_step_type(::google::protobuf::uint32 value) {
  set_has_step_type();
  step_type_ = value;
}

// required uint32 step_id = 2;
inline bool Activity_Step::has_step_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Activity_Step::set_has_step_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Activity_Step::clear_has_step_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Activity_Step::clear_step_id() {
  step_id_ = 0u;
  clear_has_step_id();
}
inline ::google::protobuf::uint32 Activity_Step::step_id() const {
  return step_id_;
}
inline void Activity_Step::set_step_id(::google::protobuf::uint32 value) {
  set_has_step_id();
  step_id_ = value;
}

// required uint32 step_value = 3;
inline bool Activity_Step::has_step_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity_Step::set_has_step_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity_Step::clear_has_step_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity_Step::clear_step_value() {
  step_value_ = 0u;
  clear_has_step_value();
}
inline ::google::protobuf::uint32 Activity_Step::step_value() const {
  return step_value_;
}
inline void Activity_Step::set_step_value(::google::protobuf::uint32 value) {
  set_has_step_value();
  step_value_ = value;
}

// required uint32 is_need_step = 4;
inline bool Activity_Step::has_is_need_step() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity_Step::set_has_is_need_step() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity_Step::clear_has_is_need_step() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity_Step::clear_is_need_step() {
  is_need_step_ = 0u;
  clear_has_is_need_step();
}
inline ::google::protobuf::uint32 Activity_Step::is_need_step() const {
  return is_need_step_;
}
inline void Activity_Step::set_is_need_step(::google::protobuf::uint32 value) {
  set_has_is_need_step();
  is_need_step_ = value;
}

// -------------------------------------------------------------------

// Activity_Info

// required uint32 activity_id = 1;
inline bool Activity_Info::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Activity_Info::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Activity_Info::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Activity_Info::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 Activity_Info::activity_id() const {
  return activity_id_;
}
inline void Activity_Info::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// repeated .Activity_Step activity_steps = 2;
inline int Activity_Info::activity_steps_size() const {
  return activity_steps_.size();
}
inline void Activity_Info::clear_activity_steps() {
  activity_steps_.Clear();
}
inline const ::Activity_Step& Activity_Info::activity_steps(int index) const {
  return activity_steps_.Get(index);
}
inline ::Activity_Step* Activity_Info::mutable_activity_steps(int index) {
  return activity_steps_.Mutable(index);
}
inline ::Activity_Step* Activity_Info::add_activity_steps() {
  return activity_steps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Step >&
Activity_Info::activity_steps() const {
  return activity_steps_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Step >*
Activity_Info::mutable_activity_steps() {
  return &activity_steps_;
}

// required uint32 revc_reward_times = 3;
inline bool Activity_Info::has_revc_reward_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Activity_Info::set_has_revc_reward_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Activity_Info::clear_has_revc_reward_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Activity_Info::clear_revc_reward_times() {
  revc_reward_times_ = 0u;
  clear_has_revc_reward_times();
}
inline ::google::protobuf::uint32 Activity_Info::revc_reward_times() const {
  return revc_reward_times_;
}
inline void Activity_Info::set_revc_reward_times(::google::protobuf::uint32 value) {
  set_has_revc_reward_times();
  revc_reward_times_ = value;
}

// required uint32 status = 4;
inline bool Activity_Info::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Activity_Info::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Activity_Info::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Activity_Info::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 Activity_Info::status() const {
  return status_;
}
inline void Activity_Info::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// CSActivityListRsp

// repeated .Activity_Info activitys = 1;
inline int CSActivityListRsp::activitys_size() const {
  return activitys_.size();
}
inline void CSActivityListRsp::clear_activitys() {
  activitys_.Clear();
}
inline const ::Activity_Info& CSActivityListRsp::activitys(int index) const {
  return activitys_.Get(index);
}
inline ::Activity_Info* CSActivityListRsp::mutable_activitys(int index) {
  return activitys_.Mutable(index);
}
inline ::Activity_Info* CSActivityListRsp::add_activitys() {
  return activitys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
CSActivityListRsp::activitys() const {
  return activitys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
CSActivityListRsp::mutable_activitys() {
  return &activitys_;
}

// -------------------------------------------------------------------

// CSGetActivityRewardReq

// required uint32 activity_id = 1;
inline bool CSGetActivityRewardReq::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRewardReq::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRewardReq::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRewardReq::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRewardReq::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRewardReq::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// repeated uint32 param = 2;
inline int CSGetActivityRewardReq::param_size() const {
  return param_.size();
}
inline void CSGetActivityRewardReq::clear_param() {
  param_.Clear();
}
inline ::google::protobuf::uint32 CSGetActivityRewardReq::param(int index) const {
  return param_.Get(index);
}
inline void CSGetActivityRewardReq::set_param(int index, ::google::protobuf::uint32 value) {
  param_.Set(index, value);
}
inline void CSGetActivityRewardReq::add_param(::google::protobuf::uint32 value) {
  param_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSGetActivityRewardReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSGetActivityRewardReq::mutable_param() {
  return &param_;
}

// -------------------------------------------------------------------

// CSGetActivityRewardRsp

// required uint32 activity_id = 1;
inline bool CSGetActivityRewardRsp::has_activity_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_activity_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetActivityRewardRsp::clear_has_activity_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetActivityRewardRsp::clear_activity_id() {
  activity_id_ = 0u;
  clear_has_activity_id();
}
inline ::google::protobuf::uint32 CSGetActivityRewardRsp::activity_id() const {
  return activity_id_;
}
inline void CSGetActivityRewardRsp::set_activity_id(::google::protobuf::uint32 value) {
  set_has_activity_id();
  activity_id_ = value;
}

// required bool is_succ = 2;
inline bool CSGetActivityRewardRsp::has_is_succ() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_is_succ() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetActivityRewardRsp::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetActivityRewardRsp::clear_is_succ() {
  is_succ_ = false;
  clear_has_is_succ();
}
inline bool CSGetActivityRewardRsp::is_succ() const {
  return is_succ_;
}
inline void CSGetActivityRewardRsp::set_is_succ(bool value) {
  set_has_is_succ();
  is_succ_ = value;
}

// optional .CSReward rewards = 3;
inline bool CSGetActivityRewardRsp::has_rewards() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetActivityRewardRsp::set_has_rewards() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetActivityRewardRsp::clear_has_rewards() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetActivityRewardRsp::clear_rewards() {
  if (rewards_ != NULL) rewards_->::CSReward::Clear();
  clear_has_rewards();
}
inline const ::CSReward& CSGetActivityRewardRsp::rewards() const {
  return rewards_ != NULL ? *rewards_ : *default_instance_->rewards_;
}
inline ::CSReward* CSGetActivityRewardRsp::mutable_rewards() {
  set_has_rewards();
  if (rewards_ == NULL) rewards_ = new ::CSReward;
  return rewards_;
}
inline ::CSReward* CSGetActivityRewardRsp::release_rewards() {
  clear_has_rewards();
  ::CSReward* temp = rewards_;
  rewards_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSUpdateActivityInfoRsp

// repeated .Activity_Info activitys = 1;
inline int CSUpdateActivityInfoRsp::activitys_size() const {
  return activitys_.size();
}
inline void CSUpdateActivityInfoRsp::clear_activitys() {
  activitys_.Clear();
}
inline const ::Activity_Info& CSUpdateActivityInfoRsp::activitys(int index) const {
  return activitys_.Get(index);
}
inline ::Activity_Info* CSUpdateActivityInfoRsp::mutable_activitys(int index) {
  return activitys_.Mutable(index);
}
inline ::Activity_Info* CSUpdateActivityInfoRsp::add_activitys() {
  return activitys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Activity_Info >&
CSUpdateActivityInfoRsp::activitys() const {
  return activitys_;
}
inline ::google::protobuf::RepeatedPtrField< ::Activity_Info >*
CSUpdateActivityInfoRsp::mutable_activitys() {
  return &activitys_;
}

// -------------------------------------------------------------------

// CSDelActivityInfoRsp

// repeated uint32 activity_ids = 1;
inline int CSDelActivityInfoRsp::activity_ids_size() const {
  return activity_ids_.size();
}
inline void CSDelActivityInfoRsp::clear_activity_ids() {
  activity_ids_.Clear();
}
inline ::google::protobuf::uint32 CSDelActivityInfoRsp::activity_ids(int index) const {
  return activity_ids_.Get(index);
}
inline void CSDelActivityInfoRsp::set_activity_ids(int index, ::google::protobuf::uint32 value) {
  activity_ids_.Set(index, value);
}
inline void CSDelActivityInfoRsp::add_activity_ids(::google::protobuf::uint32 value) {
  activity_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CSDelActivityInfoRsp::activity_ids() const {
  return activity_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CSDelActivityInfoRsp::mutable_activity_ids() {
  return &activity_ids_;
}

// -------------------------------------------------------------------

// CSCDEFQueryRoomReq

// -------------------------------------------------------------------

// CDEFRoomBase

// required uint32 room_id = 1;
inline bool CDEFRoomBase::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDEFRoomBase::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDEFRoomBase::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDEFRoomBase::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CDEFRoomBase::room_id() const {
  return room_id_;
}
inline void CDEFRoomBase::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CDEFRoomBase::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDEFRoomBase::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDEFRoomBase::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDEFRoomBase::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CDEFRoomBase::top_level() const {
  return top_level_;
}
inline void CDEFRoomBase::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 current_online = 3;
inline bool CDEFRoomBase::has_current_online() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDEFRoomBase::set_has_current_online() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDEFRoomBase::clear_has_current_online() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDEFRoomBase::clear_current_online() {
  current_online_ = 0u;
  clear_has_current_online();
}
inline ::google::protobuf::uint32 CDEFRoomBase::current_online() const {
  return current_online_;
}
inline void CDEFRoomBase::set_current_online(::google::protobuf::uint32 value) {
  set_has_current_online();
  current_online_ = value;
}

// required uint32 max_online = 4;
inline bool CDEFRoomBase::has_max_online() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDEFRoomBase::set_has_max_online() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDEFRoomBase::clear_has_max_online() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDEFRoomBase::clear_max_online() {
  max_online_ = 0u;
  clear_has_max_online();
}
inline ::google::protobuf::uint32 CDEFRoomBase::max_online() const {
  return max_online_;
}
inline void CDEFRoomBase::set_max_online(::google::protobuf::uint32 value) {
  set_has_max_online();
  max_online_ = value;
}

// -------------------------------------------------------------------

// CSCDEFQueryRoomRsp

// repeated .CDEFRoomBase rooms = 1;
inline int CSCDEFQueryRoomRsp::rooms_size() const {
  return rooms_.size();
}
inline void CSCDEFQueryRoomRsp::clear_rooms() {
  rooms_.Clear();
}
inline const ::CDEFRoomBase& CSCDEFQueryRoomRsp::rooms(int index) const {
  return rooms_.Get(index);
}
inline ::CDEFRoomBase* CSCDEFQueryRoomRsp::mutable_rooms(int index) {
  return rooms_.Mutable(index);
}
inline ::CDEFRoomBase* CSCDEFQueryRoomRsp::add_rooms() {
  return rooms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >&
CSCDEFQueryRoomRsp::rooms() const {
  return rooms_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDEFRoomBase >*
CSCDEFQueryRoomRsp::mutable_rooms() {
  return &rooms_;
}

// -------------------------------------------------------------------

// CSCDEFBaseInfoRsp

// required uint32 countdown = 1;
inline bool CSCDEFBaseInfoRsp::has_countdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFBaseInfoRsp::set_has_countdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFBaseInfoRsp::clear_has_countdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFBaseInfoRsp::clear_countdown() {
  countdown_ = 0u;
  clear_has_countdown();
}
inline ::google::protobuf::uint32 CSCDEFBaseInfoRsp::countdown() const {
  return countdown_;
}
inline void CSCDEFBaseInfoRsp::set_countdown(::google::protobuf::uint32 value) {
  set_has_countdown();
  countdown_ = value;
}

// required uint32 remain_times = 2;
inline bool CSCDEFBaseInfoRsp::has_remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFBaseInfoRsp::set_has_remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFBaseInfoRsp::clear_has_remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFBaseInfoRsp::clear_remain_times() {
  remain_times_ = 0u;
  clear_has_remain_times();
}
inline ::google::protobuf::uint32 CSCDEFBaseInfoRsp::remain_times() const {
  return remain_times_;
}
inline void CSCDEFBaseInfoRsp::set_remain_times(::google::protobuf::uint32 value) {
  set_has_remain_times();
  remain_times_ = value;
}

// -------------------------------------------------------------------

// CSCDEFCreateRoomReq

// required uint32 top_level = 1;
inline bool CSCDEFCreateRoomReq::has_top_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFCreateRoomReq::set_has_top_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFCreateRoomReq::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFCreateRoomReq::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSCDEFCreateRoomReq::top_level() const {
  return top_level_;
}
inline void CSCDEFCreateRoomReq::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// required uint32 battle_id = 2;
inline bool CSCDEFCreateRoomReq::has_battle_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFCreateRoomReq::set_has_battle_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFCreateRoomReq::clear_has_battle_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFCreateRoomReq::clear_battle_id() {
  battle_id_ = 0u;
  clear_has_battle_id();
}
inline ::google::protobuf::uint32 CSCDEFCreateRoomReq::battle_id() const {
  return battle_id_;
}
inline void CSCDEFCreateRoomReq::set_battle_id(::google::protobuf::uint32 value) {
  set_has_battle_id();
  battle_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomReq

// required uint32 room_id = 1;
inline bool CSCDEFJoinRoomReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomReq::room_id() const {
  return room_id_;
}
inline void CSCDEFJoinRoomReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomFailureRsp

// required uint32 errcode = 1;
inline bool CSCDEFJoinRoomFailureRsp::has_errcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomFailureRsp::set_has_errcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomFailureRsp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomFailureRsp::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomFailureRsp::errcode() const {
  return errcode_;
}
inline void CSCDEFJoinRoomFailureRsp::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
}

// -------------------------------------------------------------------

// CDEFSeatBase

// required uint32 id = 1;
inline bool CDEFSeatBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDEFSeatBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDEFSeatBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDEFSeatBase::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CDEFSeatBase::id() const {
  return id_;
}
inline void CDEFSeatBase::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 avatar = 2;
inline bool CDEFSeatBase::has_avatar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDEFSeatBase::set_has_avatar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDEFSeatBase::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDEFSeatBase::clear_avatar() {
  avatar_ = 0u;
  clear_has_avatar();
}
inline ::google::protobuf::uint32 CDEFSeatBase::avatar() const {
  return avatar_;
}
inline void CDEFSeatBase::set_avatar(::google::protobuf::uint32 value) {
  set_has_avatar();
  avatar_ = value;
}

// required bytes name = 3;
inline bool CDEFSeatBase::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDEFSeatBase::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDEFSeatBase::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDEFSeatBase::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CDEFSeatBase::name() const {
  return *name_;
}
inline void CDEFSeatBase::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CDEFSeatBase::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CDEFSeatBase::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CDEFSeatBase::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CDEFSeatBase::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 level = 4;
inline bool CDEFSeatBase::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDEFSeatBase::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDEFSeatBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDEFSeatBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CDEFSeatBase::level() const {
  return level_;
}
inline void CDEFSeatBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required bool ready = 5;
inline bool CDEFSeatBase::has_ready() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDEFSeatBase::set_has_ready() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDEFSeatBase::clear_has_ready() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDEFSeatBase::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool CDEFSeatBase::ready() const {
  return ready_;
}
inline void CDEFSeatBase::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
}

// -------------------------------------------------------------------

// CSCDEFJoinRoomRsp

// required uint32 room_id = 1;
inline bool CSCDEFJoinRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFJoinRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFJoinRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFJoinRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomRsp::room_id() const {
  return room_id_;
}
inline void CSCDEFJoinRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// required uint32 top_level = 2;
inline bool CSCDEFJoinRoomRsp::has_top_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSCDEFJoinRoomRsp::set_has_top_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSCDEFJoinRoomRsp::clear_has_top_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSCDEFJoinRoomRsp::clear_top_level() {
  top_level_ = 0u;
  clear_has_top_level();
}
inline ::google::protobuf::uint32 CSCDEFJoinRoomRsp::top_level() const {
  return top_level_;
}
inline void CSCDEFJoinRoomRsp::set_top_level(::google::protobuf::uint32 value) {
  set_has_top_level();
  top_level_ = value;
}

// repeated .CDEFSeatBase seats = 3;
inline int CSCDEFJoinRoomRsp::seats_size() const {
  return seats_.size();
}
inline void CSCDEFJoinRoomRsp::clear_seats() {
  seats_.Clear();
}
inline const ::CDEFSeatBase& CSCDEFJoinRoomRsp::seats(int index) const {
  return seats_.Get(index);
}
inline ::CDEFSeatBase* CSCDEFJoinRoomRsp::mutable_seats(int index) {
  return seats_.Mutable(index);
}
inline ::CDEFSeatBase* CSCDEFJoinRoomRsp::add_seats() {
  return seats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >&
CSCDEFJoinRoomRsp::seats() const {
  return seats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CDEFSeatBase >*
CSCDEFJoinRoomRsp::mutable_seats() {
  return &seats_;
}

// -------------------------------------------------------------------

// CSCDEFExitRoomReq

// -------------------------------------------------------------------

// CSCDEFCloseRoomRsp

// required uint32 room_id = 1;
inline bool CSCDEFCloseRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFCloseRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFCloseRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFCloseRoomRsp::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 CSCDEFCloseRoomRsp::room_id() const {
  return room_id_;
}
inline void CSCDEFCloseRoomRsp::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
}

// -------------------------------------------------------------------

// CSCDEFReadyReq

// -------------------------------------------------------------------

// CSCDEFCancelReadyReq

// -------------------------------------------------------------------

// CSCDEFKickoffReq

// required uint32 seat = 1;
inline bool CSCDEFKickoffReq::has_seat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFKickoffReq::set_has_seat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFKickoffReq::clear_has_seat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFKickoffReq::clear_seat() {
  seat_ = 0u;
  clear_has_seat();
}
inline ::google::protobuf::uint32 CSCDEFKickoffReq::seat() const {
  return seat_;
}
inline void CSCDEFKickoffReq::set_seat(::google::protobuf::uint32 value) {
  set_has_seat();
  seat_ = value;
}

// -------------------------------------------------------------------

// CSCDEFKickoffRsp

// -------------------------------------------------------------------

// CSCDEFStartReq

// -------------------------------------------------------------------

// CSGetSpecActivityTimeReq

// -------------------------------------------------------------------

// CSGetSpecActivityTimeRsp_Inter

// required uint32 id = 1;
inline bool CSGetSpecActivityTimeRsp_Inter::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Inter::id() const {
  return id_;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 enter_time = 2;
inline bool CSGetSpecActivityTimeRsp_Inter::has_enter_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_has_enter_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_has_enter_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_enter_time() {
  enter_time_ = 0u;
  clear_has_enter_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Inter::enter_time() const {
  return enter_time_;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_enter_time(::google::protobuf::uint32 value) {
  set_has_enter_time();
  enter_time_ = value;
}

// required uint32 start_time = 3;
inline bool CSGetSpecActivityTimeRsp_Inter::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Inter::start_time() const {
  return start_time_;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
}

// required uint32 end_time = 4;
inline bool CSGetSpecActivityTimeRsp_Inter::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSGetSpecActivityTimeRsp_Inter::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 CSGetSpecActivityTimeRsp_Inter::end_time() const {
  return end_time_;
}
inline void CSGetSpecActivityTimeRsp_Inter::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// CSGetSpecActivityTimeRsp

// repeated .CSGetSpecActivityTimeRsp.Inter interval = 1;
inline int CSGetSpecActivityTimeRsp::interval_size() const {
  return interval_.size();
}
inline void CSGetSpecActivityTimeRsp::clear_interval() {
  interval_.Clear();
}
inline const ::CSGetSpecActivityTimeRsp_Inter& CSGetSpecActivityTimeRsp::interval(int index) const {
  return interval_.Get(index);
}
inline ::CSGetSpecActivityTimeRsp_Inter* CSGetSpecActivityTimeRsp::mutable_interval(int index) {
  return interval_.Mutable(index);
}
inline ::CSGetSpecActivityTimeRsp_Inter* CSGetSpecActivityTimeRsp::add_interval() {
  return interval_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >&
CSGetSpecActivityTimeRsp::interval() const {
  return interval_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSGetSpecActivityTimeRsp_Inter >*
CSGetSpecActivityTimeRsp::mutable_interval() {
  return &interval_;
}

// -------------------------------------------------------------------

// CSCDEFStartRsp

// required uint32 mapid = 1;
inline bool CSCDEFStartRsp::has_mapid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSCDEFStartRsp::set_has_mapid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSCDEFStartRsp::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSCDEFStartRsp::clear_mapid() {
  mapid_ = 0u;
  clear_has_mapid();
}
inline ::google::protobuf::uint32 CSCDEFStartRsp::mapid() const {
  return mapid_;
}
inline void CSCDEFStartRsp::set_mapid(::google::protobuf::uint32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// Announcement

// repeated .CSStyle context = 1;
inline int Announcement::context_size() const {
  return context_.size();
}
inline void Announcement::clear_context() {
  context_.Clear();
}
inline const ::CSStyle& Announcement::context(int index) const {
  return context_.Get(index);
}
inline ::CSStyle* Announcement::mutable_context(int index) {
  return context_.Mutable(index);
}
inline ::CSStyle* Announcement::add_context() {
  return context_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSStyle >&
Announcement::context() const {
  return context_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSStyle >*
Announcement::mutable_context() {
  return &context_;
}

// optional uint32 from = 2;
inline bool Announcement::has_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Announcement::set_has_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Announcement::clear_has_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Announcement::clear_from() {
  from_ = 0u;
  clear_has_from();
}
inline ::google::protobuf::uint32 Announcement::from() const {
  return from_;
}
inline void Announcement::set_from(::google::protobuf::uint32 value) {
  set_has_from();
  from_ = value;
}

// optional uint32 to = 3;
inline bool Announcement::has_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Announcement::set_has_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Announcement::clear_has_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Announcement::clear_to() {
  to_ = 0u;
  clear_has_to();
}
inline ::google::protobuf::uint32 Announcement::to() const {
  return to_;
}
inline void Announcement::set_to(::google::protobuf::uint32 value) {
  set_has_to();
  to_ = value;
}

// optional uint32 count = 4;
inline bool Announcement::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Announcement::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Announcement::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Announcement::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Announcement::count() const {
  return count_;
}
inline void Announcement::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// required bytes title = 5;
inline bool Announcement::has_title() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Announcement::set_has_title() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Announcement::clear_has_title() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Announcement::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& Announcement::title() const {
  return *title_;
}
inline void Announcement::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Announcement::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void Announcement::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Announcement::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* Announcement::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSLoginAnnouncementPreRsp

// -------------------------------------------------------------------

// CSLoginAnnouncementRsp

// optional .Announcement content = 1;
inline bool CSLoginAnnouncementRsp::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSLoginAnnouncementRsp::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSLoginAnnouncementRsp::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSLoginAnnouncementRsp::clear_content() {
  if (content_ != NULL) content_->::Announcement::Clear();
  clear_has_content();
}
inline const ::Announcement& CSLoginAnnouncementRsp::content() const {
  return content_ != NULL ? *content_ : *default_instance_->content_;
}
inline ::Announcement* CSLoginAnnouncementRsp::mutable_content() {
  set_has_content();
  if (content_ == NULL) content_ = new ::Announcement;
  return content_;
}
inline ::Announcement* CSLoginAnnouncementRsp::release_content() {
  clear_has_content();
  ::Announcement* temp = content_;
  content_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSAnnouncementPreRsp

// -------------------------------------------------------------------

// CSAnnouncementReq

// -------------------------------------------------------------------

// CSAnnouncementRsp

// repeated .Announcement content = 1;
inline int CSAnnouncementRsp::content_size() const {
  return content_.size();
}
inline void CSAnnouncementRsp::clear_content() {
  content_.Clear();
}
inline const ::Announcement& CSAnnouncementRsp::content(int index) const {
  return content_.Get(index);
}
inline ::Announcement* CSAnnouncementRsp::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::Announcement* CSAnnouncementRsp::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Announcement >&
CSAnnouncementRsp::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::Announcement >*
CSAnnouncementRsp::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// CSMaAdvertisingRsp

// repeated .CSMaStyle content = 1;
inline int CSMaAdvertisingRsp::content_size() const {
  return content_.size();
}
inline void CSMaAdvertisingRsp::clear_content() {
  content_.Clear();
}
inline const ::CSMaStyle& CSMaAdvertisingRsp::content(int index) const {
  return content_.Get(index);
}
inline ::CSMaStyle* CSMaAdvertisingRsp::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::CSMaStyle* CSMaAdvertisingRsp::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMaStyle >&
CSMaAdvertisingRsp::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMaStyle >*
CSMaAdvertisingRsp::mutable_content() {
  return &content_;
}

// required uint32 opt = 2;
inline bool CSMaAdvertisingRsp::has_opt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMaAdvertisingRsp::set_has_opt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMaAdvertisingRsp::clear_has_opt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMaAdvertisingRsp::clear_opt() {
  opt_ = 0u;
  clear_has_opt();
}
inline ::google::protobuf::uint32 CSMaAdvertisingRsp::opt() const {
  return opt_;
}
inline void CSMaAdvertisingRsp::set_opt(::google::protobuf::uint32 value) {
  set_has_opt();
  opt_ = value;
}

// -------------------------------------------------------------------

// CSStyle

// required uint32 red = 1;
inline bool CSStyle::has_red() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSStyle::set_has_red() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSStyle::clear_has_red() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSStyle::clear_red() {
  red_ = 0u;
  clear_has_red();
}
inline ::google::protobuf::uint32 CSStyle::red() const {
  return red_;
}
inline void CSStyle::set_red(::google::protobuf::uint32 value) {
  set_has_red();
  red_ = value;
}

// required uint32 green = 2;
inline bool CSStyle::has_green() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSStyle::set_has_green() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSStyle::clear_has_green() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSStyle::clear_green() {
  green_ = 0u;
  clear_has_green();
}
inline ::google::protobuf::uint32 CSStyle::green() const {
  return green_;
}
inline void CSStyle::set_green(::google::protobuf::uint32 value) {
  set_has_green();
  green_ = value;
}

// required uint32 blue = 3;
inline bool CSStyle::has_blue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSStyle::set_has_blue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSStyle::clear_has_blue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSStyle::clear_blue() {
  blue_ = 0u;
  clear_has_blue();
}
inline ::google::protobuf::uint32 CSStyle::blue() const {
  return blue_;
}
inline void CSStyle::set_blue(::google::protobuf::uint32 value) {
  set_has_blue();
  blue_ = value;
}

// required bytes text = 4;
inline bool CSStyle::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSStyle::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSStyle::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSStyle::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSStyle::text() const {
  return *text_;
}
inline void CSStyle::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSStyle::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSStyle::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSStyle::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CSStyle::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 fontsize = 5;
inline bool CSStyle::has_fontsize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSStyle::set_has_fontsize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSStyle::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSStyle::clear_fontsize() {
  fontsize_ = 0u;
  clear_has_fontsize();
}
inline ::google::protobuf::uint32 CSStyle::fontsize() const {
  return fontsize_;
}
inline void CSStyle::set_fontsize(::google::protobuf::uint32 value) {
  set_has_fontsize();
  fontsize_ = value;
}

// -------------------------------------------------------------------

// CSMaStyle

// required uint32 red = 1;
inline bool CSMaStyle::has_red() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMaStyle::set_has_red() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMaStyle::clear_has_red() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMaStyle::clear_red() {
  red_ = 0u;
  clear_has_red();
}
inline ::google::protobuf::uint32 CSMaStyle::red() const {
  return red_;
}
inline void CSMaStyle::set_red(::google::protobuf::uint32 value) {
  set_has_red();
  red_ = value;
}

// required uint32 green = 2;
inline bool CSMaStyle::has_green() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMaStyle::set_has_green() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMaStyle::clear_has_green() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMaStyle::clear_green() {
  green_ = 0u;
  clear_has_green();
}
inline ::google::protobuf::uint32 CSMaStyle::green() const {
  return green_;
}
inline void CSMaStyle::set_green(::google::protobuf::uint32 value) {
  set_has_green();
  green_ = value;
}

// required uint32 blue = 3;
inline bool CSMaStyle::has_blue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMaStyle::set_has_blue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMaStyle::clear_has_blue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMaStyle::clear_blue() {
  blue_ = 0u;
  clear_has_blue();
}
inline ::google::protobuf::uint32 CSMaStyle::blue() const {
  return blue_;
}
inline void CSMaStyle::set_blue(::google::protobuf::uint32 value) {
  set_has_blue();
  blue_ = value;
}

// required bytes text = 4;
inline bool CSMaStyle::has_text() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMaStyle::set_has_text() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMaStyle::clear_has_text() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMaStyle::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CSMaStyle::text() const {
  return *text_;
}
inline void CSMaStyle::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSMaStyle::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CSMaStyle::set_text(const void* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMaStyle::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CSMaStyle::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CSNotifyRewardToOtherRsp

// required bytes player_name = 1;
inline bool CSNotifyRewardToOtherRsp::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSNotifyRewardToOtherRsp::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSNotifyRewardToOtherRsp::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSNotifyRewardToOtherRsp::clear_player_name() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    player_name_->clear();
  }
  clear_has_player_name();
}
inline const ::std::string& CSNotifyRewardToOtherRsp::player_name() const {
  return *player_name_;
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const ::std::string& value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const char* value) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(value);
}
inline void CSNotifyRewardToOtherRsp::set_player_name(const void* value, size_t size) {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  player_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSNotifyRewardToOtherRsp::mutable_player_name() {
  set_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    player_name_ = new ::std::string;
  }
  return player_name_;
}
inline ::std::string* CSNotifyRewardToOtherRsp::release_player_name() {
  clear_has_player_name();
  if (player_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_name_;
    player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .CSReward reward = 2;
inline bool CSNotifyRewardToOtherRsp::has_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSNotifyRewardToOtherRsp::set_has_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSNotifyRewardToOtherRsp::clear_has_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSNotifyRewardToOtherRsp::clear_reward() {
  if (reward_ != NULL) reward_->::CSReward::Clear();
  clear_has_reward();
}
inline const ::CSReward& CSNotifyRewardToOtherRsp::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::CSReward* CSNotifyRewardToOtherRsp::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::CSReward;
  return reward_;
}
inline ::CSReward* CSNotifyRewardToOtherRsp::release_reward() {
  clear_has_reward();
  ::CSReward* temp = reward_;
  reward_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// CSMailInfo_Item_AM_t

// required uint32 item_id = 1;
inline bool CSMailInfo_Item_AM_t::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailInfo_Item_AM_t::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailInfo_Item_AM_t::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailInfo_Item_AM_t::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CSMailInfo_Item_AM_t::item_id() const {
  return item_id_;
}
inline void CSMailInfo_Item_AM_t::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
}

// required uint32 item_num = 2;
inline bool CSMailInfo_Item_AM_t::has_item_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailInfo_Item_AM_t::set_has_item_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailInfo_Item_AM_t::clear_has_item_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailInfo_Item_AM_t::clear_item_num() {
  item_num_ = 0u;
  clear_has_item_num();
}
inline ::google::protobuf::uint32 CSMailInfo_Item_AM_t::item_num() const {
  return item_num_;
}
inline void CSMailInfo_Item_AM_t::set_item_num(::google::protobuf::uint32 value) {
  set_has_item_num();
  item_num_ = value;
}

// -------------------------------------------------------------------

// CSMailInfo

// required uint32 mail_id_high = 1;
inline bool CSMailInfo::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMailInfo::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMailInfo::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMailInfo::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_id_high() const {
  return mail_id_high_;
}
inline void CSMailInfo::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSMailInfo::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMailInfo::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMailInfo::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMailInfo::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_id_low() const {
  return mail_id_low_;
}
inline void CSMailInfo::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required bytes title = 3;
inline bool CSMailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMailInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CSMailInfo::title() const {
  return *title_;
}
inline void CSMailInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CSMailInfo::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CSMailInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes from = 4;
inline bool CSMailInfo::has_from() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMailInfo::set_has_from() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMailInfo::clear_has_from() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMailInfo::clear_from() {
  if (from_ != &::google::protobuf::internal::kEmptyString) {
    from_->clear();
  }
  clear_has_from();
}
inline const ::std::string& CSMailInfo::from() const {
  return *from_;
}
inline void CSMailInfo::set_from(const ::std::string& value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailInfo::set_from(const char* value) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(value);
}
inline void CSMailInfo::set_from(const void* value, size_t size) {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  from_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_from() {
  set_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    from_ = new ::std::string;
  }
  return from_;
}
inline ::std::string* CSMailInfo::release_from() {
  clear_has_from();
  if (from_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = from_;
    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes content = 5;
inline bool CSMailInfo::has_content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMailInfo::set_has_content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMailInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMailInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CSMailInfo::content() const {
  return *content_;
}
inline void CSMailInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CSMailInfo::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMailInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CSMailInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .CSMailInfo.Item_AM_t items = 6;
inline int CSMailInfo::items_size() const {
  return items_.size();
}
inline void CSMailInfo::clear_items() {
  items_.Clear();
}
inline const ::CSMailInfo_Item_AM_t& CSMailInfo::items(int index) const {
  return items_.Get(index);
}
inline ::CSMailInfo_Item_AM_t* CSMailInfo::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::CSMailInfo_Item_AM_t* CSMailInfo::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo_Item_AM_t >&
CSMailInfo::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo_Item_AM_t >*
CSMailInfo::mutable_items() {
  return &items_;
}

// required uint32 mail_status = 7;
inline bool CSMailInfo::has_mail_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMailInfo::set_has_mail_status() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMailInfo::clear_has_mail_status() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMailInfo::clear_mail_status() {
  mail_status_ = 0u;
  clear_has_mail_status();
}
inline ::google::protobuf::uint32 CSMailInfo::mail_status() const {
  return mail_status_;
}
inline void CSMailInfo::set_mail_status(::google::protobuf::uint32 value) {
  set_has_mail_status();
  mail_status_ = value;
}

// -------------------------------------------------------------------

// CSGetMailListReq

// required uint32 page_num = 1;
inline bool CSGetMailListReq::has_page_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailListReq::set_has_page_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailListReq::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailListReq::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
inline ::google::protobuf::uint32 CSGetMailListReq::page_num() const {
  return page_num_;
}
inline void CSGetMailListReq::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
}

// -------------------------------------------------------------------

// CSGetMailListRsp

// required uint32 page_num = 1;
inline bool CSGetMailListRsp::has_page_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSGetMailListRsp::set_has_page_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSGetMailListRsp::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSGetMailListRsp::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
inline ::google::protobuf::uint32 CSGetMailListRsp::page_num() const {
  return page_num_;
}
inline void CSGetMailListRsp::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
}

// repeated .CSMailInfo mails = 2;
inline int CSGetMailListRsp::mails_size() const {
  return mails_.size();
}
inline void CSGetMailListRsp::clear_mails() {
  mails_.Clear();
}
inline const ::CSMailInfo& CSGetMailListRsp::mails(int index) const {
  return mails_.Get(index);
}
inline ::CSMailInfo* CSGetMailListRsp::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::CSMailInfo* CSGetMailListRsp::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CSMailInfo >&
CSGetMailListRsp::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::CSMailInfo >*
CSGetMailListRsp::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// CSSetMailStatusReq

// required uint32 mail_id_high = 1;
inline bool CSSetMailStatusReq::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMailStatusReq::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMailStatusReq::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMailStatusReq::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSSetMailStatusReq::mail_id_high() const {
  return mail_id_high_;
}
inline void CSSetMailStatusReq::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSSetMailStatusReq::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMailStatusReq::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMailStatusReq::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMailStatusReq::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSSetMailStatusReq::mail_id_low() const {
  return mail_id_low_;
}
inline void CSSetMailStatusReq::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required uint32 new_status = 3;
inline bool CSSetMailStatusReq::has_new_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetMailStatusReq::set_has_new_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetMailStatusReq::clear_has_new_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetMailStatusReq::clear_new_status() {
  new_status_ = 0u;
  clear_has_new_status();
}
inline ::google::protobuf::uint32 CSSetMailStatusReq::new_status() const {
  return new_status_;
}
inline void CSSetMailStatusReq::set_new_status(::google::protobuf::uint32 value) {
  set_has_new_status();
  new_status_ = value;
}

// -------------------------------------------------------------------

// CSSetMailStatusRsp

// required uint32 mail_id_high = 1;
inline bool CSSetMailStatusRsp::has_mail_id_high() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSSetMailStatusRsp::set_has_mail_id_high() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSSetMailStatusRsp::clear_has_mail_id_high() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSSetMailStatusRsp::clear_mail_id_high() {
  mail_id_high_ = 0u;
  clear_has_mail_id_high();
}
inline ::google::protobuf::uint32 CSSetMailStatusRsp::mail_id_high() const {
  return mail_id_high_;
}
inline void CSSetMailStatusRsp::set_mail_id_high(::google::protobuf::uint32 value) {
  set_has_mail_id_high();
  mail_id_high_ = value;
}

// required uint32 mail_id_low = 2;
inline bool CSSetMailStatusRsp::has_mail_id_low() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSSetMailStatusRsp::set_has_mail_id_low() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSSetMailStatusRsp::clear_has_mail_id_low() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSSetMailStatusRsp::clear_mail_id_low() {
  mail_id_low_ = 0u;
  clear_has_mail_id_low();
}
inline ::google::protobuf::uint32 CSSetMailStatusRsp::mail_id_low() const {
  return mail_id_low_;
}
inline void CSSetMailStatusRsp::set_mail_id_low(::google::protobuf::uint32 value) {
  set_has_mail_id_low();
  mail_id_low_ = value;
}

// required uint32 mail_status = 3;
inline bool CSSetMailStatusRsp::has_mail_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSSetMailStatusRsp::set_has_mail_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSSetMailStatusRsp::clear_has_mail_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSSetMailStatusRsp::clear_mail_status() {
  mail_status_ = 0u;
  clear_has_mail_status();
}
inline ::google::protobuf::uint32 CSSetMailStatusRsp::mail_status() const {
  return mail_status_;
}
inline void CSSetMailStatusRsp::set_mail_status(::google::protobuf::uint32 value) {
  set_has_mail_status();
  mail_status_ = value;
}

// -------------------------------------------------------------------

// CSNotifyHasNewMailRsp


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSNotifyCliSysFlagRsp_SysIndex>() {
  return ::CSNotifyCliSysFlagRsp_SysIndex_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CSAddPartnerRsp_AddPartnerType>() {
  return ::CSAddPartnerRsp_AddPartnerType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_PLAYET_ATTR_T>() {
  return PB_PLAYET_ATTR_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_ITEM_ATTR_T>() {
  return PB_ITEM_ATTR_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_TASK_STATUS_T>() {
  return PB_TASK_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_INSTANCE_TYPE_T>() {
  return PB_INSTANCE_TYPE_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< NoteType>() {
  return NoteType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_ACTIVITY_STATUS_T>() {
  return PB_ACTIVITY_STATUS_T_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< PB_MAIL_STATUS_T>() {
  return PB_MAIL_STATUS_T_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cs_5fcore_2eproto__INCLUDED
